apiVersion: v1
kind: Service
metadata:
  # This service only exists to create DNS entries for each pod in the stateful
  # set such that they can resolve each other's IP addresses. It does not
  # create a load-balanced ClusterIP and should not be used directly by clients
  # in most circumstances.
  name: grpc-backend
  labels:
    app: grpc-backend
  annotations:
    # Enable automatic monitoring of all instances when Prometheus is running in the cluster.
    prometheus.io/scrape: "true"
    prometheus.io/path: "_status/vars"
    prometheus.io/port: "8080"
spec:
  ports:
  - port: 8081
    targetPort: 8081
    name: grpc
  clusterIP: None
  selector:
    app: grpc-backend
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: grpc-backend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: grpc-backend
    spec:
      volumes:
      - name: client-certs
        secret:
          secretName: cockroachdb.client.root
          defaultMode: 256
      - name: public-certs
        secret:
          secretName: dss.public.certs
          defaultMode: 256
      containers:
      - name: grpc-backend
        image: grpc-backend:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8081
          name: grpc
        volumeMounts:
        - name: client-certs
          mountPath: /cockroach-certs
        - name: public-certs
          mountPath: /public-certs
        command:
          - "/bin/bash"
          - "-ecx"
          - "exec ./main.go -port=8081 -public_key_file=/public-certs/YOUR_CERTS_FILE"
