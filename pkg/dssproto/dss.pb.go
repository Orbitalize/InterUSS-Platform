// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/dssproto/dss.proto

package dssproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HorizontalAccuracy int32

const (
	HorizontalAccuracy_HA_UNKNOWN    HorizontalAccuracy = 0
	HorizontalAccuracy_H_A10_NM_PLUS HorizontalAccuracy = 1
	HorizontalAccuracy_H_A10_NM      HorizontalAccuracy = 2
	HorizontalAccuracy_H_A4_NM       HorizontalAccuracy = 3
	HorizontalAccuracy_H_A2_NM       HorizontalAccuracy = 4
	HorizontalAccuracy_H_A1_NM       HorizontalAccuracy = 5
	HorizontalAccuracy_H_A05_NM      HorizontalAccuracy = 6
	HorizontalAccuracy_H_A03_NM      HorizontalAccuracy = 7
	HorizontalAccuracy_H_A01_NM      HorizontalAccuracy = 8
	HorizontalAccuracy_H_A005_NM     HorizontalAccuracy = 9
	HorizontalAccuracy_H_A30M        HorizontalAccuracy = 10
	HorizontalAccuracy_H_A10M        HorizontalAccuracy = 11
	HorizontalAccuracy_H_A3M         HorizontalAccuracy = 12
	HorizontalAccuracy_H_A1M         HorizontalAccuracy = 13
)

var HorizontalAccuracy_name = map[int32]string{
	0:  "HA_UNKNOWN",
	1:  "H_A10_NM_PLUS",
	2:  "H_A10_NM",
	3:  "H_A4_NM",
	4:  "H_A2_NM",
	5:  "H_A1_NM",
	6:  "H_A05_NM",
	7:  "H_A03_NM",
	8:  "H_A01_NM",
	9:  "H_A005_NM",
	10: "H_A30M",
	11: "H_A10M",
	12: "H_A3M",
	13: "H_A1M",
}

var HorizontalAccuracy_value = map[string]int32{
	"HA_UNKNOWN":    0,
	"H_A10_NM_PLUS": 1,
	"H_A10_NM":      2,
	"H_A4_NM":       3,
	"H_A2_NM":       4,
	"H_A1_NM":       5,
	"H_A05_NM":      6,
	"H_A03_NM":      7,
	"H_A01_NM":      8,
	"H_A005_NM":     9,
	"H_A30M":        10,
	"H_A10M":        11,
	"H_A3M":         12,
	"H_A1M":         13,
}

func (x HorizontalAccuracy) String() string {
	return proto.EnumName(HorizontalAccuracy_name, int32(x))
}

func (HorizontalAccuracy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{0}
}

type RIDAircraftType int32

const (
	RIDAircraftType_NOT_DECLARED              RIDAircraftType = 0
	RIDAircraftType_AEROPLANE                 RIDAircraftType = 1
	RIDAircraftType_ROTORCRAFT                RIDAircraftType = 2
	RIDAircraftType_GYROPLANE                 RIDAircraftType = 3
	RIDAircraftType_VTOL                      RIDAircraftType = 4
	RIDAircraftType_ORNITHOPTER               RIDAircraftType = 5
	RIDAircraftType_GLIDER                    RIDAircraftType = 6
	RIDAircraftType_KITE                      RIDAircraftType = 7
	RIDAircraftType_FREE_BALLOON              RIDAircraftType = 8
	RIDAircraftType_CAPTIVE_BALLOON           RIDAircraftType = 9
	RIDAircraftType_AIRSHIP                   RIDAircraftType = 10
	RIDAircraftType_FREE_FALL_OR_PARACHUTE    RIDAircraftType = 11
	RIDAircraftType_ROCKET                    RIDAircraftType = 12
	RIDAircraftType_TETHERED_POWERED_AIRCRAFT RIDAircraftType = 13
	RIDAircraftType_GROUND_OBSTACLE           RIDAircraftType = 14
	RIDAircraftType_OTHER                     RIDAircraftType = 15
)

var RIDAircraftType_name = map[int32]string{
	0:  "NOT_DECLARED",
	1:  "AEROPLANE",
	2:  "ROTORCRAFT",
	3:  "GYROPLANE",
	4:  "VTOL",
	5:  "ORNITHOPTER",
	6:  "GLIDER",
	7:  "KITE",
	8:  "FREE_BALLOON",
	9:  "CAPTIVE_BALLOON",
	10: "AIRSHIP",
	11: "FREE_FALL_OR_PARACHUTE",
	12: "ROCKET",
	13: "TETHERED_POWERED_AIRCRAFT",
	14: "GROUND_OBSTACLE",
	15: "OTHER",
}

var RIDAircraftType_value = map[string]int32{
	"NOT_DECLARED":              0,
	"AEROPLANE":                 1,
	"ROTORCRAFT":                2,
	"GYROPLANE":                 3,
	"VTOL":                      4,
	"ORNITHOPTER":               5,
	"GLIDER":                    6,
	"KITE":                      7,
	"FREE_BALLOON":              8,
	"CAPTIVE_BALLOON":           9,
	"AIRSHIP":                   10,
	"FREE_FALL_OR_PARACHUTE":    11,
	"ROCKET":                    12,
	"TETHERED_POWERED_AIRCRAFT": 13,
	"GROUND_OBSTACLE":           14,
	"OTHER":                     15,
}

func (x RIDAircraftType) String() string {
	return proto.EnumName(RIDAircraftType_name, int32(x))
}

func (RIDAircraftType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{1}
}

type RIDOperationalStatus int32

const (
	RIDOperationalStatus_UNDECLARED RIDOperationalStatus = 0
	RIDOperationalStatus_GROUND     RIDOperationalStatus = 1
	RIDOperationalStatus_AIRBORNE   RIDOperationalStatus = 2
)

var RIDOperationalStatus_name = map[int32]string{
	0: "UNDECLARED",
	1: "GROUND",
	2: "AIRBORNE",
}

var RIDOperationalStatus_value = map[string]int32{
	"UNDECLARED": 0,
	"GROUND":     1,
	"AIRBORNE":   2,
}

func (x RIDOperationalStatus) String() string {
	return proto.EnumName(RIDOperationalStatus_name, int32(x))
}

func (RIDOperationalStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{2}
}

type SpeedAccuracy int32

const (
	SpeedAccuracy_SA_UNKNOWN    SpeedAccuracy = 0
	SpeedAccuracy_S_A10MPS_PLUS SpeedAccuracy = 1
	SpeedAccuracy_S_A10MPS      SpeedAccuracy = 2
	SpeedAccuracy_S_A3MPS       SpeedAccuracy = 3
	SpeedAccuracy_S_A1MPS       SpeedAccuracy = 4
	SpeedAccuracy_S_A03MPS      SpeedAccuracy = 5
)

var SpeedAccuracy_name = map[int32]string{
	0: "SA_UNKNOWN",
	1: "S_A10MPS_PLUS",
	2: "S_A10MPS",
	3: "S_A3MPS",
	4: "S_A1MPS",
	5: "S_A03MPS",
}

var SpeedAccuracy_value = map[string]int32{
	"SA_UNKNOWN":    0,
	"S_A10MPS_PLUS": 1,
	"S_A10MPS":      2,
	"S_A3MPS":       3,
	"S_A1MPS":       4,
	"S_A03MPS":      5,
}

func (x SpeedAccuracy) String() string {
	return proto.EnumName(SpeedAccuracy_name, int32(x))
}

func (SpeedAccuracy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{3}
}

type VerticalAccuracy int32

const (
	VerticalAccuracy_VA_UNKNOWN   VerticalAccuracy = 0
	VerticalAccuracy_V_A150M_PLUS VerticalAccuracy = 1
	VerticalAccuracy_V_A150M      VerticalAccuracy = 2
	VerticalAccuracy_V_A45M       VerticalAccuracy = 3
	VerticalAccuracy_V_A25M       VerticalAccuracy = 4
	VerticalAccuracy_V_A10M       VerticalAccuracy = 5
	VerticalAccuracy_V_A3M        VerticalAccuracy = 6
	VerticalAccuracy_V_A1M        VerticalAccuracy = 7
)

var VerticalAccuracy_name = map[int32]string{
	0: "VA_UNKNOWN",
	1: "V_A150M_PLUS",
	2: "V_A150M",
	3: "V_A45M",
	4: "V_A25M",
	5: "V_A10M",
	6: "V_A3M",
	7: "V_A1M",
}

var VerticalAccuracy_value = map[string]int32{
	"VA_UNKNOWN":   0,
	"V_A150M_PLUS": 1,
	"V_A150M":      2,
	"V_A45M":       3,
	"V_A25M":       4,
	"V_A10M":       5,
	"V_A3M":        6,
	"V_A1M":        7,
}

func (x VerticalAccuracy) String() string {
	return proto.EnumName(VerticalAccuracy_name, int32(x))
}

func (VerticalAccuracy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{4}
}

type RIDHeight_RIDHeightReference int32

const (
	RIDHeight_RID_HEIGHT_REFERENCE_TAKEOFF_LOCATION RIDHeight_RIDHeightReference = 0
	RIDHeight_RID_HEIGHT_REFERENCE_GROUND_LEVEL     RIDHeight_RIDHeightReference = 1
)

var RIDHeight_RIDHeightReference_name = map[int32]string{
	0: "RID_HEIGHT_REFERENCE_TAKEOFF_LOCATION",
	1: "RID_HEIGHT_REFERENCE_GROUND_LEVEL",
}

var RIDHeight_RIDHeightReference_value = map[string]int32{
	"RID_HEIGHT_REFERENCE_TAKEOFF_LOCATION": 0,
	"RID_HEIGHT_REFERENCE_GROUND_LEVEL":     1,
}

func (x RIDHeight_RIDHeightReference) String() string {
	return proto.EnumName(RIDHeight_RIDHeightReference_name, int32(x))
}

func (RIDHeight_RIDHeightReference) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{30, 0}
}

// Parameters for a request to create an Identification Service Area in the DSS.
type CreateIdentificationServiceAreaParameters struct {
	// The bounding spacetime extents of this Identification Service Area.  End time must be specified.  If start time is not specified, it will be set to the current time.  Start times in the past should be rejected by the DSS, except that it may adjust very recent start times to the current time.
	//
	// These extents should not reveal any sensitive information about the flight or flights within them.  This means, for instance, that extents should not tightly-wrap a flight path, nor should they generally be centered around the takeoff point of a single flight.
	Extents              *Volume4D `protobuf:"bytes,1,opt,name=extents,proto3" json:"extents,omitempty"`
	FlightsUrl           string    `protobuf:"bytes,2,opt,name=flights_url,json=flightsUrl,proto3" json:"flights_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateIdentificationServiceAreaParameters) Reset() {
	*m = CreateIdentificationServiceAreaParameters{}
}
func (m *CreateIdentificationServiceAreaParameters) String() string { return proto.CompactTextString(m) }
func (*CreateIdentificationServiceAreaParameters) ProtoMessage()    {}
func (*CreateIdentificationServiceAreaParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{0}
}

func (m *CreateIdentificationServiceAreaParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIdentificationServiceAreaParameters.Unmarshal(m, b)
}
func (m *CreateIdentificationServiceAreaParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIdentificationServiceAreaParameters.Marshal(b, m, deterministic)
}
func (m *CreateIdentificationServiceAreaParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIdentificationServiceAreaParameters.Merge(m, src)
}
func (m *CreateIdentificationServiceAreaParameters) XXX_Size() int {
	return xxx_messageInfo_CreateIdentificationServiceAreaParameters.Size(m)
}
func (m *CreateIdentificationServiceAreaParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIdentificationServiceAreaParameters.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIdentificationServiceAreaParameters proto.InternalMessageInfo

func (m *CreateIdentificationServiceAreaParameters) GetExtents() *Volume4D {
	if m != nil {
		return m.Extents
	}
	return nil
}

func (m *CreateIdentificationServiceAreaParameters) GetFlightsUrl() string {
	if m != nil {
		return m.FlightsUrl
	}
	return ""
}

// Parameters for a request to create a subscription in the DSS.
type CreateSubscriptionParameters struct {
	Callbacks *SubscriptionCallbacks `protobuf:"bytes,1,opt,name=callbacks,proto3" json:"callbacks,omitempty"`
	// The spacetime extents of the volume to subscribe to.
	//
	// This subscription will automatically be deleted after its end time if it has not been refreshed by then.  If end time is not specified, the value will be chosen automatically by the DSS.
	//
	// Note that some Entities triggering notifications may lie entirely outside the requested area.
	Extents              *Volume4D `protobuf:"bytes,2,opt,name=extents,proto3" json:"extents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateSubscriptionParameters) Reset()         { *m = CreateSubscriptionParameters{} }
func (m *CreateSubscriptionParameters) String() string { return proto.CompactTextString(m) }
func (*CreateSubscriptionParameters) ProtoMessage()    {}
func (*CreateSubscriptionParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{1}
}

func (m *CreateSubscriptionParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubscriptionParameters.Unmarshal(m, b)
}
func (m *CreateSubscriptionParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubscriptionParameters.Marshal(b, m, deterministic)
}
func (m *CreateSubscriptionParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubscriptionParameters.Merge(m, src)
}
func (m *CreateSubscriptionParameters) XXX_Size() int {
	return xxx_messageInfo_CreateSubscriptionParameters.Size(m)
}
func (m *CreateSubscriptionParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubscriptionParameters.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubscriptionParameters proto.InternalMessageInfo

func (m *CreateSubscriptionParameters) GetCallbacks() *SubscriptionCallbacks {
	if m != nil {
		return m.Callbacks
	}
	return nil
}

func (m *CreateSubscriptionParameters) GetExtents() *Volume4D {
	if m != nil {
		return m.Extents
	}
	return nil
}

// Response for a request to delete an Identification Service Area.
type DeleteIdentificationServiceAreaResponse struct {
	// Indentification Service Area that was just deleted.
	ServiceArea *IdentificationServiceArea `protobuf:"bytes,1,opt,name=service_area,json=serviceArea,proto3" json:"service_area,omitempty"`
	// DSS subscribers that this client now has the obligation to notify of the Identification Service Area just deleted.  This client must call POST for each provided URL according to the `/uss/identification_service_areas` path API.
	Subscribers          []*SubscriberToNotify `protobuf:"bytes,2,rep,name=subscribers,proto3" json:"subscribers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DeleteIdentificationServiceAreaResponse) Reset() {
	*m = DeleteIdentificationServiceAreaResponse{}
}
func (m *DeleteIdentificationServiceAreaResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteIdentificationServiceAreaResponse) ProtoMessage()    {}
func (*DeleteIdentificationServiceAreaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{2}
}

func (m *DeleteIdentificationServiceAreaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIdentificationServiceAreaResponse.Unmarshal(m, b)
}
func (m *DeleteIdentificationServiceAreaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIdentificationServiceAreaResponse.Marshal(b, m, deterministic)
}
func (m *DeleteIdentificationServiceAreaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIdentificationServiceAreaResponse.Merge(m, src)
}
func (m *DeleteIdentificationServiceAreaResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteIdentificationServiceAreaResponse.Size(m)
}
func (m *DeleteIdentificationServiceAreaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIdentificationServiceAreaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIdentificationServiceAreaResponse proto.InternalMessageInfo

func (m *DeleteIdentificationServiceAreaResponse) GetServiceArea() *IdentificationServiceArea {
	if m != nil {
		return m.ServiceArea
	}
	return nil
}

func (m *DeleteIdentificationServiceAreaResponse) GetSubscribers() []*SubscriberToNotify {
	if m != nil {
		return m.Subscribers
	}
	return nil
}

// Response for a successful request to delete an Subscription.
type DeleteSubscriptionResponse struct {
	// The Subscription which was deleted.
	Subscription         *Subscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeleteSubscriptionResponse) Reset()         { *m = DeleteSubscriptionResponse{} }
func (m *DeleteSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteSubscriptionResponse) ProtoMessage()    {}
func (*DeleteSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{3}
}

func (m *DeleteSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubscriptionResponse.Unmarshal(m, b)
}
func (m *DeleteSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *DeleteSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubscriptionResponse.Merge(m, src)
}
func (m *DeleteSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteSubscriptionResponse.Size(m)
}
func (m *DeleteSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubscriptionResponse proto.InternalMessageInfo

func (m *DeleteSubscriptionResponse) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

type DeleteV1DssIdentificationServiceAreasIdVersionRequest struct {
	// EntityUUID of the Identification Service Area.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Version string used to reference an Identification Service Area at a particular point in time. Any updates to an existing Identification Service Area must contain the corresponding version to maintain idempotent updates.
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteV1DssIdentificationServiceAreasIdVersionRequest) Reset() {
	*m = DeleteV1DssIdentificationServiceAreasIdVersionRequest{}
}
func (m *DeleteV1DssIdentificationServiceAreasIdVersionRequest) String() string {
	return proto.CompactTextString(m)
}
func (*DeleteV1DssIdentificationServiceAreasIdVersionRequest) ProtoMessage() {}
func (*DeleteV1DssIdentificationServiceAreasIdVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{4}
}

func (m *DeleteV1DssIdentificationServiceAreasIdVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteV1DssIdentificationServiceAreasIdVersionRequest.Unmarshal(m, b)
}
func (m *DeleteV1DssIdentificationServiceAreasIdVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteV1DssIdentificationServiceAreasIdVersionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteV1DssIdentificationServiceAreasIdVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteV1DssIdentificationServiceAreasIdVersionRequest.Merge(m, src)
}
func (m *DeleteV1DssIdentificationServiceAreasIdVersionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteV1DssIdentificationServiceAreasIdVersionRequest.Size(m)
}
func (m *DeleteV1DssIdentificationServiceAreasIdVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteV1DssIdentificationServiceAreasIdVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteV1DssIdentificationServiceAreasIdVersionRequest proto.InternalMessageInfo

func (m *DeleteV1DssIdentificationServiceAreasIdVersionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteV1DssIdentificationServiceAreasIdVersionRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type DeleteV1DssSubscriptionsIdVersionRequest struct {
	// SubscriptionUUID of the subscription of interest.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Version string used to reference a Subscription at a particular point in time. Any updates to an existing Subscription must contain the corresponding version to maintain idempotent updates.
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteV1DssSubscriptionsIdVersionRequest) Reset() {
	*m = DeleteV1DssSubscriptionsIdVersionRequest{}
}
func (m *DeleteV1DssSubscriptionsIdVersionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteV1DssSubscriptionsIdVersionRequest) ProtoMessage()    {}
func (*DeleteV1DssSubscriptionsIdVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{5}
}

func (m *DeleteV1DssSubscriptionsIdVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteV1DssSubscriptionsIdVersionRequest.Unmarshal(m, b)
}
func (m *DeleteV1DssSubscriptionsIdVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteV1DssSubscriptionsIdVersionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteV1DssSubscriptionsIdVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteV1DssSubscriptionsIdVersionRequest.Merge(m, src)
}
func (m *DeleteV1DssSubscriptionsIdVersionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteV1DssSubscriptionsIdVersionRequest.Size(m)
}
func (m *DeleteV1DssSubscriptionsIdVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteV1DssSubscriptionsIdVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteV1DssSubscriptionsIdVersionRequest proto.InternalMessageInfo

func (m *DeleteV1DssSubscriptionsIdVersionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteV1DssSubscriptionsIdVersionRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Data provided when an off-nominal condition was encountered.
type ErrorResponse struct {
	// Human-readable message indicating what error occurred and/or why.
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorResponse) Reset()         { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()    {}
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{6}
}

func (m *ErrorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorResponse.Unmarshal(m, b)
}
func (m *ErrorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorResponse.Marshal(b, m, deterministic)
}
func (m *ErrorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorResponse.Merge(m, src)
}
func (m *ErrorResponse) XXX_Size() int {
	return xxx_messageInfo_ErrorResponse.Size(m)
}
func (m *ErrorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorResponse proto.InternalMessageInfo

func (m *ErrorResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// An enclosed area on the earth.
// The bounding edges of this polygon shall be the shortest paths between connected vertices.  This means, for instance, that the edge between two points both defined at a particular latitude is not generally contained at that latitude.
// The winding order shall be interpreted as the order which produces the smaller area.
// The path between two vertices shall be the shortest possible path between those vertices.
// Edges may not cross.
// Vertices may not be duplicated.  In particular, the final polygon vertex shall not be identical to the first vertex.
type GeoPolygon struct {
	Vertices             []*LatLngPoint `protobuf:"bytes,1,rep,name=vertices,proto3" json:"vertices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GeoPolygon) Reset()         { *m = GeoPolygon{} }
func (m *GeoPolygon) String() string { return proto.CompactTextString(m) }
func (*GeoPolygon) ProtoMessage()    {}
func (*GeoPolygon) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{7}
}

func (m *GeoPolygon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeoPolygon.Unmarshal(m, b)
}
func (m *GeoPolygon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeoPolygon.Marshal(b, m, deterministic)
}
func (m *GeoPolygon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeoPolygon.Merge(m, src)
}
func (m *GeoPolygon) XXX_Size() int {
	return xxx_messageInfo_GeoPolygon.Size(m)
}
func (m *GeoPolygon) XXX_DiscardUnknown() {
	xxx_messageInfo_GeoPolygon.DiscardUnknown(m)
}

var xxx_messageInfo_GeoPolygon proto.InternalMessageInfo

func (m *GeoPolygon) GetVertices() []*LatLngPoint {
	if m != nil {
		return m.Vertices
	}
	return nil
}

// Response to remote ID provider query for details about a specific flight.
type GetFlightDetailsResponse struct {
	Details              *RIDFlightDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetFlightDetailsResponse) Reset()         { *m = GetFlightDetailsResponse{} }
func (m *GetFlightDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*GetFlightDetailsResponse) ProtoMessage()    {}
func (*GetFlightDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{8}
}

func (m *GetFlightDetailsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlightDetailsResponse.Unmarshal(m, b)
}
func (m *GetFlightDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlightDetailsResponse.Marshal(b, m, deterministic)
}
func (m *GetFlightDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlightDetailsResponse.Merge(m, src)
}
func (m *GetFlightDetailsResponse) XXX_Size() int {
	return xxx_messageInfo_GetFlightDetailsResponse.Size(m)
}
func (m *GetFlightDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlightDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlightDetailsResponse proto.InternalMessageInfo

func (m *GetFlightDetailsResponse) GetDetails() *RIDFlightDetails {
	if m != nil {
		return m.Details
	}
	return nil
}

// Response to remote ID provider query for flight information in an area of interest.
type GetFlightsResponse struct {
	// A list of all flights that have been within the requested area within the remote ID retention period.  This includes flights that are not currently within the requested area, but were within the requested area within the remote ID retention period.
	Flights []*RIDFlight `protobuf:"bytes,1,rep,name=flights,proto3" json:"flights,omitempty"`
	// The remote ID service provider's timestamp for when this information was current.  RFC 3339 format, per OpenAPI specification.
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetFlightsResponse) Reset()         { *m = GetFlightsResponse{} }
func (m *GetFlightsResponse) String() string { return proto.CompactTextString(m) }
func (*GetFlightsResponse) ProtoMessage()    {}
func (*GetFlightsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{9}
}

func (m *GetFlightsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlightsResponse.Unmarshal(m, b)
}
func (m *GetFlightsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlightsResponse.Marshal(b, m, deterministic)
}
func (m *GetFlightsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlightsResponse.Merge(m, src)
}
func (m *GetFlightsResponse) XXX_Size() int {
	return xxx_messageInfo_GetFlightsResponse.Size(m)
}
func (m *GetFlightsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlightsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlightsResponse proto.InternalMessageInfo

func (m *GetFlightsResponse) GetFlights() []*RIDFlight {
	if m != nil {
		return m.Flights
	}
	return nil
}

func (m *GetFlightsResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

// Response to DSS request for the identification service area with the given id.
type GetIdentificationServiceAreaResponse struct {
	ServiceArea          *IdentificationServiceArea `protobuf:"bytes,1,opt,name=service_area,json=serviceArea,proto3" json:"service_area,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetIdentificationServiceAreaResponse) Reset()         { *m = GetIdentificationServiceAreaResponse{} }
func (m *GetIdentificationServiceAreaResponse) String() string { return proto.CompactTextString(m) }
func (*GetIdentificationServiceAreaResponse) ProtoMessage()    {}
func (*GetIdentificationServiceAreaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{10}
}

func (m *GetIdentificationServiceAreaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIdentificationServiceAreaResponse.Unmarshal(m, b)
}
func (m *GetIdentificationServiceAreaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIdentificationServiceAreaResponse.Marshal(b, m, deterministic)
}
func (m *GetIdentificationServiceAreaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIdentificationServiceAreaResponse.Merge(m, src)
}
func (m *GetIdentificationServiceAreaResponse) XXX_Size() int {
	return xxx_messageInfo_GetIdentificationServiceAreaResponse.Size(m)
}
func (m *GetIdentificationServiceAreaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIdentificationServiceAreaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIdentificationServiceAreaResponse proto.InternalMessageInfo

func (m *GetIdentificationServiceAreaResponse) GetServiceArea() *IdentificationServiceArea {
	if m != nil {
		return m.ServiceArea
	}
	return nil
}

// Response to DSS request for the subscription with the given id.
type GetSubscriptionResponse struct {
	Subscription         *Subscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetSubscriptionResponse) Reset()         { *m = GetSubscriptionResponse{} }
func (m *GetSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*GetSubscriptionResponse) ProtoMessage()    {}
func (*GetSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{11}
}

func (m *GetSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubscriptionResponse.Unmarshal(m, b)
}
func (m *GetSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *GetSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubscriptionResponse.Merge(m, src)
}
func (m *GetSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_GetSubscriptionResponse.Size(m)
}
func (m *GetSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubscriptionResponse proto.InternalMessageInfo

func (m *GetSubscriptionResponse) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

type GetV1DssIdentificationServiceAreasIdRequest struct {
	// EntityUUID of the Identification Service Area.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetV1DssIdentificationServiceAreasIdRequest) Reset() {
	*m = GetV1DssIdentificationServiceAreasIdRequest{}
}
func (m *GetV1DssIdentificationServiceAreasIdRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GetV1DssIdentificationServiceAreasIdRequest) ProtoMessage() {}
func (*GetV1DssIdentificationServiceAreasIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{12}
}

func (m *GetV1DssIdentificationServiceAreasIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetV1DssIdentificationServiceAreasIdRequest.Unmarshal(m, b)
}
func (m *GetV1DssIdentificationServiceAreasIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetV1DssIdentificationServiceAreasIdRequest.Marshal(b, m, deterministic)
}
func (m *GetV1DssIdentificationServiceAreasIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetV1DssIdentificationServiceAreasIdRequest.Merge(m, src)
}
func (m *GetV1DssIdentificationServiceAreasIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetV1DssIdentificationServiceAreasIdRequest.Size(m)
}
func (m *GetV1DssIdentificationServiceAreasIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetV1DssIdentificationServiceAreasIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetV1DssIdentificationServiceAreasIdRequest proto.InternalMessageInfo

func (m *GetV1DssIdentificationServiceAreasIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetV1DssIdentificationServiceAreasRequest struct {
	// The area in which to search for Identification Service Areas.  Some Identification Service Areas near this area but wholly outside it may also be returned.
	Area string `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	// If specified, indicates non-interest in any Identification Service Areas that end before this time.  RFC 3339 format, per OpenAPI specification.
	EarliestTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=earliest_time,json=earliestTime,proto3" json:"earliest_time,omitempty"`
	// If specified, indicates non-interest in any Identification Service Areas that start after this time.  RFC 3339 format, per OpenAPI specification.
	LatestTime           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=latest_time,json=latestTime,proto3" json:"latest_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetV1DssIdentificationServiceAreasRequest) Reset() {
	*m = GetV1DssIdentificationServiceAreasRequest{}
}
func (m *GetV1DssIdentificationServiceAreasRequest) String() string { return proto.CompactTextString(m) }
func (*GetV1DssIdentificationServiceAreasRequest) ProtoMessage()    {}
func (*GetV1DssIdentificationServiceAreasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{13}
}

func (m *GetV1DssIdentificationServiceAreasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetV1DssIdentificationServiceAreasRequest.Unmarshal(m, b)
}
func (m *GetV1DssIdentificationServiceAreasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetV1DssIdentificationServiceAreasRequest.Marshal(b, m, deterministic)
}
func (m *GetV1DssIdentificationServiceAreasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetV1DssIdentificationServiceAreasRequest.Merge(m, src)
}
func (m *GetV1DssIdentificationServiceAreasRequest) XXX_Size() int {
	return xxx_messageInfo_GetV1DssIdentificationServiceAreasRequest.Size(m)
}
func (m *GetV1DssIdentificationServiceAreasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetV1DssIdentificationServiceAreasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetV1DssIdentificationServiceAreasRequest proto.InternalMessageInfo

func (m *GetV1DssIdentificationServiceAreasRequest) GetArea() string {
	if m != nil {
		return m.Area
	}
	return ""
}

func (m *GetV1DssIdentificationServiceAreasRequest) GetEarliestTime() *timestamp.Timestamp {
	if m != nil {
		return m.EarliestTime
	}
	return nil
}

func (m *GetV1DssIdentificationServiceAreasRequest) GetLatestTime() *timestamp.Timestamp {
	if m != nil {
		return m.LatestTime
	}
	return nil
}

type GetV1DssSubscriptionsIdRequest struct {
	// SubscriptionUUID of the subscription of interest.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetV1DssSubscriptionsIdRequest) Reset()         { *m = GetV1DssSubscriptionsIdRequest{} }
func (m *GetV1DssSubscriptionsIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetV1DssSubscriptionsIdRequest) ProtoMessage()    {}
func (*GetV1DssSubscriptionsIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{14}
}

func (m *GetV1DssSubscriptionsIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetV1DssSubscriptionsIdRequest.Unmarshal(m, b)
}
func (m *GetV1DssSubscriptionsIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetV1DssSubscriptionsIdRequest.Marshal(b, m, deterministic)
}
func (m *GetV1DssSubscriptionsIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetV1DssSubscriptionsIdRequest.Merge(m, src)
}
func (m *GetV1DssSubscriptionsIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetV1DssSubscriptionsIdRequest.Size(m)
}
func (m *GetV1DssSubscriptionsIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetV1DssSubscriptionsIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetV1DssSubscriptionsIdRequest proto.InternalMessageInfo

func (m *GetV1DssSubscriptionsIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetV1DssSubscriptionsRequest struct {
	// The area in which to search for Subscriptions.  Some Subscriptions near this area but wholly outside it may also be returned.
	Area                 string   `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetV1DssSubscriptionsRequest) Reset()         { *m = GetV1DssSubscriptionsRequest{} }
func (m *GetV1DssSubscriptionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetV1DssSubscriptionsRequest) ProtoMessage()    {}
func (*GetV1DssSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{15}
}

func (m *GetV1DssSubscriptionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetV1DssSubscriptionsRequest.Unmarshal(m, b)
}
func (m *GetV1DssSubscriptionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetV1DssSubscriptionsRequest.Marshal(b, m, deterministic)
}
func (m *GetV1DssSubscriptionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetV1DssSubscriptionsRequest.Merge(m, src)
}
func (m *GetV1DssSubscriptionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetV1DssSubscriptionsRequest.Size(m)
}
func (m *GetV1DssSubscriptionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetV1DssSubscriptionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetV1DssSubscriptionsRequest proto.InternalMessageInfo

func (m *GetV1DssSubscriptionsRequest) GetArea() string {
	if m != nil {
		return m.Area
	}
	return ""
}

// An Identification Service Area (area in which remote ID services are being provided).  The DSS reports only these declarations and clients must exchange flight information peer-to-peer.
type IdentificationServiceArea struct {
	FlightsUrl string `protobuf:"bytes,1,opt,name=flights_url,json=flightsUrl,proto3" json:"flights_url,omitempty"`
	// Unique identifier for this Identification Service Area.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Assigned by the DSS based on creating client’s ID (via access token).  Used for restricting mutation and deletion operations to owner.
	Owner string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	// End time of service.  RFC 3339 format, per OpenAPI specification.
	TimeEnd *timestamp.Timestamp `protobuf:"bytes,4,opt,name=time_end,json=timeEnd,proto3" json:"time_end,omitempty"`
	// Beginning time of service.  RFC 3339 format, per OpenAPI specification.
	TimeStart            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=time_start,json=timeStart,proto3" json:"time_start,omitempty"`
	Version              string               `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *IdentificationServiceArea) Reset()         { *m = IdentificationServiceArea{} }
func (m *IdentificationServiceArea) String() string { return proto.CompactTextString(m) }
func (*IdentificationServiceArea) ProtoMessage()    {}
func (*IdentificationServiceArea) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{16}
}

func (m *IdentificationServiceArea) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentificationServiceArea.Unmarshal(m, b)
}
func (m *IdentificationServiceArea) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentificationServiceArea.Marshal(b, m, deterministic)
}
func (m *IdentificationServiceArea) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentificationServiceArea.Merge(m, src)
}
func (m *IdentificationServiceArea) XXX_Size() int {
	return xxx_messageInfo_IdentificationServiceArea.Size(m)
}
func (m *IdentificationServiceArea) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentificationServiceArea.DiscardUnknown(m)
}

var xxx_messageInfo_IdentificationServiceArea proto.InternalMessageInfo

func (m *IdentificationServiceArea) GetFlightsUrl() string {
	if m != nil {
		return m.FlightsUrl
	}
	return ""
}

func (m *IdentificationServiceArea) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *IdentificationServiceArea) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *IdentificationServiceArea) GetTimeEnd() *timestamp.Timestamp {
	if m != nil {
		return m.TimeEnd
	}
	return nil
}

func (m *IdentificationServiceArea) GetTimeStart() *timestamp.Timestamp {
	if m != nil {
		return m.TimeStart
	}
	return nil
}

func (m *IdentificationServiceArea) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Point on the earth's surface.
type LatLngPoint struct {
	Lat                  float64  `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng                  float64  `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatLngPoint) Reset()         { *m = LatLngPoint{} }
func (m *LatLngPoint) String() string { return proto.CompactTextString(m) }
func (*LatLngPoint) ProtoMessage()    {}
func (*LatLngPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{17}
}

func (m *LatLngPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatLngPoint.Unmarshal(m, b)
}
func (m *LatLngPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatLngPoint.Marshal(b, m, deterministic)
}
func (m *LatLngPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatLngPoint.Merge(m, src)
}
func (m *LatLngPoint) XXX_Size() int {
	return xxx_messageInfo_LatLngPoint.Size(m)
}
func (m *LatLngPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_LatLngPoint.DiscardUnknown(m)
}

var xxx_messageInfo_LatLngPoint proto.InternalMessageInfo

func (m *LatLngPoint) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *LatLngPoint) GetLng() float64 {
	if m != nil {
		return m.Lng
	}
	return 0
}

// Parameters of a message informing of new full information for an Identification Service Area.  Pushed (by a client, not the DSS) directly to clients with subscriptions when another client makes a change to airspace within a cell with a subscription.
type PutIdentificationServiceAreaNotificationParameters struct {
	// Identification Service Area that the notifying client changed or created.
	//
	// If this field is populated, the Identification Service Area was created or updated.  If this field is not populated, the Identification Service Area was deleted.
	ServiceArea *IdentificationServiceArea `protobuf:"bytes,1,opt,name=service_area,json=serviceArea,proto3" json:"service_area,omitempty"`
	// Subscription(s) prompting this notification.
	Subscriptions        []*SubscriptionState `protobuf:"bytes,2,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PutIdentificationServiceAreaNotificationParameters) Reset() {
	*m = PutIdentificationServiceAreaNotificationParameters{}
}
func (m *PutIdentificationServiceAreaNotificationParameters) String() string {
	return proto.CompactTextString(m)
}
func (*PutIdentificationServiceAreaNotificationParameters) ProtoMessage() {}
func (*PutIdentificationServiceAreaNotificationParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{18}
}

func (m *PutIdentificationServiceAreaNotificationParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutIdentificationServiceAreaNotificationParameters.Unmarshal(m, b)
}
func (m *PutIdentificationServiceAreaNotificationParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutIdentificationServiceAreaNotificationParameters.Marshal(b, m, deterministic)
}
func (m *PutIdentificationServiceAreaNotificationParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutIdentificationServiceAreaNotificationParameters.Merge(m, src)
}
func (m *PutIdentificationServiceAreaNotificationParameters) XXX_Size() int {
	return xxx_messageInfo_PutIdentificationServiceAreaNotificationParameters.Size(m)
}
func (m *PutIdentificationServiceAreaNotificationParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_PutIdentificationServiceAreaNotificationParameters.DiscardUnknown(m)
}

var xxx_messageInfo_PutIdentificationServiceAreaNotificationParameters proto.InternalMessageInfo

func (m *PutIdentificationServiceAreaNotificationParameters) GetServiceArea() *IdentificationServiceArea {
	if m != nil {
		return m.ServiceArea
	}
	return nil
}

func (m *PutIdentificationServiceAreaNotificationParameters) GetSubscriptions() []*SubscriptionState {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

// Response to a request to create or update a reference to an Identification Service Area in the DSS.
type PutIdentificationServiceAreaResponse struct {
	// Resulting service area stored in DSS.
	ServiceArea *IdentificationServiceArea `protobuf:"bytes,1,opt,name=service_area,json=serviceArea,proto3" json:"service_area,omitempty"`
	// DSS subscribers that this client now has the obligation to notify of the Identification Service Area changes just made.  This client must call POST for each provided URL according to the `/uss/identification_service_areas/{id}` path API.
	Subscribers          []*SubscriberToNotify `protobuf:"bytes,2,rep,name=subscribers,proto3" json:"subscribers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PutIdentificationServiceAreaResponse) Reset()         { *m = PutIdentificationServiceAreaResponse{} }
func (m *PutIdentificationServiceAreaResponse) String() string { return proto.CompactTextString(m) }
func (*PutIdentificationServiceAreaResponse) ProtoMessage()    {}
func (*PutIdentificationServiceAreaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{19}
}

func (m *PutIdentificationServiceAreaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutIdentificationServiceAreaResponse.Unmarshal(m, b)
}
func (m *PutIdentificationServiceAreaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutIdentificationServiceAreaResponse.Marshal(b, m, deterministic)
}
func (m *PutIdentificationServiceAreaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutIdentificationServiceAreaResponse.Merge(m, src)
}
func (m *PutIdentificationServiceAreaResponse) XXX_Size() int {
	return xxx_messageInfo_PutIdentificationServiceAreaResponse.Size(m)
}
func (m *PutIdentificationServiceAreaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutIdentificationServiceAreaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutIdentificationServiceAreaResponse proto.InternalMessageInfo

func (m *PutIdentificationServiceAreaResponse) GetServiceArea() *IdentificationServiceArea {
	if m != nil {
		return m.ServiceArea
	}
	return nil
}

func (m *PutIdentificationServiceAreaResponse) GetSubscribers() []*SubscriberToNotify {
	if m != nil {
		return m.Subscribers
	}
	return nil
}

// Response for a request to create or update a subscription.
type PutSubscriptionResponse struct {
	// Identification Service Areas in or near the subscription area at the time of creation/update, if `identification_service_area_url` callback was specified.
	ServiceAreas []*IdentificationServiceArea `protobuf:"bytes,1,rep,name=service_areas,json=serviceAreas,proto3" json:"service_areas,omitempty"`
	// Result of the operation on the subscription.
	Subscription         *Subscription `protobuf:"bytes,2,opt,name=subscription,proto3" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PutSubscriptionResponse) Reset()         { *m = PutSubscriptionResponse{} }
func (m *PutSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*PutSubscriptionResponse) ProtoMessage()    {}
func (*PutSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{20}
}

func (m *PutSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutSubscriptionResponse.Unmarshal(m, b)
}
func (m *PutSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutSubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *PutSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutSubscriptionResponse.Merge(m, src)
}
func (m *PutSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_PutSubscriptionResponse.Size(m)
}
func (m *PutSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutSubscriptionResponse proto.InternalMessageInfo

func (m *PutSubscriptionResponse) GetServiceAreas() []*IdentificationServiceArea {
	if m != nil {
		return m.ServiceAreas
	}
	return nil
}

func (m *PutSubscriptionResponse) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

type PutV1DssIdentificationServiceAreasIdRequest struct {
	// EntityUUID of the Identification Service Area.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Request body.
	Params               *CreateIdentificationServiceAreaParameters `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *PutV1DssIdentificationServiceAreasIdRequest) Reset() {
	*m = PutV1DssIdentificationServiceAreasIdRequest{}
}
func (m *PutV1DssIdentificationServiceAreasIdRequest) String() string {
	return proto.CompactTextString(m)
}
func (*PutV1DssIdentificationServiceAreasIdRequest) ProtoMessage() {}
func (*PutV1DssIdentificationServiceAreasIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{21}
}

func (m *PutV1DssIdentificationServiceAreasIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutV1DssIdentificationServiceAreasIdRequest.Unmarshal(m, b)
}
func (m *PutV1DssIdentificationServiceAreasIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutV1DssIdentificationServiceAreasIdRequest.Marshal(b, m, deterministic)
}
func (m *PutV1DssIdentificationServiceAreasIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutV1DssIdentificationServiceAreasIdRequest.Merge(m, src)
}
func (m *PutV1DssIdentificationServiceAreasIdRequest) XXX_Size() int {
	return xxx_messageInfo_PutV1DssIdentificationServiceAreasIdRequest.Size(m)
}
func (m *PutV1DssIdentificationServiceAreasIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutV1DssIdentificationServiceAreasIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutV1DssIdentificationServiceAreasIdRequest proto.InternalMessageInfo

func (m *PutV1DssIdentificationServiceAreasIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutV1DssIdentificationServiceAreasIdRequest) GetParams() *CreateIdentificationServiceAreaParameters {
	if m != nil {
		return m.Params
	}
	return nil
}

type PutV1DssIdentificationServiceAreasIdVersionRequest struct {
	// EntityUUID of the Identification Service Area.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Request body.
	Params *UpdateIdentificationServiceAreaParameters `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// Version string used to reference an Identification Service Area at a particular point in time. Any updates to an existing Identification Service Area must contain the corresponding version to maintain idempotent updates.
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutV1DssIdentificationServiceAreasIdVersionRequest) Reset() {
	*m = PutV1DssIdentificationServiceAreasIdVersionRequest{}
}
func (m *PutV1DssIdentificationServiceAreasIdVersionRequest) String() string {
	return proto.CompactTextString(m)
}
func (*PutV1DssIdentificationServiceAreasIdVersionRequest) ProtoMessage() {}
func (*PutV1DssIdentificationServiceAreasIdVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{22}
}

func (m *PutV1DssIdentificationServiceAreasIdVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutV1DssIdentificationServiceAreasIdVersionRequest.Unmarshal(m, b)
}
func (m *PutV1DssIdentificationServiceAreasIdVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutV1DssIdentificationServiceAreasIdVersionRequest.Marshal(b, m, deterministic)
}
func (m *PutV1DssIdentificationServiceAreasIdVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutV1DssIdentificationServiceAreasIdVersionRequest.Merge(m, src)
}
func (m *PutV1DssIdentificationServiceAreasIdVersionRequest) XXX_Size() int {
	return xxx_messageInfo_PutV1DssIdentificationServiceAreasIdVersionRequest.Size(m)
}
func (m *PutV1DssIdentificationServiceAreasIdVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutV1DssIdentificationServiceAreasIdVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutV1DssIdentificationServiceAreasIdVersionRequest proto.InternalMessageInfo

func (m *PutV1DssIdentificationServiceAreasIdVersionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutV1DssIdentificationServiceAreasIdVersionRequest) GetParams() *UpdateIdentificationServiceAreaParameters {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PutV1DssIdentificationServiceAreasIdVersionRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type PutV1DssSubscriptionsIdRequest struct {
	// SubscriptionUUID of the subscription of interest.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Request body.
	Params               *CreateSubscriptionParameters `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *PutV1DssSubscriptionsIdRequest) Reset()         { *m = PutV1DssSubscriptionsIdRequest{} }
func (m *PutV1DssSubscriptionsIdRequest) String() string { return proto.CompactTextString(m) }
func (*PutV1DssSubscriptionsIdRequest) ProtoMessage()    {}
func (*PutV1DssSubscriptionsIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{23}
}

func (m *PutV1DssSubscriptionsIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutV1DssSubscriptionsIdRequest.Unmarshal(m, b)
}
func (m *PutV1DssSubscriptionsIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutV1DssSubscriptionsIdRequest.Marshal(b, m, deterministic)
}
func (m *PutV1DssSubscriptionsIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutV1DssSubscriptionsIdRequest.Merge(m, src)
}
func (m *PutV1DssSubscriptionsIdRequest) XXX_Size() int {
	return xxx_messageInfo_PutV1DssSubscriptionsIdRequest.Size(m)
}
func (m *PutV1DssSubscriptionsIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutV1DssSubscriptionsIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutV1DssSubscriptionsIdRequest proto.InternalMessageInfo

func (m *PutV1DssSubscriptionsIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutV1DssSubscriptionsIdRequest) GetParams() *CreateSubscriptionParameters {
	if m != nil {
		return m.Params
	}
	return nil
}

type PutV1DssSubscriptionsIdVersionRequest struct {
	// SubscriptionUUID of the subscription of interest.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Request body.
	Params *UpdateSubscriptionParameters `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// Version string used to reference a Subscription at a particular point in time. Any updates to an existing Subscription must contain the corresponding version to maintain idempotent updates.
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutV1DssSubscriptionsIdVersionRequest) Reset()         { *m = PutV1DssSubscriptionsIdVersionRequest{} }
func (m *PutV1DssSubscriptionsIdVersionRequest) String() string { return proto.CompactTextString(m) }
func (*PutV1DssSubscriptionsIdVersionRequest) ProtoMessage()    {}
func (*PutV1DssSubscriptionsIdVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{24}
}

func (m *PutV1DssSubscriptionsIdVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutV1DssSubscriptionsIdVersionRequest.Unmarshal(m, b)
}
func (m *PutV1DssSubscriptionsIdVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutV1DssSubscriptionsIdVersionRequest.Marshal(b, m, deterministic)
}
func (m *PutV1DssSubscriptionsIdVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutV1DssSubscriptionsIdVersionRequest.Merge(m, src)
}
func (m *PutV1DssSubscriptionsIdVersionRequest) XXX_Size() int {
	return xxx_messageInfo_PutV1DssSubscriptionsIdVersionRequest.Size(m)
}
func (m *PutV1DssSubscriptionsIdVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutV1DssSubscriptionsIdVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutV1DssSubscriptionsIdVersionRequest proto.InternalMessageInfo

func (m *PutV1DssSubscriptionsIdVersionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutV1DssSubscriptionsIdVersionRequest) GetParams() *UpdateSubscriptionParameters {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PutV1DssSubscriptionsIdVersionRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Position of an aircraft as reported for remote ID purposes.
type RIDAircraftPosition struct {
	// Horizontal error that is likely to be present in this reported position.  Required when `extrapolated` field is true and always in the entry for the current state.
	AccuracyH HorizontalAccuracy `protobuf:"varint,1,opt,name=accuracy_h,json=accuracyH,proto3,enum=dssproto.HorizontalAccuracy" json:"accuracy_h,omitempty"`
	// Vertical error that is likely to be present in this reported position.  Required when `extrapolated` field is true and always in the entry for the current state.
	AccuracyV VerticalAccuracy `protobuf:"varint,2,opt,name=accuracy_v,json=accuracyV,proto3,enum=dssproto.VerticalAccuracy" json:"accuracy_v,omitempty"`
	// Geodetic altitude (NOT altitude above launch, altitude above ground, or EGM96): aircraft distance above the WGS84 ellipsoid as measured along a line that passes through the aircraft and is normal to the surface of the WGS84 ellipsoid.  This value is provided in meters and must have a minimum resolution of 1 meter.
	Alt float32 `protobuf:"fixed32,3,opt,name=alt,proto3" json:"alt,omitempty"`
	// True if this position was generated primarily by computation rather than primarily from a direct instrument measurement.  Assumed false if not specified.
	Extrapolated bool    `protobuf:"varint,4,opt,name=extrapolated,proto3" json:"extrapolated,omitempty"`
	Lat          float64 `protobuf:"fixed64,5,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng          float64 `protobuf:"fixed64,6,opt,name=lng,proto3" json:"lng,omitempty"`
	// The uncorrected altitude (based on reference standard 29.92 inHg, 1013.25 mb) provides a reference for algorithms that utilize "altitude deltas" between aircraft.  This value is provided in meters and must have a minimum resolution of 1 meter.
	PressureAltitude     float32  `protobuf:"fixed32,7,opt,name=pressure_altitude,json=pressureAltitude,proto3" json:"pressure_altitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RIDAircraftPosition) Reset()         { *m = RIDAircraftPosition{} }
func (m *RIDAircraftPosition) String() string { return proto.CompactTextString(m) }
func (*RIDAircraftPosition) ProtoMessage()    {}
func (*RIDAircraftPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{25}
}

func (m *RIDAircraftPosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RIDAircraftPosition.Unmarshal(m, b)
}
func (m *RIDAircraftPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RIDAircraftPosition.Marshal(b, m, deterministic)
}
func (m *RIDAircraftPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RIDAircraftPosition.Merge(m, src)
}
func (m *RIDAircraftPosition) XXX_Size() int {
	return xxx_messageInfo_RIDAircraftPosition.Size(m)
}
func (m *RIDAircraftPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_RIDAircraftPosition.DiscardUnknown(m)
}

var xxx_messageInfo_RIDAircraftPosition proto.InternalMessageInfo

func (m *RIDAircraftPosition) GetAccuracyH() HorizontalAccuracy {
	if m != nil {
		return m.AccuracyH
	}
	return HorizontalAccuracy_HA_UNKNOWN
}

func (m *RIDAircraftPosition) GetAccuracyV() VerticalAccuracy {
	if m != nil {
		return m.AccuracyV
	}
	return VerticalAccuracy_VA_UNKNOWN
}

func (m *RIDAircraftPosition) GetAlt() float32 {
	if m != nil {
		return m.Alt
	}
	return 0
}

func (m *RIDAircraftPosition) GetExtrapolated() bool {
	if m != nil {
		return m.Extrapolated
	}
	return false
}

func (m *RIDAircraftPosition) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *RIDAircraftPosition) GetLng() float64 {
	if m != nil {
		return m.Lng
	}
	return 0
}

func (m *RIDAircraftPosition) GetPressureAltitude() float32 {
	if m != nil {
		return m.PressureAltitude
	}
	return 0
}

// State of an aircraft for the purposes of remote ID.
type RIDAircraftState struct {
	// Maximum altitude (meters WGS84-HAE) of Group Operation.  This value contains the "Operating Area Ceiling" data from the common data dictionary when group operation area is specified by point-radius.
	GroupCeiling float32 `protobuf:"fixed32,1,opt,name=group_ceiling,json=groupCeiling,proto3" json:"group_ceiling,omitempty"`
	// When operating a group (or formation or swarm), number of aircraft in group.  This value contains the "Operating Area Count" data from the common data dictionary when group operation area is specified by point-radius.
	GroupCount int32 `protobuf:"varint,2,opt,name=group_count,json=groupCount,proto3" json:"group_count,omitempty"`
	// Minimum altitude (meters WGS84-HAE) of Group Operation.  If not specified, ground level shall be assumed.  This value contains the "Operating Area Floor" data from the common data dictionary when group operation area is specified by point-radius.
	GroupFloor float32 `protobuf:"fixed32,3,opt,name=group_floor,json=groupFloor,proto3" json:"group_floor,omitempty"`
	// Farthest horizontal distance from reported group location at which an aircraft in the group may be located (meters).  This value contains the "Operating Area Radius" data from the common data dictionary when group operation area is specified by point-radius.
	GroupRadius float32 `protobuf:"fixed32,4,opt,name=group_radius,json=groupRadius,proto3" json:"group_radius,omitempty"`
	// Time at which a group operation starts.  This value contains the "Operation Area End" data from the common data dictionary when group operation area is specified by point-radius.
	GroupTimeEnd *timestamp.Timestamp `protobuf:"bytes,5,opt,name=group_time_end,json=groupTimeEnd,proto3" json:"group_time_end,omitempty"`
	// Time at which a group operation starts.  This value contains the "Operation Area Start" data from the common data dictionary when group operation area is specified by point-radius.
	GroupTimeStart    *timestamp.Timestamp `protobuf:"bytes,6,opt,name=group_time_start,json=groupTimeStart,proto3" json:"group_time_start,omitempty"`
	Height            *RIDHeight           `protobuf:"bytes,7,opt,name=height,proto3" json:"height,omitempty"`
	OperationalStatus RIDOperationalStatus `protobuf:"varint,8,opt,name=operational_status,json=operationalStatus,proto3,enum=dssproto.RIDOperationalStatus" json:"operational_status,omitempty"`
	Position          *RIDAircraftPosition `protobuf:"bytes,9,opt,name=position,proto3" json:"position,omitempty"`
	// Ground speed of flight in meters per second.
	Speed float32 `protobuf:"fixed32,10,opt,name=speed,proto3" json:"speed,omitempty"`
	// Accuracy of horizontal ground speed.
	SpeedAccuracy SpeedAccuracy `protobuf:"varint,11,opt,name=speed_accuracy,json=speedAccuracy,proto3,enum=dssproto.SpeedAccuracy" json:"speed_accuracy,omitempty"`
	// Time at which this state was valid.  This may be the time coming from the source, such as a GPS, or the time when the system computes the values using an algorithm such as an Extended Kalman Filter (EKF).  Timestamp must be expressed with a minimum resolution of 1/10th of a second.  RFC 3339 format, per OpenAPI specification.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,12,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Declaration of timestamp accuracy, which is the largest difference between Timestamp and true time of applicability for any of the following fields: Latitude, Longitude, Geodetic Altitude, Pressure Altitude of Position, Height. to determine time of applicability of the location data provided.  Expressed in seconds, precise to 1/10ths of seconds. The accuracy reflects the 95% uncertainty bound value for the timestamp.
	TimestampAccuracy float32 `protobuf:"fixed32,13,opt,name=timestamp_accuracy,json=timestampAccuracy,proto3" json:"timestamp_accuracy,omitempty"`
	// Direction of flight expressed as a "True North-based" ground track angle.  This value is provided in degrees East of North with a minimum resolution of 1 degree.
	Track float32 `protobuf:"fixed32,14,opt,name=track,proto3" json:"track,omitempty"`
	// Speed up (vertically) WGS84-HAE, m/s.
	VerticalSpeed        float32  `protobuf:"fixed32,15,opt,name=vertical_speed,json=verticalSpeed,proto3" json:"vertical_speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RIDAircraftState) Reset()         { *m = RIDAircraftState{} }
func (m *RIDAircraftState) String() string { return proto.CompactTextString(m) }
func (*RIDAircraftState) ProtoMessage()    {}
func (*RIDAircraftState) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{26}
}

func (m *RIDAircraftState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RIDAircraftState.Unmarshal(m, b)
}
func (m *RIDAircraftState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RIDAircraftState.Marshal(b, m, deterministic)
}
func (m *RIDAircraftState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RIDAircraftState.Merge(m, src)
}
func (m *RIDAircraftState) XXX_Size() int {
	return xxx_messageInfo_RIDAircraftState.Size(m)
}
func (m *RIDAircraftState) XXX_DiscardUnknown() {
	xxx_messageInfo_RIDAircraftState.DiscardUnknown(m)
}

var xxx_messageInfo_RIDAircraftState proto.InternalMessageInfo

func (m *RIDAircraftState) GetGroupCeiling() float32 {
	if m != nil {
		return m.GroupCeiling
	}
	return 0
}

func (m *RIDAircraftState) GetGroupCount() int32 {
	if m != nil {
		return m.GroupCount
	}
	return 0
}

func (m *RIDAircraftState) GetGroupFloor() float32 {
	if m != nil {
		return m.GroupFloor
	}
	return 0
}

func (m *RIDAircraftState) GetGroupRadius() float32 {
	if m != nil {
		return m.GroupRadius
	}
	return 0
}

func (m *RIDAircraftState) GetGroupTimeEnd() *timestamp.Timestamp {
	if m != nil {
		return m.GroupTimeEnd
	}
	return nil
}

func (m *RIDAircraftState) GetGroupTimeStart() *timestamp.Timestamp {
	if m != nil {
		return m.GroupTimeStart
	}
	return nil
}

func (m *RIDAircraftState) GetHeight() *RIDHeight {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *RIDAircraftState) GetOperationalStatus() RIDOperationalStatus {
	if m != nil {
		return m.OperationalStatus
	}
	return RIDOperationalStatus_UNDECLARED
}

func (m *RIDAircraftState) GetPosition() *RIDAircraftPosition {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *RIDAircraftState) GetSpeed() float32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *RIDAircraftState) GetSpeedAccuracy() SpeedAccuracy {
	if m != nil {
		return m.SpeedAccuracy
	}
	return SpeedAccuracy_SA_UNKNOWN
}

func (m *RIDAircraftState) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *RIDAircraftState) GetTimestampAccuracy() float32 {
	if m != nil {
		return m.TimestampAccuracy
	}
	return 0
}

func (m *RIDAircraftState) GetTrack() float32 {
	if m != nil {
		return m.Track
	}
	return 0
}

func (m *RIDAircraftState) GetVerticalSpeed() float32 {
	if m != nil {
		return m.VerticalSpeed
	}
	return 0
}

// Additional authentication data.
type RIDAuthData struct {
	// Authentication data in form specified by `format`.
	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Format of additional authentication data.
	Format               string   `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RIDAuthData) Reset()         { *m = RIDAuthData{} }
func (m *RIDAuthData) String() string { return proto.CompactTextString(m) }
func (*RIDAuthData) ProtoMessage()    {}
func (*RIDAuthData) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{27}
}

func (m *RIDAuthData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RIDAuthData.Unmarshal(m, b)
}
func (m *RIDAuthData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RIDAuthData.Marshal(b, m, deterministic)
}
func (m *RIDAuthData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RIDAuthData.Merge(m, src)
}
func (m *RIDAuthData) XXX_Size() int {
	return xxx_messageInfo_RIDAuthData.Size(m)
}
func (m *RIDAuthData) XXX_DiscardUnknown() {
	xxx_messageInfo_RIDAuthData.DiscardUnknown(m)
}

var xxx_messageInfo_RIDAuthData proto.InternalMessageInfo

func (m *RIDAuthData) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *RIDAuthData) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

// Description of a remote ID flight.
type RIDFlight struct {
	// Generic type of aircraft.
	AircraftType RIDAircraftType `protobuf:"varint,1,opt,name=aircraft_type,json=aircraftType,proto3,enum=dssproto.RIDAircraftType" json:"aircraft_type,omitempty"`
	// The most up-to-date state of the aircraft.  Required unless `volumes` is specified.
	//
	// If current data is not being received from the UAS by the Service Provider, the lack of change in this field is sufficient to indicate that current data is not being received.
	CurrentState *RIDAircraftState `protobuf:"bytes,2,opt,name=current_state,json=currentState,proto3" json:"current_state,omitempty"`
	Id           string            `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// A short collection of recent aircraft movement, specified only when `include_recent_positions` is true.  If `volumes` is not specified and `include_recent_positions` is true, then this field is required.
	//
	// Recent positions provided in this field must conform to requirements in the standard which generally prohibit including positions outside the requested area except transitionally when the aircraft enters or exits the requested area, and which prohibit including positions that not sufficiently recent.
	//
	// Note that a UI should not draw a connective line between two consecutive position reports that both lie outside the requested area.
	RecentPositions []*RIDRecentAircraftPosition `protobuf:"bytes,4,rep,name=recent_positions,json=recentPositions,proto3" json:"recent_positions,omitempty"`
	// If specified as true, this flight is not a physical aircraft; it is just a simulation to test the system.
	Simulated bool `protobuf:"varint,5,opt,name=simulated,proto3" json:"simulated,omitempty"`
	// The set of spacetime volumes the aircraft is within.  Required if `current_state` is not specified.  The fields `time_start` and `time_end` are required if `current_state` is not specified.
	Volumes              []*Volume4D `protobuf:"bytes,6,rep,name=volumes,proto3" json:"volumes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RIDFlight) Reset()         { *m = RIDFlight{} }
func (m *RIDFlight) String() string { return proto.CompactTextString(m) }
func (*RIDFlight) ProtoMessage()    {}
func (*RIDFlight) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{28}
}

func (m *RIDFlight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RIDFlight.Unmarshal(m, b)
}
func (m *RIDFlight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RIDFlight.Marshal(b, m, deterministic)
}
func (m *RIDFlight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RIDFlight.Merge(m, src)
}
func (m *RIDFlight) XXX_Size() int {
	return xxx_messageInfo_RIDFlight.Size(m)
}
func (m *RIDFlight) XXX_DiscardUnknown() {
	xxx_messageInfo_RIDFlight.DiscardUnknown(m)
}

var xxx_messageInfo_RIDFlight proto.InternalMessageInfo

func (m *RIDFlight) GetAircraftType() RIDAircraftType {
	if m != nil {
		return m.AircraftType
	}
	return RIDAircraftType_NOT_DECLARED
}

func (m *RIDFlight) GetCurrentState() *RIDAircraftState {
	if m != nil {
		return m.CurrentState
	}
	return nil
}

func (m *RIDFlight) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RIDFlight) GetRecentPositions() []*RIDRecentAircraftPosition {
	if m != nil {
		return m.RecentPositions
	}
	return nil
}

func (m *RIDFlight) GetSimulated() bool {
	if m != nil {
		return m.Simulated
	}
	return false
}

func (m *RIDFlight) GetVolumes() []*Volume4D {
	if m != nil {
		return m.Volumes
	}
	return nil
}

// Details about a flight reported by a remote ID service provider.  At least one of the registration or serial fields must be filled if required by CAA.
type RIDFlightDetails struct {
	AuthData *RIDAuthData `protobuf:"bytes,1,opt,name=auth_data,json=authData,proto3" json:"auth_data,omitempty"`
	// ID for this flight, matching argument in request.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Free-text field that enables the operator to describe the purpose of a flight, if so desired.
	OperationDescription string `protobuf:"bytes,3,opt,name=operation_description,json=operationDescription,proto3" json:"operation_description,omitempty"`
	// CAA-issued registration/license ID for the remote pilot or operator.
	OperatorId string `protobuf:"bytes,4,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	// Location of party controlling the aircraft.
	OperatorLocation *LatLngPoint `protobuf:"bytes,5,opt,name=operator_location,json=operatorLocation,proto3" json:"operator_location,omitempty"`
	// If a CAA provides a method of registering UAS, this number is provided by the CAA or its authorized representative.  Required when required by law in a region.
	RegistrationNumber string `protobuf:"bytes,6,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	// Can be specified when no registration ID exists and required by law in a region. This is expressed in the ANSI/CTA-2063 Physical Serial Number format.
	SerialNumber         string   `protobuf:"bytes,7,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RIDFlightDetails) Reset()         { *m = RIDFlightDetails{} }
func (m *RIDFlightDetails) String() string { return proto.CompactTextString(m) }
func (*RIDFlightDetails) ProtoMessage()    {}
func (*RIDFlightDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{29}
}

func (m *RIDFlightDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RIDFlightDetails.Unmarshal(m, b)
}
func (m *RIDFlightDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RIDFlightDetails.Marshal(b, m, deterministic)
}
func (m *RIDFlightDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RIDFlightDetails.Merge(m, src)
}
func (m *RIDFlightDetails) XXX_Size() int {
	return xxx_messageInfo_RIDFlightDetails.Size(m)
}
func (m *RIDFlightDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_RIDFlightDetails.DiscardUnknown(m)
}

var xxx_messageInfo_RIDFlightDetails proto.InternalMessageInfo

func (m *RIDFlightDetails) GetAuthData() *RIDAuthData {
	if m != nil {
		return m.AuthData
	}
	return nil
}

func (m *RIDFlightDetails) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RIDFlightDetails) GetOperationDescription() string {
	if m != nil {
		return m.OperationDescription
	}
	return ""
}

func (m *RIDFlightDetails) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

func (m *RIDFlightDetails) GetOperatorLocation() *LatLngPoint {
	if m != nil {
		return m.OperatorLocation
	}
	return nil
}

func (m *RIDFlightDetails) GetRegistrationNumber() string {
	if m != nil {
		return m.RegistrationNumber
	}
	return ""
}

func (m *RIDFlightDetails) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

// A relative altitude for the purposes of remote ID.
type RIDHeight struct {
	// Distance above reference datum.  This value is provided in meters and must have a minimum resolution of 1 meter.
	Distance float32 `protobuf:"fixed32,1,opt,name=distance,proto3" json:"distance,omitempty"`
	// The reference datum above which the height is reported.
	Reference            RIDHeight_RIDHeightReference `protobuf:"varint,2,opt,name=reference,proto3,enum=dssproto.RIDHeight_RIDHeightReference" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *RIDHeight) Reset()         { *m = RIDHeight{} }
func (m *RIDHeight) String() string { return proto.CompactTextString(m) }
func (*RIDHeight) ProtoMessage()    {}
func (*RIDHeight) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{30}
}

func (m *RIDHeight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RIDHeight.Unmarshal(m, b)
}
func (m *RIDHeight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RIDHeight.Marshal(b, m, deterministic)
}
func (m *RIDHeight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RIDHeight.Merge(m, src)
}
func (m *RIDHeight) XXX_Size() int {
	return xxx_messageInfo_RIDHeight.Size(m)
}
func (m *RIDHeight) XXX_DiscardUnknown() {
	xxx_messageInfo_RIDHeight.DiscardUnknown(m)
}

var xxx_messageInfo_RIDHeight proto.InternalMessageInfo

func (m *RIDHeight) GetDistance() float32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *RIDHeight) GetReference() RIDHeight_RIDHeightReference {
	if m != nil {
		return m.Reference
	}
	return RIDHeight_RID_HEIGHT_REFERENCE_TAKEOFF_LOCATION
}

type RIDRecentAircraftPosition struct {
	Position *RIDAircraftPosition `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	// Time at which this position applied.  RFC 3339 format, per OpenAPI specification.
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RIDRecentAircraftPosition) Reset()         { *m = RIDRecentAircraftPosition{} }
func (m *RIDRecentAircraftPosition) String() string { return proto.CompactTextString(m) }
func (*RIDRecentAircraftPosition) ProtoMessage()    {}
func (*RIDRecentAircraftPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{31}
}

func (m *RIDRecentAircraftPosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RIDRecentAircraftPosition.Unmarshal(m, b)
}
func (m *RIDRecentAircraftPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RIDRecentAircraftPosition.Marshal(b, m, deterministic)
}
func (m *RIDRecentAircraftPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RIDRecentAircraftPosition.Merge(m, src)
}
func (m *RIDRecentAircraftPosition) XXX_Size() int {
	return xxx_messageInfo_RIDRecentAircraftPosition.Size(m)
}
func (m *RIDRecentAircraftPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_RIDRecentAircraftPosition.DiscardUnknown(m)
}

var xxx_messageInfo_RIDRecentAircraftPosition proto.InternalMessageInfo

func (m *RIDRecentAircraftPosition) GetPosition() *RIDAircraftPosition {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *RIDRecentAircraftPosition) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

// Response to DSS query for Identification Service Areas in an area of interest.
type SearchIdentificationServiceAreasResponse struct {
	// Identification Service Areas in the area of interest.
	ServiceAreas         []*IdentificationServiceArea `protobuf:"bytes,1,rep,name=service_areas,json=serviceAreas,proto3" json:"service_areas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SearchIdentificationServiceAreasResponse) Reset() {
	*m = SearchIdentificationServiceAreasResponse{}
}
func (m *SearchIdentificationServiceAreasResponse) String() string { return proto.CompactTextString(m) }
func (*SearchIdentificationServiceAreasResponse) ProtoMessage()    {}
func (*SearchIdentificationServiceAreasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{32}
}

func (m *SearchIdentificationServiceAreasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchIdentificationServiceAreasResponse.Unmarshal(m, b)
}
func (m *SearchIdentificationServiceAreasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchIdentificationServiceAreasResponse.Marshal(b, m, deterministic)
}
func (m *SearchIdentificationServiceAreasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchIdentificationServiceAreasResponse.Merge(m, src)
}
func (m *SearchIdentificationServiceAreasResponse) XXX_Size() int {
	return xxx_messageInfo_SearchIdentificationServiceAreasResponse.Size(m)
}
func (m *SearchIdentificationServiceAreasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchIdentificationServiceAreasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchIdentificationServiceAreasResponse proto.InternalMessageInfo

func (m *SearchIdentificationServiceAreasResponse) GetServiceAreas() []*IdentificationServiceArea {
	if m != nil {
		return m.ServiceAreas
	}
	return nil
}

// Response to DSS query for subscriptions in a particular area.
type SearchSubscriptionsResponse struct {
	// Subscriptions that overlap the specified area.
	Subscriptions        []*Subscription `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SearchSubscriptionsResponse) Reset()         { *m = SearchSubscriptionsResponse{} }
func (m *SearchSubscriptionsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchSubscriptionsResponse) ProtoMessage()    {}
func (*SearchSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{33}
}

func (m *SearchSubscriptionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSubscriptionsResponse.Unmarshal(m, b)
}
func (m *SearchSubscriptionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSubscriptionsResponse.Marshal(b, m, deterministic)
}
func (m *SearchSubscriptionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSubscriptionsResponse.Merge(m, src)
}
func (m *SearchSubscriptionsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchSubscriptionsResponse.Size(m)
}
func (m *SearchSubscriptionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSubscriptionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSubscriptionsResponse proto.InternalMessageInfo

func (m *SearchSubscriptionsResponse) GetSubscriptions() []*Subscription {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

// Subscriber to notify of a creation/change/deletion of a change in the airspace.  This is provided by the DSS to a client changing the airspace, and it is the responsibility of the client changing the airspace (they will receive a set of these notification requests) to send a notification to each specified `url`.
type SubscriberToNotify struct {
	// Subscription(s) prompting this notification.
	Subscriptions []*SubscriptionState `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	// The endpoint that the client mutating the airspace should provide the update to.  API depends on the DSS action taken that triggered this notification request.
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriberToNotify) Reset()         { *m = SubscriberToNotify{} }
func (m *SubscriberToNotify) String() string { return proto.CompactTextString(m) }
func (*SubscriberToNotify) ProtoMessage()    {}
func (*SubscriberToNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{34}
}

func (m *SubscriberToNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriberToNotify.Unmarshal(m, b)
}
func (m *SubscriberToNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriberToNotify.Marshal(b, m, deterministic)
}
func (m *SubscriberToNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriberToNotify.Merge(m, src)
}
func (m *SubscriberToNotify) XXX_Size() int {
	return xxx_messageInfo_SubscriberToNotify.Size(m)
}
func (m *SubscriberToNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriberToNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriberToNotify proto.InternalMessageInfo

func (m *SubscriberToNotify) GetSubscriptions() []*SubscriptionState {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

func (m *SubscriberToNotify) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// Specification of a geographic area that a client is interested in on an ongoing basis (e.g., “planning area”).  Internal to the DSS.
type Subscription struct {
	Callbacks *SubscriptionCallbacks `protobuf:"bytes,1,opt,name=callbacks,proto3" json:"callbacks,omitempty"`
	// Unique identifier for this subscription.
	Id                string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	NotificationIndex int32  `protobuf:"varint,3,opt,name=notification_index,json=notificationIndex,proto3" json:"notification_index,omitempty"`
	// Assigned by the DSS based on creating client’s ID (via access token).  Used for restricting mutation and deletion operations to owner.
	Owner string `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	// If set, this subscription will be automatically removed after this time.  RFC 3339 format, per OpenAPI specification.
	TimeEnd *timestamp.Timestamp `protobuf:"bytes,5,opt,name=time_end,json=timeEnd,proto3" json:"time_end,omitempty"`
	// If set, this Subscription will not generate any notifications before this time.  RFC 3339 format, per OpenAPI specification.
	TimeStart            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=time_start,json=timeStart,proto3" json:"time_start,omitempty"`
	Version              string               `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{35}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetCallbacks() *SubscriptionCallbacks {
	if m != nil {
		return m.Callbacks
	}
	return nil
}

func (m *Subscription) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Subscription) GetNotificationIndex() int32 {
	if m != nil {
		return m.NotificationIndex
	}
	return 0
}

func (m *Subscription) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Subscription) GetTimeEnd() *timestamp.Timestamp {
	if m != nil {
		return m.TimeEnd
	}
	return nil
}

func (m *Subscription) GetTimeStart() *timestamp.Timestamp {
	if m != nil {
		return m.TimeStart
	}
	return nil
}

func (m *Subscription) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Endpoints that should be called when an applicable event occurs.  At least one field must be specified.
type SubscriptionCallbacks struct {
	// If specified, other clients will be instructed by the DSS to call this endpoint when an Identification Service Area relevant to this Subscription is created, modified, or deleted.  Must implement PUT and DELETE according to the `/uss/identification_service_areas/{id}` path API.
	IdentificationServiceAreaUrl string   `protobuf:"bytes,1,opt,name=identification_service_area_url,json=identificationServiceAreaUrl,proto3" json:"identification_service_area_url,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *SubscriptionCallbacks) Reset()         { *m = SubscriptionCallbacks{} }
func (m *SubscriptionCallbacks) String() string { return proto.CompactTextString(m) }
func (*SubscriptionCallbacks) ProtoMessage()    {}
func (*SubscriptionCallbacks) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{36}
}

func (m *SubscriptionCallbacks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionCallbacks.Unmarshal(m, b)
}
func (m *SubscriptionCallbacks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionCallbacks.Marshal(b, m, deterministic)
}
func (m *SubscriptionCallbacks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionCallbacks.Merge(m, src)
}
func (m *SubscriptionCallbacks) XXX_Size() int {
	return xxx_messageInfo_SubscriptionCallbacks.Size(m)
}
func (m *SubscriptionCallbacks) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionCallbacks.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionCallbacks proto.InternalMessageInfo

func (m *SubscriptionCallbacks) GetIdentificationServiceAreaUrl() string {
	if m != nil {
		return m.IdentificationServiceAreaUrl
	}
	return ""
}

// State of AreaSubscription which is causing a notification to be sent.
type SubscriptionState struct {
	NotificationIndex    int32    `protobuf:"varint,1,opt,name=notification_index,json=notificationIndex,proto3" json:"notification_index,omitempty"`
	SubscriptionId       string   `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionState) Reset()         { *m = SubscriptionState{} }
func (m *SubscriptionState) String() string { return proto.CompactTextString(m) }
func (*SubscriptionState) ProtoMessage()    {}
func (*SubscriptionState) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{37}
}

func (m *SubscriptionState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionState.Unmarshal(m, b)
}
func (m *SubscriptionState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionState.Marshal(b, m, deterministic)
}
func (m *SubscriptionState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionState.Merge(m, src)
}
func (m *SubscriptionState) XXX_Size() int {
	return xxx_messageInfo_SubscriptionState.Size(m)
}
func (m *SubscriptionState) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionState.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionState proto.InternalMessageInfo

func (m *SubscriptionState) GetNotificationIndex() int32 {
	if m != nil {
		return m.NotificationIndex
	}
	return 0
}

func (m *SubscriptionState) GetSubscriptionId() string {
	if m != nil {
		return m.SubscriptionId
	}
	return ""
}

// Parameters for a request to update an Identification Service Area in the DSS.
type UpdateIdentificationServiceAreaParameters struct {
	// The bounding spacetime extents of this Identification Service Area.  End time must be specified.  If start time is not specified, it will remain unchanged.  Start times in the past should be rejected by the DSS unless they are unchanged from the Identification Service Area's current start time.
	//
	// These extents should not reveal any sensitive information about the flight or flights within them.  This means, for instance, that extents should not tightly-wrap a flight path, nor should they generally be centered around the takeoff point of a single flight.
	Extents              *Volume4D `protobuf:"bytes,1,opt,name=extents,proto3" json:"extents,omitempty"`
	FlightsUrl           string    `protobuf:"bytes,2,opt,name=flights_url,json=flightsUrl,proto3" json:"flights_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateIdentificationServiceAreaParameters) Reset() {
	*m = UpdateIdentificationServiceAreaParameters{}
}
func (m *UpdateIdentificationServiceAreaParameters) String() string { return proto.CompactTextString(m) }
func (*UpdateIdentificationServiceAreaParameters) ProtoMessage()    {}
func (*UpdateIdentificationServiceAreaParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{38}
}

func (m *UpdateIdentificationServiceAreaParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateIdentificationServiceAreaParameters.Unmarshal(m, b)
}
func (m *UpdateIdentificationServiceAreaParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateIdentificationServiceAreaParameters.Marshal(b, m, deterministic)
}
func (m *UpdateIdentificationServiceAreaParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateIdentificationServiceAreaParameters.Merge(m, src)
}
func (m *UpdateIdentificationServiceAreaParameters) XXX_Size() int {
	return xxx_messageInfo_UpdateIdentificationServiceAreaParameters.Size(m)
}
func (m *UpdateIdentificationServiceAreaParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateIdentificationServiceAreaParameters.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateIdentificationServiceAreaParameters proto.InternalMessageInfo

func (m *UpdateIdentificationServiceAreaParameters) GetExtents() *Volume4D {
	if m != nil {
		return m.Extents
	}
	return nil
}

func (m *UpdateIdentificationServiceAreaParameters) GetFlightsUrl() string {
	if m != nil {
		return m.FlightsUrl
	}
	return ""
}

// Parameters for a request to update a subscription in the DSS.
type UpdateSubscriptionParameters struct {
	Callbacks *SubscriptionCallbacks `protobuf:"bytes,1,opt,name=callbacks,proto3" json:"callbacks,omitempty"`
	// The spacetime extents of the volume to subscribe to.
	//
	// This subscription will automatically be deleted after its end time if it has not been refreshed by then.  If end time is not specified, the value will be chosen automatically by the DSS.
	//
	// Note that some Entities triggering notifications may lie entirely outside the requested area.
	Extents              *Volume4D `protobuf:"bytes,2,opt,name=extents,proto3" json:"extents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateSubscriptionParameters) Reset()         { *m = UpdateSubscriptionParameters{} }
func (m *UpdateSubscriptionParameters) String() string { return proto.CompactTextString(m) }
func (*UpdateSubscriptionParameters) ProtoMessage()    {}
func (*UpdateSubscriptionParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{39}
}

func (m *UpdateSubscriptionParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubscriptionParameters.Unmarshal(m, b)
}
func (m *UpdateSubscriptionParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubscriptionParameters.Marshal(b, m, deterministic)
}
func (m *UpdateSubscriptionParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubscriptionParameters.Merge(m, src)
}
func (m *UpdateSubscriptionParameters) XXX_Size() int {
	return xxx_messageInfo_UpdateSubscriptionParameters.Size(m)
}
func (m *UpdateSubscriptionParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubscriptionParameters.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubscriptionParameters proto.InternalMessageInfo

func (m *UpdateSubscriptionParameters) GetCallbacks() *SubscriptionCallbacks {
	if m != nil {
		return m.Callbacks
	}
	return nil
}

func (m *UpdateSubscriptionParameters) GetExtents() *Volume4D {
	if m != nil {
		return m.Extents
	}
	return nil
}

// A three-dimensional geographic volume consisting of a vertically-extruded polygon.
type Volume3D struct {
	// Maximum bounding altitude of this volume.
	AltitudeHi float32 `protobuf:"fixed32,1,opt,name=altitude_hi,json=altitudeHi,proto3" json:"altitude_hi,omitempty"`
	// Minimum bounding altitude of this volume.
	AltitudeLo float32 `protobuf:"fixed32,2,opt,name=altitude_lo,json=altitudeLo,proto3" json:"altitude_lo,omitempty"`
	// Projection of this volume onto the earth's surface.
	Footprint            *GeoPolygon `protobuf:"bytes,3,opt,name=footprint,proto3" json:"footprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Volume3D) Reset()         { *m = Volume3D{} }
func (m *Volume3D) String() string { return proto.CompactTextString(m) }
func (*Volume3D) ProtoMessage()    {}
func (*Volume3D) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{40}
}

func (m *Volume3D) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume3D.Unmarshal(m, b)
}
func (m *Volume3D) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume3D.Marshal(b, m, deterministic)
}
func (m *Volume3D) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume3D.Merge(m, src)
}
func (m *Volume3D) XXX_Size() int {
	return xxx_messageInfo_Volume3D.Size(m)
}
func (m *Volume3D) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume3D.DiscardUnknown(m)
}

var xxx_messageInfo_Volume3D proto.InternalMessageInfo

func (m *Volume3D) GetAltitudeHi() float32 {
	if m != nil {
		return m.AltitudeHi
	}
	return 0
}

func (m *Volume3D) GetAltitudeLo() float32 {
	if m != nil {
		return m.AltitudeLo
	}
	return 0
}

func (m *Volume3D) GetFootprint() *GeoPolygon {
	if m != nil {
		return m.Footprint
	}
	return nil
}

// Contiguous block of geographic spacetime.
type Volume4D struct {
	// Constant spatial extent of this volume.
	SpatialVolume *Volume3D `protobuf:"bytes,1,opt,name=spatial_volume,json=spatialVolume,proto3" json:"spatial_volume,omitempty"`
	// End time of this volume.  RFC 3339 format, per OpenAPI specification.
	TimeEnd *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time_end,json=timeEnd,proto3" json:"time_end,omitempty"`
	// Beginning time of this volume.  RFC 3339 format, per OpenAPI specification.
	TimeStart            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=time_start,json=timeStart,proto3" json:"time_start,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Volume4D) Reset()         { *m = Volume4D{} }
func (m *Volume4D) String() string { return proto.CompactTextString(m) }
func (*Volume4D) ProtoMessage()    {}
func (*Volume4D) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6b4bd547de77484, []int{41}
}

func (m *Volume4D) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume4D.Unmarshal(m, b)
}
func (m *Volume4D) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume4D.Marshal(b, m, deterministic)
}
func (m *Volume4D) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume4D.Merge(m, src)
}
func (m *Volume4D) XXX_Size() int {
	return xxx_messageInfo_Volume4D.Size(m)
}
func (m *Volume4D) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume4D.DiscardUnknown(m)
}

var xxx_messageInfo_Volume4D proto.InternalMessageInfo

func (m *Volume4D) GetSpatialVolume() *Volume3D {
	if m != nil {
		return m.SpatialVolume
	}
	return nil
}

func (m *Volume4D) GetTimeEnd() *timestamp.Timestamp {
	if m != nil {
		return m.TimeEnd
	}
	return nil
}

func (m *Volume4D) GetTimeStart() *timestamp.Timestamp {
	if m != nil {
		return m.TimeStart
	}
	return nil
}

func init() {
	proto.RegisterEnum("dssproto.HorizontalAccuracy", HorizontalAccuracy_name, HorizontalAccuracy_value)
	proto.RegisterEnum("dssproto.RIDAircraftType", RIDAircraftType_name, RIDAircraftType_value)
	proto.RegisterEnum("dssproto.RIDOperationalStatus", RIDOperationalStatus_name, RIDOperationalStatus_value)
	proto.RegisterEnum("dssproto.SpeedAccuracy", SpeedAccuracy_name, SpeedAccuracy_value)
	proto.RegisterEnum("dssproto.VerticalAccuracy", VerticalAccuracy_name, VerticalAccuracy_value)
	proto.RegisterEnum("dssproto.RIDHeight_RIDHeightReference", RIDHeight_RIDHeightReference_name, RIDHeight_RIDHeightReference_value)
	proto.RegisterType((*CreateIdentificationServiceAreaParameters)(nil), "dssproto.CreateIdentificationServiceAreaParameters")
	proto.RegisterType((*CreateSubscriptionParameters)(nil), "dssproto.CreateSubscriptionParameters")
	proto.RegisterType((*DeleteIdentificationServiceAreaResponse)(nil), "dssproto.DeleteIdentificationServiceAreaResponse")
	proto.RegisterType((*DeleteSubscriptionResponse)(nil), "dssproto.DeleteSubscriptionResponse")
	proto.RegisterType((*DeleteV1DssIdentificationServiceAreasIdVersionRequest)(nil), "dssproto.DeleteV1DssIdentificationServiceAreasIdVersionRequest")
	proto.RegisterType((*DeleteV1DssSubscriptionsIdVersionRequest)(nil), "dssproto.DeleteV1DssSubscriptionsIdVersionRequest")
	proto.RegisterType((*ErrorResponse)(nil), "dssproto.ErrorResponse")
	proto.RegisterType((*GeoPolygon)(nil), "dssproto.GeoPolygon")
	proto.RegisterType((*GetFlightDetailsResponse)(nil), "dssproto.GetFlightDetailsResponse")
	proto.RegisterType((*GetFlightsResponse)(nil), "dssproto.GetFlightsResponse")
	proto.RegisterType((*GetIdentificationServiceAreaResponse)(nil), "dssproto.GetIdentificationServiceAreaResponse")
	proto.RegisterType((*GetSubscriptionResponse)(nil), "dssproto.GetSubscriptionResponse")
	proto.RegisterType((*GetV1DssIdentificationServiceAreasIdRequest)(nil), "dssproto.GetV1DssIdentificationServiceAreasIdRequest")
	proto.RegisterType((*GetV1DssIdentificationServiceAreasRequest)(nil), "dssproto.GetV1DssIdentificationServiceAreasRequest")
	proto.RegisterType((*GetV1DssSubscriptionsIdRequest)(nil), "dssproto.GetV1DssSubscriptionsIdRequest")
	proto.RegisterType((*GetV1DssSubscriptionsRequest)(nil), "dssproto.GetV1DssSubscriptionsRequest")
	proto.RegisterType((*IdentificationServiceArea)(nil), "dssproto.IdentificationServiceArea")
	proto.RegisterType((*LatLngPoint)(nil), "dssproto.LatLngPoint")
	proto.RegisterType((*PutIdentificationServiceAreaNotificationParameters)(nil), "dssproto.PutIdentificationServiceAreaNotificationParameters")
	proto.RegisterType((*PutIdentificationServiceAreaResponse)(nil), "dssproto.PutIdentificationServiceAreaResponse")
	proto.RegisterType((*PutSubscriptionResponse)(nil), "dssproto.PutSubscriptionResponse")
	proto.RegisterType((*PutV1DssIdentificationServiceAreasIdRequest)(nil), "dssproto.PutV1DssIdentificationServiceAreasIdRequest")
	proto.RegisterType((*PutV1DssIdentificationServiceAreasIdVersionRequest)(nil), "dssproto.PutV1DssIdentificationServiceAreasIdVersionRequest")
	proto.RegisterType((*PutV1DssSubscriptionsIdRequest)(nil), "dssproto.PutV1DssSubscriptionsIdRequest")
	proto.RegisterType((*PutV1DssSubscriptionsIdVersionRequest)(nil), "dssproto.PutV1DssSubscriptionsIdVersionRequest")
	proto.RegisterType((*RIDAircraftPosition)(nil), "dssproto.RIDAircraftPosition")
	proto.RegisterType((*RIDAircraftState)(nil), "dssproto.RIDAircraftState")
	proto.RegisterType((*RIDAuthData)(nil), "dssproto.RIDAuthData")
	proto.RegisterType((*RIDFlight)(nil), "dssproto.RIDFlight")
	proto.RegisterType((*RIDFlightDetails)(nil), "dssproto.RIDFlightDetails")
	proto.RegisterType((*RIDHeight)(nil), "dssproto.RIDHeight")
	proto.RegisterType((*RIDRecentAircraftPosition)(nil), "dssproto.RIDRecentAircraftPosition")
	proto.RegisterType((*SearchIdentificationServiceAreasResponse)(nil), "dssproto.SearchIdentificationServiceAreasResponse")
	proto.RegisterType((*SearchSubscriptionsResponse)(nil), "dssproto.SearchSubscriptionsResponse")
	proto.RegisterType((*SubscriberToNotify)(nil), "dssproto.SubscriberToNotify")
	proto.RegisterType((*Subscription)(nil), "dssproto.Subscription")
	proto.RegisterType((*SubscriptionCallbacks)(nil), "dssproto.SubscriptionCallbacks")
	proto.RegisterType((*SubscriptionState)(nil), "dssproto.SubscriptionState")
	proto.RegisterType((*UpdateIdentificationServiceAreaParameters)(nil), "dssproto.UpdateIdentificationServiceAreaParameters")
	proto.RegisterType((*UpdateSubscriptionParameters)(nil), "dssproto.UpdateSubscriptionParameters")
	proto.RegisterType((*Volume3D)(nil), "dssproto.Volume3D")
	proto.RegisterType((*Volume4D)(nil), "dssproto.Volume4D")
}

func init() { proto.RegisterFile("pkg/dssproto/dss.proto", fileDescriptor_e6b4bd547de77484) }

var fileDescriptor_e6b4bd547de77484 = []byte{
	// 2708 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0x4b, 0x6f, 0x23, 0xc7,
	0x11, 0xf6, 0x50, 0xe2, 0xab, 0x48, 0x4a, 0xa3, 0xde, 0x17, 0x97, 0x96, 0xbd, 0xde, 0xf1, 0xee,
	0x7a, 0x57, 0x6b, 0xeb, 0xb9, 0x02, 0xb2, 0x7e, 0xac, 0x3d, 0x2b, 0x8e, 0x44, 0x62, 0x29, 0x92,
	0x68, 0x52, 0x72, 0x82, 0x00, 0x19, 0x8c, 0xc8, 0x96, 0x34, 0x58, 0x6a, 0x86, 0x99, 0x69, 0x2a,
	0xd6, 0x1a, 0x06, 0x82, 0x00, 0xc9, 0xc1, 0x39, 0xe5, 0x71, 0x0d, 0x72, 0x8f, 0x01, 0x03, 0x39,
	0x25, 0x40, 0x12, 0x24, 0xa7, 0x20, 0x77, 0x23, 0xc8, 0x35, 0x01, 0x72, 0xce, 0x6f, 0x08, 0xba,
	0x7b, 0x5e, 0xa4, 0xf8, 0x92, 0xbc, 0x31, 0x72, 0x9a, 0xa9, 0xea, 0xaa, 0xae, 0xaf, 0xab, 0xab,
	0xab, 0xab, 0xbb, 0xe1, 0x7a, 0xf7, 0xf9, 0xd1, 0x4a, 0xdb, 0x75, 0xbb, 0x8e, 0x4d, 0x6d, 0xf6,
	0xb3, 0xcc, 0xff, 0x50, 0xca, 0xe7, 0x15, 0x16, 0x8f, 0x6c, 0xfb, 0xa8, 0x43, 0x56, 0x8c, 0xae,
	0xb9, 0x62, 0x58, 0x96, 0x4d, 0x0d, 0x6a, 0xda, 0x96, 0x27, 0x57, 0xb8, 0xe5, 0xb5, 0x72, 0xea,
	0xa0, 0x77, 0xb8, 0x42, 0xcd, 0x13, 0xe2, 0x52, 0xe3, 0xa4, 0x2b, 0x04, 0x94, 0x17, 0xf0, 0x60,
	0xcb, 0x21, 0x06, 0x25, 0xe5, 0x36, 0xb1, 0xa8, 0x79, 0x68, 0xb6, 0xb8, 0x7e, 0x83, 0x38, 0xa7,
	0x66, 0x8b, 0xa8, 0x0e, 0x31, 0xea, 0x86, 0x63, 0x9c, 0x10, 0x4a, 0x1c, 0x17, 0xbd, 0x0d, 0x49,
	0xf2, 0x09, 0x25, 0x16, 0x75, 0xf3, 0xd2, 0x1b, 0xd2, 0xfd, 0xcc, 0x3a, 0x5a, 0xf6, 0x71, 0x2c,
	0xef, 0xdb, 0x9d, 0xde, 0x09, 0x79, 0x54, 0xc4, 0xbe, 0x08, 0xba, 0x05, 0x99, 0xc3, 0x8e, 0x79,
	0x74, 0x4c, 0x5d, 0xbd, 0xe7, 0x74, 0xf2, 0xb1, 0x37, 0xa4, 0xfb, 0x69, 0x0c, 0x1e, 0x6b, 0xcf,
	0xe9, 0x28, 0x3f, 0x95, 0x60, 0x51, 0x18, 0x6f, 0xf4, 0x0e, 0xdc, 0x96, 0x63, 0x76, 0x99, 0xe9,
	0x88, 0xbd, 0x0f, 0x20, 0xdd, 0x32, 0x3a, 0x9d, 0x03, 0xa3, 0xf5, 0xdc, 0xb7, 0x78, 0x2b, 0xb4,
	0x18, 0x55, 0xda, 0xf2, 0xc5, 0x70, 0xa8, 0x11, 0x85, 0x1b, 0x9b, 0x08, 0x57, 0xf9, 0xad, 0x04,
	0x6f, 0x15, 0x49, 0x87, 0x8c, 0x71, 0x05, 0x26, 0x6e, 0xd7, 0xb6, 0x5c, 0x82, 0xb6, 0x21, 0xeb,
	0x0a, 0xb6, 0x6e, 0x38, 0xc4, 0xf0, 0xb0, 0xbd, 0x19, 0x76, 0x3f, 0xba, 0x8b, 0x8c, 0x1b, 0x12,
	0xe8, 0x09, 0x64, 0x5c, 0x31, 0x8a, 0x03, 0xe2, 0x30, 0x94, 0x33, 0xf7, 0x33, 0xeb, 0x8b, 0xe7,
	0x86, 0x78, 0x40, 0x9c, 0xa6, 0x5d, 0xb5, 0xa9, 0x79, 0x78, 0x86, 0xa3, 0x0a, 0xca, 0xb7, 0xa1,
	0x20, 0x20, 0x47, 0x7d, 0x11, 0xa0, 0x7c, 0x17, 0xb2, 0x6e, 0x84, 0xef, 0xa1, 0xbc, 0x3e, 0xdc,
	0x83, 0xb8, 0x4f, 0x56, 0x31, 0x60, 0x53, 0xf4, 0xbc, 0xbf, 0x56, 0x74, 0xdd, 0x91, 0xc3, 0x71,
	0xcb, 0xed, 0x7d, 0xe2, 0xb8, 0xdc, 0xea, 0xf7, 0x7b, 0xc4, 0xa5, 0x68, 0x0e, 0x62, 0x66, 0x9b,
	0x9b, 0x4a, 0xe3, 0x98, 0xd9, 0x46, 0x79, 0x48, 0x9e, 0x0a, 0x09, 0x2f, 0x02, 0x7c, 0x52, 0x69,
	0xc2, 0xfd, 0x88, 0x89, 0x28, 0x96, 0xaf, 0xd3, 0xeb, 0x03, 0xc8, 0x69, 0x8e, 0x63, 0x3b, 0x81,
	0x17, 0xf2, 0x90, 0x3c, 0x21, 0xae, 0x6b, 0x1c, 0x11, 0x4f, 0xdf, 0x27, 0x95, 0x0f, 0x01, 0x76,
	0x88, 0x5d, 0xb7, 0x3b, 0x67, 0x47, 0xb6, 0x85, 0xd6, 0x20, 0x75, 0x4a, 0x1c, 0x6a, 0xb6, 0x08,
	0x8b, 0x35, 0x36, 0x11, 0xd7, 0x42, 0x4f, 0x55, 0x0c, 0x5a, 0xb1, 0x8e, 0xea, 0xb6, 0x69, 0x51,
	0x1c, 0x88, 0x29, 0x75, 0xc8, 0xef, 0x10, 0xba, 0xcd, 0x23, 0xba, 0x48, 0xa8, 0x61, 0x76, 0xdc,
	0xc0, 0xec, 0x23, 0x48, 0xb6, 0x05, 0xcb, 0xf3, 0x7b, 0x21, 0xec, 0x0d, 0x97, 0x8b, 0xfd, 0x4a,
	0xbe, 0xa8, 0xf2, 0x19, 0xa0, 0xa0, 0xc7, 0xb0, 0xaf, 0x77, 0x20, 0xe9, 0x2d, 0x1b, 0x0f, 0xd9,
	0x95, 0x21, 0x7d, 0x61, 0x5f, 0x06, 0x7d, 0x0b, 0xd2, 0xc1, 0x32, 0xf7, 0x22, 0xbf, 0xb0, 0x2c,
	0x12, 0xc1, 0xb2, 0x9f, 0x08, 0x96, 0x9b, 0xbe, 0x04, 0x0e, 0x85, 0x15, 0x0b, 0xee, 0xec, 0x10,
	0xfa, 0x8d, 0xc5, 0xbf, 0xb2, 0x07, 0x37, 0x76, 0x08, 0x7d, 0xe9, 0xc1, 0xfb, 0x01, 0x3c, 0xdc,
	0x21, 0x74, 0x62, 0xe4, 0x8e, 0x08, 0x2e, 0xe5, 0x4f, 0x12, 0x3c, 0x98, 0xac, 0xef, 0x6b, 0x23,
	0x98, 0x0d, 0x7c, 0x90, 0xc6, 0xfc, 0x1f, 0x7d, 0x08, 0x39, 0x62, 0x38, 0x1d, 0x93, 0xb8, 0x54,
	0x67, 0xde, 0x9d, 0x62, 0x16, 0xb2, 0xbe, 0x02, 0x63, 0xa1, 0xf7, 0x20, 0xd3, 0x31, 0x68, 0xa0,
	0x3e, 0x33, 0x51, 0x1d, 0x84, 0x38, 0x63, 0x28, 0xab, 0xf0, 0xba, 0x0f, 0x7f, 0x60, 0x55, 0x8d,
	0x1a, 0xf1, 0x3a, 0x2c, 0x0e, 0xd5, 0x18, 0x33, 0x46, 0xe5, 0x3f, 0x12, 0xdc, 0x1c, 0xe9, 0x9d,
	0xc1, 0xe4, 0x2f, 0x0d, 0x26, 0x7f, 0x0f, 0x42, 0x2c, 0x58, 0xd1, 0x57, 0x21, 0x6e, 0xff, 0xc0,
	0x22, 0x0e, 0x1f, 0x6b, 0x1a, 0x0b, 0x02, 0x6d, 0x42, 0x8a, 0x39, 0x40, 0x27, 0x56, 0x3b, 0x3f,
	0x3b, 0xd1, 0x09, 0x49, 0x26, 0xab, 0x59, 0x6d, 0xf4, 0x18, 0x80, 0xab, 0xb9, 0xd4, 0x70, 0x68,
	0x3e, 0x3e, 0xdd, 0x12, 0x68, 0x30, 0xe1, 0x68, 0x66, 0x49, 0xf4, 0x67, 0x96, 0x35, 0xc8, 0x44,
	0xd2, 0x00, 0x92, 0x61, 0xa6, 0x63, 0x50, 0x3e, 0x32, 0x09, 0xb3, 0x5f, 0xce, 0xb1, 0x8e, 0xf8,
	0x98, 0x18, 0xc7, 0x3a, 0x52, 0xfe, 0x2c, 0xc1, 0x7a, 0xbd, 0x37, 0x7a, 0x41, 0xf1, 0x9c, 0xee,
	0xb1, 0x23, 0xfb, 0xde, 0xcb, 0xda, 0x5e, 0x54, 0xc8, 0x45, 0xd7, 0x85, 0xbf, 0xc1, 0xbc, 0x3a,
	0x7c, 0x11, 0x35, 0xa8, 0x41, 0x09, 0xee, 0xd7, 0x50, 0xbe, 0x94, 0xe0, 0xce, 0xb8, 0x11, 0xfc,
	0xdf, 0x6d, 0x89, 0xbf, 0x96, 0xe0, 0x46, 0xbd, 0x37, 0x3c, 0xa7, 0x94, 0x20, 0x17, 0xc5, 0xe8,
	0x67, 0xd3, 0xa9, 0x40, 0x66, 0x23, 0x20, 0xdd, 0x73, 0xd9, 0x29, 0x76, 0x81, 0xec, 0xf4, 0xb9,
	0x04, 0x0f, 0xeb, 0xbd, 0x4b, 0xa7, 0x27, 0xf4, 0x0c, 0x12, 0x5d, 0x16, 0x2b, 0x7e, 0x55, 0xb3,
	0x11, 0x5a, 0x9d, 0xba, 0x94, 0xc3, 0x5e, 0x17, 0xca, 0x17, 0x22, 0x42, 0xbf, 0xee, 0x2e, 0x3f,
	0x06, 0xd3, 0x5e, 0xb7, 0x7d, 0x31, 0x4c, 0xd1, 0x25, 0x38, 0xd3, 0xbf, 0x04, 0xbb, 0xf0, 0xba,
	0x0f, 0x76, 0xba, 0xcc, 0x86, 0x9e, 0x0c, 0x00, 0xbb, 0x37, 0xe8, 0xac, 0xe1, 0xa5, 0x67, 0xe0,
	0x9f, 0x9f, 0x49, 0x70, 0x77, 0x84, 0xc9, 0x09, 0x2e, 0x19, 0x63, 0x59, 0xb8, 0x64, 0xbc, 0xe5,
	0x31, 0x5e, 0xf8, 0x65, 0x0c, 0xae, 0xe0, 0x72, 0x51, 0x35, 0x9d, 0x96, 0x63, 0x1c, 0xd2, 0xba,
	0xed, 0x9a, 0xac, 0x0f, 0xf4, 0x1e, 0x80, 0xd1, 0x6a, 0xf5, 0x1c, 0xa3, 0x75, 0xa6, 0x1f, 0x73,
	0x24, 0x73, 0xd1, 0x95, 0x53, 0xb2, 0x1d, 0xf3, 0x85, 0x6d, 0x51, 0xa3, 0xa3, 0x7a, 0x52, 0x38,
	0xed, 0xcb, 0x97, 0x58, 0xca, 0x0c, 0x94, 0x4f, 0x39, 0xe4, 0xb9, 0x68, 0xc9, 0xb2, 0xcf, 0x6b,
	0x9e, 0x61, 0xaa, 0xfb, 0x2c, 0xef, 0x19, 0x1d, 0xca, 0x51, 0xc6, 0x30, 0xfb, 0x45, 0x0a, 0x64,
	0xc9, 0x27, 0xd4, 0x31, 0xba, 0x36, 0xdb, 0x96, 0x44, 0xea, 0x4e, 0xe1, 0x3e, 0x9e, 0x9f, 0x3f,
	0xe3, 0xe7, 0xf2, 0x67, 0x22, 0xc8, 0x9f, 0xe8, 0x21, 0x2c, 0x74, 0x1d, 0xe2, 0xba, 0x3d, 0x87,
	0xe8, 0x46, 0x87, 0x9a, 0xb4, 0xd7, 0x26, 0xf9, 0x24, 0xb7, 0x23, 0xfb, 0x0d, 0xaa, 0xc7, 0x57,
	0xfe, 0x11, 0x07, 0x39, 0xe2, 0x16, 0x9e, 0xce, 0xd0, 0x9b, 0x90, 0x3b, 0x72, 0xec, 0x5e, 0x57,
	0x6f, 0x11, 0xb3, 0x63, 0x5a, 0x47, 0xdc, 0x2d, 0x31, 0x9c, 0xe5, 0xcc, 0x2d, 0xc1, 0x63, 0x9b,
	0x95, 0x27, 0x64, 0xf7, 0x2c, 0xca, 0x07, 0x1f, 0xc7, 0x20, 0x44, 0x18, 0x27, 0x14, 0x38, 0xec,
	0xd8, 0xb6, 0xe3, 0x8d, 0x54, 0x08, 0x6c, 0x33, 0x0e, 0xba, 0x0d, 0xa2, 0x47, 0xdd, 0x31, 0xda,
	0x66, 0xcf, 0xe5, 0x03, 0x8e, 0x61, 0xa1, 0x84, 0x39, 0x0b, 0x7d, 0x04, 0x73, 0x42, 0x24, 0xd8,
	0xd0, 0x26, 0xef, 0x4b, 0xa2, 0xd3, 0xa6, 0xb7, 0xab, 0x15, 0x41, 0x8e, 0xf4, 0x20, 0xf6, 0xb6,
	0xc4, 0xc4, 0x3e, 0xe6, 0x82, 0x3e, 0xc4, 0x06, 0xf7, 0x10, 0x12, 0xc7, 0x84, 0x6d, 0xc3, 0xdc,
	0x91, 0x83, 0xb5, 0x64, 0x89, 0x37, 0x61, 0x4f, 0x04, 0xed, 0x02, 0xb2, 0xbb, 0xc4, 0xe1, 0x8b,
	0xd6, 0xe8, 0x30, 0x9b, 0xb4, 0xe7, 0xe6, 0x53, 0x3c, 0x3a, 0x5e, 0xef, 0x53, 0xac, 0x85, 0x62,
	0x0d, 0x2e, 0x85, 0x17, 0xec, 0x41, 0x16, 0x7a, 0x0c, 0xa9, 0xae, 0x17, 0xad, 0xf9, 0x34, 0xb7,
	0xfe, 0x5a, 0x5f, 0x27, 0x83, 0x21, 0x8d, 0x03, 0x71, 0x56, 0x1f, 0xb8, 0x5d, 0x42, 0xda, 0x79,
	0xe0, 0xae, 0x15, 0x04, 0x7a, 0x02, 0x73, 0xfc, 0x47, 0xf7, 0xa3, 0x31, 0x9f, 0xe1, 0xd8, 0x6e,
	0x44, 0x32, 0x31, 0x6b, 0x0f, 0xc2, 0x36, 0xe7, 0x46, 0xc9, 0xfe, 0x52, 0x39, 0x7b, 0x81, 0x52,
	0x19, 0xbd, 0x03, 0x28, 0x20, 0x42, 0xeb, 0x39, 0x0e, 0x6e, 0x21, 0x68, 0x09, 0x0c, 0x5d, 0x85,
	0x38, 0x75, 0x8c, 0xd6, 0xf3, 0xfc, 0x9c, 0x80, 0xcf, 0x09, 0x74, 0x17, 0xe6, 0x4e, 0xbd, 0x85,
	0xa5, 0x8b, 0xd1, 0xcd, 0xf3, 0xe6, 0x9c, 0xcf, 0xe5, 0xe0, 0x95, 0xc7, 0x90, 0x61, 0xce, 0xe9,
	0xd1, 0xe3, 0xa2, 0x41, 0x0d, 0x56, 0x8d, 0xb5, 0x0d, 0x1a, 0x54, 0x63, 0xec, 0x1f, 0x5d, 0x87,
	0xc4, 0xa1, 0xed, 0x9c, 0x18, 0xd4, 0x2b, 0xa9, 0x3c, 0x4a, 0xf9, 0x7d, 0x0c, 0xd2, 0xc1, 0x11,
	0x01, 0x3d, 0x81, 0x9c, 0xe1, 0xb9, 0x58, 0xa7, 0x67, 0x5d, 0xe2, 0x25, 0x89, 0x9b, 0x43, 0x27,
	0xa1, 0x79, 0xd6, 0x25, 0x38, 0x6b, 0x44, 0x28, 0x56, 0xd7, 0xb6, 0x7a, 0x8e, 0x43, 0x2c, 0xca,
	0x43, 0x21, 0xac, 0x6b, 0x87, 0xe9, 0x8b, 0x7a, 0x22, 0xeb, 0x29, 0x88, 0xe5, 0x28, 0x92, 0xe4,
	0x4c, 0x90, 0x24, 0xab, 0x20, 0x3b, 0xa4, 0xc5, 0xfa, 0xf3, 0x27, 0x9a, 0xad, 0x9d, 0x81, 0x4d,
	0x19, 0x97, 0x8b, 0x98, 0x0b, 0x9d, 0x0b, 0x8f, 0x79, 0xa1, 0xec, 0xd3, 0x2e, 0x5a, 0x84, 0xb4,
	0x6b, 0x9e, 0xf4, 0x44, 0xd6, 0x89, 0xf3, 0xac, 0x13, 0x32, 0xd0, 0xdb, 0x90, 0x3c, 0xe5, 0xe7,
	0x7e, 0x37, 0x9f, 0xe0, 0x46, 0x86, 0x5e, 0x08, 0x78, 0x22, 0xca, 0x5f, 0x63, 0x3c, 0x9f, 0xf4,
	0x9d, 0xd4, 0xd0, 0x3a, 0xa4, 0x8d, 0x1e, 0x3d, 0xd6, 0x83, 0x09, 0xe8, 0x3b, 0x26, 0x46, 0x66,
	0x09, 0xa7, 0x0c, 0x7f, 0xbe, 0x06, 0x4b, 0xdd, 0x0d, 0xb8, 0x16, 0x2c, 0x0d, 0xbd, 0x4d, 0xc2,
	0x2a, 0x42, 0xf8, 0xe5, 0x6a, 0xd0, 0x58, 0x0c, 0xdb, 0x58, 0x0a, 0x12, 0x7c, 0xdb, 0xd1, 0x4d,
	0x91, 0x51, 0xd3, 0x18, 0x7c, 0x56, 0xb9, 0x8d, 0x9e, 0xc2, 0x42, 0x20, 0xd0, 0xb1, 0xc5, 0x3e,
	0xeb, 0xa5, 0x98, 0x11, 0x07, 0x59, 0xd9, 0x97, 0xaf, 0x78, 0xe2, 0x68, 0x05, 0xae, 0x38, 0xe4,
	0xc8, 0x74, 0xa9, 0x07, 0xce, 0xea, 0x9d, 0x1c, 0x10, 0xc7, 0x2b, 0x84, 0x51, 0xb4, 0xa9, 0xca,
	0x5b, 0x58, 0x7a, 0x75, 0x89, 0x63, 0x1a, 0x1d, 0x5f, 0x34, 0xc9, 0x45, 0xb3, 0x82, 0x29, 0x84,
	0x94, 0xbf, 0x4b, 0x3c, 0x06, 0x45, 0x6a, 0x41, 0x05, 0x48, 0xb5, 0x4d, 0x97, 0x1a, 0x56, 0x8b,
	0x78, 0xc9, 0x38, 0xa0, 0x51, 0x11, 0xd2, 0x0e, 0x39, 0x24, 0x0e, 0x61, 0x8d, 0x62, 0x0f, 0xba,
	0x37, 0x24, 0x3d, 0x45, 0x12, 0x95, 0x2f, 0x8d, 0x43, 0x45, 0xe5, 0x10, 0xd0, 0x79, 0x01, 0xf4,
	0x00, 0xee, 0xe2, 0x72, 0x51, 0x2f, 0x69, 0xe5, 0x9d, 0x52, 0x53, 0xc7, 0xda, 0xb6, 0x86, 0xb5,
	0xea, 0x96, 0xa6, 0x37, 0xd5, 0x67, 0x5a, 0x6d, 0x7b, 0x5b, 0xaf, 0xd4, 0xb6, 0xd4, 0x66, 0xb9,
	0x56, 0x95, 0x5f, 0x41, 0x77, 0xe1, 0xf6, 0x50, 0xd1, 0x1d, 0x5c, 0xdb, 0xab, 0x16, 0xf5, 0x8a,
	0xb6, 0xaf, 0x55, 0x64, 0x49, 0xf9, 0x89, 0x04, 0x37, 0x47, 0xc6, 0x66, 0x5f, 0xae, 0x93, 0x2e,
	0x96, 0xeb, 0x96, 0x61, 0x76, 0xca, 0x53, 0x23, 0x97, 0x53, 0x28, 0xdc, 0x6f, 0x10, 0xc3, 0x69,
	0x1d, 0x8f, 0x3b, 0xad, 0xbe, 0xec, 0x1a, 0x58, 0xf9, 0x2e, 0xbc, 0x2a, 0xac, 0x0e, 0x1c, 0x19,
	0x3d, 0x43, 0xef, 0x0f, 0x1e, 0x3e, 0x84, 0xa1, 0x51, 0x35, 0xf2, 0xc0, 0xb9, 0xc3, 0x04, 0x74,
	0xbe, 0xd2, 0x3f, 0x7f, 0xa0, 0x91, 0x2e, 0x7a, 0xa0, 0x61, 0x45, 0x46, 0x78, 0x1b, 0xc9, 0x7e,
	0x95, 0x2f, 0x63, 0x90, 0x8d, 0xaa, 0x7d, 0xdd, 0x6b, 0xc7, 0xc1, 0xe5, 0xfe, 0x0e, 0x20, 0x2b,
	0x72, 0xce, 0xd3, 0x4d, 0xab, 0x4d, 0x3e, 0xe1, 0x6b, 0x3d, 0x8e, 0x17, 0xa2, 0x2d, 0x65, 0xd6,
	0x10, 0x1e, 0x84, 0x67, 0x47, 0x1d, 0x84, 0xe3, 0x97, 0x3d, 0x08, 0x27, 0x2e, 0x79, 0x10, 0x4e,
	0xf6, 0xd7, 0x9f, 0xdf, 0x83, 0x6b, 0x43, 0x9d, 0x80, 0x34, 0xb8, 0x65, 0xf6, 0x05, 0x8f, 0x1e,
	0x0d, 0xb5, 0xc8, 0x45, 0xc0, 0xa2, 0x39, 0x2a, 0xc6, 0xf6, 0x9c, 0x8e, 0xf2, 0x1c, 0x16, 0xce,
	0x4d, 0xe3, 0x08, 0x2f, 0x4a, 0xa3, 0xbc, 0xf8, 0x16, 0xcc, 0x47, 0xe7, 0x5d, 0x0f, 0x66, 0x64,
	0x2e, 0xca, 0x2e, 0xb7, 0x95, 0x17, 0xf0, 0x60, 0xea, 0x13, 0xca, 0xff, 0xe2, 0x02, 0x7c, 0xdc,
	0x59, 0xe0, 0x9b, 0xbd, 0x00, 0xff, 0xa1, 0x04, 0x29, 0xc1, 0xdd, 0x28, 0x32, 0xec, 0x7e, 0xc1,
	0xad, 0x1f, 0x9b, 0x5e, 0xa2, 0x06, 0x9f, 0x55, 0x32, 0xfb, 0x04, 0x3a, 0x36, 0xef, 0x3f, 0x22,
	0x50, 0xb1, 0xd9, 0x4e, 0x79, 0x68, 0xdb, 0xb4, 0xeb, 0x98, 0x16, 0xf5, 0x2e, 0xb0, 0xae, 0x86,
	0xe6, 0xc3, 0x8b, 0x57, 0x1c, 0x8a, 0x29, 0xbf, 0x0b, 0x20, 0x3c, 0x2a, 0xa2, 0xc7, 0xac, 0xb6,
	0x33, 0x28, 0xdb, 0x5c, 0xc4, 0x96, 0x3c, 0xca, 0xe7, 0x1b, 0x45, 0x56, 0xd6, 0x71, 0x49, 0xc1,
	0xe8, 0x5b, 0x2d, 0xb1, 0xcb, 0xae, 0x96, 0x99, 0x0b, 0xac, 0x96, 0xa5, 0xaf, 0x24, 0x40, 0xe7,
	0x0f, 0x58, 0x68, 0x0e, 0xa0, 0xa4, 0xea, 0x7b, 0xd5, 0x67, 0xd5, 0xda, 0xc7, 0x6c, 0x67, 0x59,
	0x80, 0x5c, 0x49, 0x57, 0xd7, 0x56, 0xf5, 0xea, 0xae, 0x5e, 0xaf, 0xec, 0x35, 0x64, 0x09, 0x65,
	0x21, 0xe5, 0xb3, 0xe4, 0x18, 0xca, 0x40, 0xb2, 0xa4, 0xab, 0x8f, 0x18, 0x31, 0xe3, 0x11, 0xeb,
	0x8c, 0x98, 0xf5, 0x88, 0x35, 0x46, 0xc4, 0x3d, 0xa5, 0xd5, 0x4d, 0x46, 0x25, 0x7c, 0x6a, 0x83,
	0x51, 0x49, 0x9f, 0xe2, 0x92, 0x29, 0x94, 0x83, 0x34, 0xa3, 0x84, 0x68, 0x1a, 0x01, 0x24, 0x4a,
	0xba, 0xba, 0xb1, 0xba, 0x2b, 0x83, 0xf7, 0xbf, 0xb6, 0xba, 0x2b, 0x67, 0x50, 0x1a, 0xe2, 0x8c,
	0xbf, 0x2b, 0x67, 0xbd, 0xdf, 0xb5, 0x5d, 0x39, 0xb7, 0xf4, 0xab, 0x18, 0xcc, 0x0f, 0x54, 0x84,
	0x48, 0x86, 0x6c, 0xb5, 0xd6, 0xd4, 0x8b, 0xda, 0x56, 0x45, 0xc5, 0x5a, 0x51, 0x7e, 0x85, 0x99,
	0x50, 0x35, 0x5c, 0xab, 0x57, 0xd4, 0xaa, 0x26, 0x4b, 0x6c, 0xcc, 0xb8, 0xd6, 0xac, 0xe1, 0x2d,
	0xac, 0x6e, 0x37, 0xe5, 0x18, 0x6b, 0xde, 0xf9, 0x8e, 0xdf, 0x3c, 0x83, 0x52, 0x30, 0xbb, 0xdf,
	0xac, 0x55, 0xe4, 0x59, 0x34, 0x0f, 0x99, 0x1a, 0xae, 0x96, 0x9b, 0xa5, 0x5a, 0xbd, 0xa9, 0x61,
	0x39, 0xce, 0x00, 0xed, 0x54, 0xca, 0x45, 0x0d, 0xcb, 0x09, 0x26, 0xf6, 0xac, 0xdc, 0xd4, 0xe4,
	0x24, 0x33, 0xb8, 0x8d, 0x35, 0x4d, 0x7f, 0xaa, 0x56, 0x2a, 0xb5, 0x5a, 0x55, 0x4e, 0xa1, 0x2b,
	0x30, 0xbf, 0xa5, 0xd6, 0x9b, 0xe5, 0xfd, 0x90, 0x99, 0x66, 0xfe, 0x51, 0xcb, 0xb8, 0x51, 0x2a,
	0xd7, 0x65, 0x40, 0x05, 0xb8, 0xce, 0x75, 0xb6, 0xd5, 0x4a, 0x45, 0xaf, 0x61, 0xbd, 0xae, 0x62,
	0x75, 0xab, 0xb4, 0xd7, 0xd4, 0xe4, 0x0c, 0xb3, 0x82, 0x6b, 0x5b, 0xcf, 0xb4, 0xa6, 0x9c, 0x45,
	0xaf, 0xc1, 0xcd, 0xa6, 0xd6, 0x2c, 0x69, 0x58, 0x2b, 0xea, 0xf5, 0xda, 0xc7, 0xfc, 0xab, 0x96,
	0x3d, 0xe8, 0x39, 0x66, 0xc8, 0xdb, 0xf3, 0x6b, 0x4f, 0x1b, 0x4d, 0x75, 0xab, 0xa2, 0xc9, 0x73,
	0xcc, 0x3f, 0x35, 0xa6, 0x22, 0xcf, 0x2f, 0x7d, 0x04, 0x57, 0x87, 0x1d, 0x7d, 0x98, 0x0b, 0xf6,
	0xaa, 0x11, 0x0f, 0xb1, 0x81, 0xf1, 0x7e, 0xc4, 0x7c, 0xab, 0x65, 0xfc, 0xb4, 0x86, 0xab, 0x9a,
	0x1c, 0x5b, 0x3a, 0x86, 0x5c, 0xdf, 0x01, 0x85, 0xa9, 0x36, 0x06, 0x22, 0xa6, 0xc1, 0x27, 0xa9,
	0xde, 0x88, 0x44, 0x8c, 0xcf, 0x12, 0x11, 0xd3, 0x60, 0x33, 0x57, 0x6f, 0x88, 0x88, 0x61, 0x4d,
	0x8c, 0x98, 0xf5, 0xe4, 0x56, 0x79, 0x53, 0x7c, 0xe9, 0x53, 0x90, 0x07, 0x0f, 0xf1, 0xcc, 0xd8,
	0x7e, 0xd4, 0x98, 0x0c, 0xd9, 0x7d, 0x5d, 0x5d, 0xdb, 0x5c, 0x0d, 0xa2, 0x33, 0x03, 0x49, 0x8f,
	0x23, 0xc7, 0xd8, 0x30, 0xf6, 0x75, 0xf5, 0xd1, 0x26, 0x8b, 0x4d, 0xf1, 0xbf, 0xbe, 0xc9, 0x42,
	0x53, 0xfc, 0xb3, 0x40, 0x8a, 0x33, 0xef, 0xec, 0xf3, 0x40, 0x4a, 0x78, 0xbf, 0x6b, 0xbb, 0x72,
	0x72, 0xfd, 0x8f, 0x73, 0xa0, 0x14, 0x4d, 0xb7, 0x65, 0x9f, 0x12, 0xe7, 0x4c, 0xb5, 0xda, 0x8d,
	0x33, 0xab, 0x75, 0xec, 0xd8, 0x96, 0xf9, 0x22, 0x9a, 0x6d, 0xd1, 0xbf, 0x24, 0x58, 0xbe, 0xd8,
	0xb3, 0x13, 0xfa, 0x30, 0xcc, 0x06, 0x97, 0x7a, 0xb0, 0x2a, 0xac, 0x0d, 0x76, 0x30, 0xf1, 0xae,
	0x53, 0x79, 0xef, 0x47, 0x5f, 0xfd, 0xfb, 0x17, 0xb1, 0xcd, 0xa5, 0x8d, 0x95, 0xd3, 0xb5, 0x95,
	0xb6, 0xeb, 0xae, 0x8c, 0xd9, 0xf5, 0xdc, 0x95, 0x4f, 0xcd, 0xf6, 0x67, 0x2b, 0x9f, 0x7a, 0x9b,
	0xe7, 0x67, 0xe8, 0x0b, 0x09, 0x6e, 0x4f, 0x7c, 0xf7, 0x42, 0xeb, 0x43, 0x87, 0x35, 0xf6, 0x06,
	0xaa, 0x70, 0x67, 0x50, 0x67, 0xd8, 0x25, 0xa8, 0xf2, 0x36, 0x07, 0x7f, 0x6f, 0xe9, 0x8e, 0x0f,
	0xbe, 0xaf, 0x3e, 0x1a, 0x44, 0xfb, 0x07, 0x09, 0x94, 0xc9, 0x6f, 0x21, 0x68, 0x23, 0x9a, 0xd9,
	0xa7, 0x7c, 0x39, 0x29, 0x44, 0xc6, 0x38, 0x6d, 0xf9, 0xea, 0xa3, 0x47, 0x77, 0xa6, 0x71, 0x3d,
	0xfa, 0x8b, 0xc4, 0x1f, 0xb4, 0x26, 0x86, 0x04, 0xda, 0xbc, 0x08, 0xfe, 0xe0, 0xb6, 0xb1, 0xb0,
	0xdc, 0xa7, 0x36, 0x39, 0x70, 0xd6, 0x38, 0xfa, 0x87, 0xe8, 0xc1, 0xd4, 0x81, 0x83, 0x7e, 0x2c,
	0xc1, 0xb5, 0xa1, 0x6f, 0x33, 0xe8, 0xde, 0x79, 0xcc, 0xc3, 0x1e, 0x6f, 0x0a, 0x77, 0x07, 0xdd,
	0x3c, 0xb4, 0x5e, 0x57, 0x5e, 0xe3, 0xd8, 0x6e, 0xa0, 0x6b, 0x43, 0xe3, 0x02, 0x7d, 0x2e, 0xf1,
	0xb7, 0xba, 0x61, 0x61, 0x88, 0xee, 0x4f, 0x40, 0x12, 0x3a, 0xec, 0x76, 0x9f, 0xe4, 0xd0, 0xf8,
	0x54, 0x38, 0x8e, 0x45, 0x54, 0x18, 0x1d, 0x9f, 0xe8, 0x6f, 0xe2, 0x55, 0xe2, 0x42, 0xf3, 0x7a,
	0x81, 0x2b, 0xf7, 0xe8, 0xbc, 0x4e, 0xf3, 0xf8, 0xa1, 0x3c, 0xe6, 0x98, 0x37, 0x0a, 0xd3, 0xcf,
	0xeb, 0xbb, 0xfe, 0x35, 0xef, 0x3f, 0xa7, 0x7c, 0x0d, 0xf0, 0x13, 0xc3, 0xfb, 0x17, 0x1b, 0xd1,
	0x40, 0x8a, 0xb8, 0xe8, 0xc0, 0xb6, 0xf8, 0xc0, 0x3e, 0x28, 0x5c, 0x26, 0xd3, 0x05, 0x43, 0xfc,
	0xb9, 0x78, 0x92, 0x99, 0x14, 0x3a, 0xe3, 0x6f, 0xf6, 0xa3, 0xa1, 0x33, 0xe2, 0x7d, 0x47, 0x59,
	0xe2, 0x68, 0xef, 0x14, 0xc6, 0x84, 0x4e, 0x00, 0xea, 0x37, 0xd2, 0xc8, 0xb7, 0x04, 0xdf, 0xd5,
	0x2b, 0x13, 0xb1, 0x0d, 0x78, 0x77, 0x0a, 0x88, 0x8f, 0x38, 0xc4, 0xe5, 0xc2, 0x54, 0xd9, 0xd7,
	0x07, 0x7b, 0x90, 0xe0, 0x9d, 0x6e, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff, 0x34, 0xa7, 0x22, 0xc4,
	0x0f, 0x24, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiscoveryAndSynchronizationServiceClient is the client API for DiscoveryAndSynchronizationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscoveryAndSynchronizationServiceClient interface {
	// /dss/identification_service_areas/{id}/{version}
	//
	// Delete an Identification Service Area.  USSs should not delete Identification Service Areas before the end of the last managed flight plus the retention period.
	DeleteV1DssIdentificationServiceAreasIdVersion(ctx context.Context, in *DeleteV1DssIdentificationServiceAreasIdVersionRequest, opts ...grpc.CallOption) (*DeleteIdentificationServiceAreaResponse, error)
	// /dss/subscriptions/{id}/{version}
	//
	// Delete a subscription.
	DeleteV1DssSubscriptionsIdVersion(ctx context.Context, in *DeleteV1DssSubscriptionsIdVersionRequest, opts ...grpc.CallOption) (*DeleteSubscriptionResponse, error)
	// /dss/identification_service_areas
	//
	// Retrieve all Identification Service Areas in the DAR for a given area during the given time.  Note that some Identification Service Areas returned may lie entirely outside the requested area.
	GetV1DssIdentificationServiceAreas(ctx context.Context, in *GetV1DssIdentificationServiceAreasRequest, opts ...grpc.CallOption) (*SearchIdentificationServiceAreasResponse, error)
	// /dss/identification_service_areas/{id}
	//
	// Retrieve full information of an Identification Service Area owned by the client.
	GetV1DssIdentificationServiceAreasId(ctx context.Context, in *GetV1DssIdentificationServiceAreasIdRequest, opts ...grpc.CallOption) (*GetIdentificationServiceAreaResponse, error)
	// /dss/subscriptions
	//
	// Retrieve subscriptions intersecting an area of interest.  Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.
	//
	// Only Subscriptions belonging to the caller are returned.  This endpoint would be used if a USS lost track of Subscriptions they had created and/or wanted to resolve an error indicating that they had too many existing Subscriptions in an area.
	GetV1DssSubscriptions(ctx context.Context, in *GetV1DssSubscriptionsRequest, opts ...grpc.CallOption) (*SearchSubscriptionsResponse, error)
	// /dss/subscriptions/{id}
	//
	// Verify the existence/valdity and state of a particular subscription.
	GetV1DssSubscriptionsId(ctx context.Context, in *GetV1DssSubscriptionsIdRequest, opts ...grpc.CallOption) (*GetSubscriptionResponse, error)
	// /dss/identification_service_areas/{id}
	//
	// Create a new Identification Service Area.  This call will fail if an Identification Service Area with the same ID already exists.
	//
	// The DSS assumes the USS has already added the appropriate retention period to operation end time in `time_end` field before storing it.
	PutV1DssIdentificationServiceAreasId(ctx context.Context, in *PutV1DssIdentificationServiceAreasIdRequest, opts ...grpc.CallOption) (*PutIdentificationServiceAreaResponse, error)
	// /dss/identification_service_areas/{id}/{version}
	//
	// Update an Identification Service Area.  The full content of the existing Identification Service Area will be replaced with the provided information as only the most recent version is retained.
	//
	// The DSS assumes the USS has already added the appropriate retention period to operation end time in `time_end` field before storing it.  Updating `time_start` is not allowed if it is before the current time.
	PutV1DssIdentificationServiceAreasIdVersion(ctx context.Context, in *PutV1DssIdentificationServiceAreasIdVersionRequest, opts ...grpc.CallOption) (*PutIdentificationServiceAreaResponse, error)
	// /dss/subscriptions/{id}
	//
	// Create a subscription.  This call will fail if a Subscription with the same ID already exists.
	//
	// Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.
	PutV1DssSubscriptionsId(ctx context.Context, in *PutV1DssSubscriptionsIdRequest, opts ...grpc.CallOption) (*PutSubscriptionResponse, error)
	// /dss/subscriptions/{id}/{version}
	//
	// Update a Subscription.  The full content of the existing Subscription will be replaced with the provided information as only the most recent version is retained.
	//
	// Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.
	PutV1DssSubscriptionsIdVersion(ctx context.Context, in *PutV1DssSubscriptionsIdVersionRequest, opts ...grpc.CallOption) (*PutSubscriptionResponse, error)
}

type discoveryAndSynchronizationServiceClient struct {
	cc *grpc.ClientConn
}

func NewDiscoveryAndSynchronizationServiceClient(cc *grpc.ClientConn) DiscoveryAndSynchronizationServiceClient {
	return &discoveryAndSynchronizationServiceClient{cc}
}

func (c *discoveryAndSynchronizationServiceClient) DeleteV1DssIdentificationServiceAreasIdVersion(ctx context.Context, in *DeleteV1DssIdentificationServiceAreasIdVersionRequest, opts ...grpc.CallOption) (*DeleteIdentificationServiceAreaResponse, error) {
	out := new(DeleteIdentificationServiceAreaResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/DeleteV1DssIdentificationServiceAreasIdVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) DeleteV1DssSubscriptionsIdVersion(ctx context.Context, in *DeleteV1DssSubscriptionsIdVersionRequest, opts ...grpc.CallOption) (*DeleteSubscriptionResponse, error) {
	out := new(DeleteSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/DeleteV1DssSubscriptionsIdVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) GetV1DssIdentificationServiceAreas(ctx context.Context, in *GetV1DssIdentificationServiceAreasRequest, opts ...grpc.CallOption) (*SearchIdentificationServiceAreasResponse, error) {
	out := new(SearchIdentificationServiceAreasResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/GetV1DssIdentificationServiceAreas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) GetV1DssIdentificationServiceAreasId(ctx context.Context, in *GetV1DssIdentificationServiceAreasIdRequest, opts ...grpc.CallOption) (*GetIdentificationServiceAreaResponse, error) {
	out := new(GetIdentificationServiceAreaResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/GetV1DssIdentificationServiceAreasId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) GetV1DssSubscriptions(ctx context.Context, in *GetV1DssSubscriptionsRequest, opts ...grpc.CallOption) (*SearchSubscriptionsResponse, error) {
	out := new(SearchSubscriptionsResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/GetV1DssSubscriptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) GetV1DssSubscriptionsId(ctx context.Context, in *GetV1DssSubscriptionsIdRequest, opts ...grpc.CallOption) (*GetSubscriptionResponse, error) {
	out := new(GetSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/GetV1DssSubscriptionsId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) PutV1DssIdentificationServiceAreasId(ctx context.Context, in *PutV1DssIdentificationServiceAreasIdRequest, opts ...grpc.CallOption) (*PutIdentificationServiceAreaResponse, error) {
	out := new(PutIdentificationServiceAreaResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/PutV1DssIdentificationServiceAreasId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) PutV1DssIdentificationServiceAreasIdVersion(ctx context.Context, in *PutV1DssIdentificationServiceAreasIdVersionRequest, opts ...grpc.CallOption) (*PutIdentificationServiceAreaResponse, error) {
	out := new(PutIdentificationServiceAreaResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/PutV1DssIdentificationServiceAreasIdVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) PutV1DssSubscriptionsId(ctx context.Context, in *PutV1DssSubscriptionsIdRequest, opts ...grpc.CallOption) (*PutSubscriptionResponse, error) {
	out := new(PutSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/PutV1DssSubscriptionsId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) PutV1DssSubscriptionsIdVersion(ctx context.Context, in *PutV1DssSubscriptionsIdVersionRequest, opts ...grpc.CallOption) (*PutSubscriptionResponse, error) {
	out := new(PutSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/PutV1DssSubscriptionsIdVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiscoveryAndSynchronizationServiceServer is the server API for DiscoveryAndSynchronizationService service.
type DiscoveryAndSynchronizationServiceServer interface {
	// /dss/identification_service_areas/{id}/{version}
	//
	// Delete an Identification Service Area.  USSs should not delete Identification Service Areas before the end of the last managed flight plus the retention period.
	DeleteV1DssIdentificationServiceAreasIdVersion(context.Context, *DeleteV1DssIdentificationServiceAreasIdVersionRequest) (*DeleteIdentificationServiceAreaResponse, error)
	// /dss/subscriptions/{id}/{version}
	//
	// Delete a subscription.
	DeleteV1DssSubscriptionsIdVersion(context.Context, *DeleteV1DssSubscriptionsIdVersionRequest) (*DeleteSubscriptionResponse, error)
	// /dss/identification_service_areas
	//
	// Retrieve all Identification Service Areas in the DAR for a given area during the given time.  Note that some Identification Service Areas returned may lie entirely outside the requested area.
	GetV1DssIdentificationServiceAreas(context.Context, *GetV1DssIdentificationServiceAreasRequest) (*SearchIdentificationServiceAreasResponse, error)
	// /dss/identification_service_areas/{id}
	//
	// Retrieve full information of an Identification Service Area owned by the client.
	GetV1DssIdentificationServiceAreasId(context.Context, *GetV1DssIdentificationServiceAreasIdRequest) (*GetIdentificationServiceAreaResponse, error)
	// /dss/subscriptions
	//
	// Retrieve subscriptions intersecting an area of interest.  Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.
	//
	// Only Subscriptions belonging to the caller are returned.  This endpoint would be used if a USS lost track of Subscriptions they had created and/or wanted to resolve an error indicating that they had too many existing Subscriptions in an area.
	GetV1DssSubscriptions(context.Context, *GetV1DssSubscriptionsRequest) (*SearchSubscriptionsResponse, error)
	// /dss/subscriptions/{id}
	//
	// Verify the existence/valdity and state of a particular subscription.
	GetV1DssSubscriptionsId(context.Context, *GetV1DssSubscriptionsIdRequest) (*GetSubscriptionResponse, error)
	// /dss/identification_service_areas/{id}
	//
	// Create a new Identification Service Area.  This call will fail if an Identification Service Area with the same ID already exists.
	//
	// The DSS assumes the USS has already added the appropriate retention period to operation end time in `time_end` field before storing it.
	PutV1DssIdentificationServiceAreasId(context.Context, *PutV1DssIdentificationServiceAreasIdRequest) (*PutIdentificationServiceAreaResponse, error)
	// /dss/identification_service_areas/{id}/{version}
	//
	// Update an Identification Service Area.  The full content of the existing Identification Service Area will be replaced with the provided information as only the most recent version is retained.
	//
	// The DSS assumes the USS has already added the appropriate retention period to operation end time in `time_end` field before storing it.  Updating `time_start` is not allowed if it is before the current time.
	PutV1DssIdentificationServiceAreasIdVersion(context.Context, *PutV1DssIdentificationServiceAreasIdVersionRequest) (*PutIdentificationServiceAreaResponse, error)
	// /dss/subscriptions/{id}
	//
	// Create a subscription.  This call will fail if a Subscription with the same ID already exists.
	//
	// Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.
	PutV1DssSubscriptionsId(context.Context, *PutV1DssSubscriptionsIdRequest) (*PutSubscriptionResponse, error)
	// /dss/subscriptions/{id}/{version}
	//
	// Update a Subscription.  The full content of the existing Subscription will be replaced with the provided information as only the most recent version is retained.
	//
	// Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.
	PutV1DssSubscriptionsIdVersion(context.Context, *PutV1DssSubscriptionsIdVersionRequest) (*PutSubscriptionResponse, error)
}

// UnimplementedDiscoveryAndSynchronizationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDiscoveryAndSynchronizationServiceServer struct {
}

func (*UnimplementedDiscoveryAndSynchronizationServiceServer) DeleteV1DssIdentificationServiceAreasIdVersion(ctx context.Context, req *DeleteV1DssIdentificationServiceAreasIdVersionRequest) (*DeleteIdentificationServiceAreaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteV1DssIdentificationServiceAreasIdVersion not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) DeleteV1DssSubscriptionsIdVersion(ctx context.Context, req *DeleteV1DssSubscriptionsIdVersionRequest) (*DeleteSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteV1DssSubscriptionsIdVersion not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) GetV1DssIdentificationServiceAreas(ctx context.Context, req *GetV1DssIdentificationServiceAreasRequest) (*SearchIdentificationServiceAreasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetV1DssIdentificationServiceAreas not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) GetV1DssIdentificationServiceAreasId(ctx context.Context, req *GetV1DssIdentificationServiceAreasIdRequest) (*GetIdentificationServiceAreaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetV1DssIdentificationServiceAreasId not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) GetV1DssSubscriptions(ctx context.Context, req *GetV1DssSubscriptionsRequest) (*SearchSubscriptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetV1DssSubscriptions not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) GetV1DssSubscriptionsId(ctx context.Context, req *GetV1DssSubscriptionsIdRequest) (*GetSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetV1DssSubscriptionsId not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) PutV1DssIdentificationServiceAreasId(ctx context.Context, req *PutV1DssIdentificationServiceAreasIdRequest) (*PutIdentificationServiceAreaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutV1DssIdentificationServiceAreasId not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) PutV1DssIdentificationServiceAreasIdVersion(ctx context.Context, req *PutV1DssIdentificationServiceAreasIdVersionRequest) (*PutIdentificationServiceAreaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutV1DssIdentificationServiceAreasIdVersion not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) PutV1DssSubscriptionsId(ctx context.Context, req *PutV1DssSubscriptionsIdRequest) (*PutSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutV1DssSubscriptionsId not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) PutV1DssSubscriptionsIdVersion(ctx context.Context, req *PutV1DssSubscriptionsIdVersionRequest) (*PutSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutV1DssSubscriptionsIdVersion not implemented")
}

func RegisterDiscoveryAndSynchronizationServiceServer(s *grpc.Server, srv DiscoveryAndSynchronizationServiceServer) {
	s.RegisterService(&_DiscoveryAndSynchronizationService_serviceDesc, srv)
}

func _DiscoveryAndSynchronizationService_DeleteV1DssIdentificationServiceAreasIdVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteV1DssIdentificationServiceAreasIdVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).DeleteV1DssIdentificationServiceAreasIdVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/DeleteV1DssIdentificationServiceAreasIdVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).DeleteV1DssIdentificationServiceAreasIdVersion(ctx, req.(*DeleteV1DssIdentificationServiceAreasIdVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_DeleteV1DssSubscriptionsIdVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteV1DssSubscriptionsIdVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).DeleteV1DssSubscriptionsIdVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/DeleteV1DssSubscriptionsIdVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).DeleteV1DssSubscriptionsIdVersion(ctx, req.(*DeleteV1DssSubscriptionsIdVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_GetV1DssIdentificationServiceAreas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetV1DssIdentificationServiceAreasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).GetV1DssIdentificationServiceAreas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/GetV1DssIdentificationServiceAreas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).GetV1DssIdentificationServiceAreas(ctx, req.(*GetV1DssIdentificationServiceAreasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_GetV1DssIdentificationServiceAreasId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetV1DssIdentificationServiceAreasIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).GetV1DssIdentificationServiceAreasId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/GetV1DssIdentificationServiceAreasId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).GetV1DssIdentificationServiceAreasId(ctx, req.(*GetV1DssIdentificationServiceAreasIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_GetV1DssSubscriptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetV1DssSubscriptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).GetV1DssSubscriptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/GetV1DssSubscriptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).GetV1DssSubscriptions(ctx, req.(*GetV1DssSubscriptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_GetV1DssSubscriptionsId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetV1DssSubscriptionsIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).GetV1DssSubscriptionsId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/GetV1DssSubscriptionsId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).GetV1DssSubscriptionsId(ctx, req.(*GetV1DssSubscriptionsIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_PutV1DssIdentificationServiceAreasId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutV1DssIdentificationServiceAreasIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).PutV1DssIdentificationServiceAreasId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/PutV1DssIdentificationServiceAreasId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).PutV1DssIdentificationServiceAreasId(ctx, req.(*PutV1DssIdentificationServiceAreasIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_PutV1DssIdentificationServiceAreasIdVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutV1DssIdentificationServiceAreasIdVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).PutV1DssIdentificationServiceAreasIdVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/PutV1DssIdentificationServiceAreasIdVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).PutV1DssIdentificationServiceAreasIdVersion(ctx, req.(*PutV1DssIdentificationServiceAreasIdVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_PutV1DssSubscriptionsId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutV1DssSubscriptionsIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).PutV1DssSubscriptionsId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/PutV1DssSubscriptionsId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).PutV1DssSubscriptionsId(ctx, req.(*PutV1DssSubscriptionsIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_PutV1DssSubscriptionsIdVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutV1DssSubscriptionsIdVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).PutV1DssSubscriptionsIdVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/PutV1DssSubscriptionsIdVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).PutV1DssSubscriptionsIdVersion(ctx, req.(*PutV1DssSubscriptionsIdVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiscoveryAndSynchronizationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dssproto.DiscoveryAndSynchronizationService",
	HandlerType: (*DiscoveryAndSynchronizationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteV1DssIdentificationServiceAreasIdVersion",
			Handler:    _DiscoveryAndSynchronizationService_DeleteV1DssIdentificationServiceAreasIdVersion_Handler,
		},
		{
			MethodName: "DeleteV1DssSubscriptionsIdVersion",
			Handler:    _DiscoveryAndSynchronizationService_DeleteV1DssSubscriptionsIdVersion_Handler,
		},
		{
			MethodName: "GetV1DssIdentificationServiceAreas",
			Handler:    _DiscoveryAndSynchronizationService_GetV1DssIdentificationServiceAreas_Handler,
		},
		{
			MethodName: "GetV1DssIdentificationServiceAreasId",
			Handler:    _DiscoveryAndSynchronizationService_GetV1DssIdentificationServiceAreasId_Handler,
		},
		{
			MethodName: "GetV1DssSubscriptions",
			Handler:    _DiscoveryAndSynchronizationService_GetV1DssSubscriptions_Handler,
		},
		{
			MethodName: "GetV1DssSubscriptionsId",
			Handler:    _DiscoveryAndSynchronizationService_GetV1DssSubscriptionsId_Handler,
		},
		{
			MethodName: "PutV1DssIdentificationServiceAreasId",
			Handler:    _DiscoveryAndSynchronizationService_PutV1DssIdentificationServiceAreasId_Handler,
		},
		{
			MethodName: "PutV1DssIdentificationServiceAreasIdVersion",
			Handler:    _DiscoveryAndSynchronizationService_PutV1DssIdentificationServiceAreasIdVersion_Handler,
		},
		{
			MethodName: "PutV1DssSubscriptionsId",
			Handler:    _DiscoveryAndSynchronizationService_PutV1DssSubscriptionsId_Handler,
		},
		{
			MethodName: "PutV1DssSubscriptionsIdVersion",
			Handler:    _DiscoveryAndSynchronizationService_PutV1DssSubscriptionsIdVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/dssproto/dss.proto",
}
