// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dss.proto

package dssproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeleteIdentificationServiceAreaRequest struct {
	// EntityUUID of the Identification Service Area.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Will only update an existing entity if the versions are unchanged. Used for idempotent updates.
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIdentificationServiceAreaRequest) Reset() {
	*m = DeleteIdentificationServiceAreaRequest{}
}
func (m *DeleteIdentificationServiceAreaRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteIdentificationServiceAreaRequest) ProtoMessage()    {}
func (*DeleteIdentificationServiceAreaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{0}
}

func (m *DeleteIdentificationServiceAreaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIdentificationServiceAreaRequest.Unmarshal(m, b)
}
func (m *DeleteIdentificationServiceAreaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIdentificationServiceAreaRequest.Marshal(b, m, deterministic)
}
func (m *DeleteIdentificationServiceAreaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIdentificationServiceAreaRequest.Merge(m, src)
}
func (m *DeleteIdentificationServiceAreaRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteIdentificationServiceAreaRequest.Size(m)
}
func (m *DeleteIdentificationServiceAreaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIdentificationServiceAreaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIdentificationServiceAreaRequest proto.InternalMessageInfo

func (m *DeleteIdentificationServiceAreaRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteIdentificationServiceAreaRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Response for a request to delete an Identification Service Area.
type DeleteIdentificationServiceAreaResponse struct {
	// Indentification Service Area that was just deleted.
	ServiceArea *IdentificationServiceArea `protobuf:"bytes,1,opt,name=service_area,json=serviceArea,proto3" json:"service_area,omitempty"`
	// DSS subscribers that this client now has the obligation to notify of the Identification Service Area just deleted.  This client must call DELETE for each provided URL according to the `/identification_service_areas` path API.
	Subscribers          []*SubscriberToNotify `protobuf:"bytes,2,rep,name=subscribers,proto3" json:"subscribers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DeleteIdentificationServiceAreaResponse) Reset() {
	*m = DeleteIdentificationServiceAreaResponse{}
}
func (m *DeleteIdentificationServiceAreaResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteIdentificationServiceAreaResponse) ProtoMessage()    {}
func (*DeleteIdentificationServiceAreaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{1}
}

func (m *DeleteIdentificationServiceAreaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIdentificationServiceAreaResponse.Unmarshal(m, b)
}
func (m *DeleteIdentificationServiceAreaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIdentificationServiceAreaResponse.Marshal(b, m, deterministic)
}
func (m *DeleteIdentificationServiceAreaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIdentificationServiceAreaResponse.Merge(m, src)
}
func (m *DeleteIdentificationServiceAreaResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteIdentificationServiceAreaResponse.Size(m)
}
func (m *DeleteIdentificationServiceAreaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIdentificationServiceAreaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIdentificationServiceAreaResponse proto.InternalMessageInfo

func (m *DeleteIdentificationServiceAreaResponse) GetServiceArea() *IdentificationServiceArea {
	if m != nil {
		return m.ServiceArea
	}
	return nil
}

func (m *DeleteIdentificationServiceAreaResponse) GetSubscribers() []*SubscriberToNotify {
	if m != nil {
		return m.Subscribers
	}
	return nil
}

type DeleteSubscriptionRequest struct {
	// SubscriptionUUID of the subscription of interest.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Will only update an existing entity if the versions are unchanged. Used for idempotent updates.
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubscriptionRequest) Reset()         { *m = DeleteSubscriptionRequest{} }
func (m *DeleteSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSubscriptionRequest) ProtoMessage()    {}
func (*DeleteSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{2}
}

func (m *DeleteSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubscriptionRequest.Unmarshal(m, b)
}
func (m *DeleteSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubscriptionRequest.Merge(m, src)
}
func (m *DeleteSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSubscriptionRequest.Size(m)
}
func (m *DeleteSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubscriptionRequest proto.InternalMessageInfo

func (m *DeleteSubscriptionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteSubscriptionRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Response for a successful request to delete an Subscription.
type DeleteSubscriptionResponse struct {
	// The Subscription which was deleted.
	Subscription         *Subscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeleteSubscriptionResponse) Reset()         { *m = DeleteSubscriptionResponse{} }
func (m *DeleteSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteSubscriptionResponse) ProtoMessage()    {}
func (*DeleteSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{3}
}

func (m *DeleteSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubscriptionResponse.Unmarshal(m, b)
}
func (m *DeleteSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *DeleteSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubscriptionResponse.Merge(m, src)
}
func (m *DeleteSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteSubscriptionResponse.Size(m)
}
func (m *DeleteSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubscriptionResponse proto.InternalMessageInfo

func (m *DeleteSubscriptionResponse) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

// Data provided when an off-nominal condition was encountered.
type ErrorResponse struct {
	// Human-readable message indicating what error occurred and/or why.
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorResponse) Reset()         { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()    {}
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{4}
}

func (m *ErrorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorResponse.Unmarshal(m, b)
}
func (m *ErrorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorResponse.Marshal(b, m, deterministic)
}
func (m *ErrorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorResponse.Merge(m, src)
}
func (m *ErrorResponse) XXX_Size() int {
	return xxx_messageInfo_ErrorResponse.Size(m)
}
func (m *ErrorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorResponse proto.InternalMessageInfo

func (m *ErrorResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// An enclosed area on the earth.
// The bounding edges of this polygon shall be the shortest paths between connected vertices.  This means, for instance, that the edge between two points both defined at a particular latitude is not generally contained at that latitude.
// The winding order shall be interpreted as the order which produces the smaller area.
// The path between two vertices shall be the shortest possible path between those vertices.
// Edges may not cross.
// Vertices may not be duplicated.  In particular, the final polygon vertex shall not be identical to the first vertex.
type GeoPolygon struct {
	Vertices             []*LatLngPoint `protobuf:"bytes,1,rep,name=vertices,proto3" json:"vertices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GeoPolygon) Reset()         { *m = GeoPolygon{} }
func (m *GeoPolygon) String() string { return proto.CompactTextString(m) }
func (*GeoPolygon) ProtoMessage()    {}
func (*GeoPolygon) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{5}
}

func (m *GeoPolygon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeoPolygon.Unmarshal(m, b)
}
func (m *GeoPolygon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeoPolygon.Marshal(b, m, deterministic)
}
func (m *GeoPolygon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeoPolygon.Merge(m, src)
}
func (m *GeoPolygon) XXX_Size() int {
	return xxx_messageInfo_GeoPolygon.Size(m)
}
func (m *GeoPolygon) XXX_DiscardUnknown() {
	xxx_messageInfo_GeoPolygon.DiscardUnknown(m)
}

var xxx_messageInfo_GeoPolygon proto.InternalMessageInfo

func (m *GeoPolygon) GetVertices() []*LatLngPoint {
	if m != nil {
		return m.Vertices
	}
	return nil
}

type GetSubscriptionRequest struct {
	// SubscriptionUUID of the subscription of interest.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSubscriptionRequest) Reset()         { *m = GetSubscriptionRequest{} }
func (m *GetSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*GetSubscriptionRequest) ProtoMessage()    {}
func (*GetSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{6}
}

func (m *GetSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubscriptionRequest.Unmarshal(m, b)
}
func (m *GetSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *GetSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubscriptionRequest.Merge(m, src)
}
func (m *GetSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_GetSubscriptionRequest.Size(m)
}
func (m *GetSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubscriptionRequest proto.InternalMessageInfo

func (m *GetSubscriptionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Response to DSS query for subscriptions in a particular area.
type GetSubscriptionResponse struct {
	Subscription         *Subscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetSubscriptionResponse) Reset()         { *m = GetSubscriptionResponse{} }
func (m *GetSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*GetSubscriptionResponse) ProtoMessage()    {}
func (*GetSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{7}
}

func (m *GetSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubscriptionResponse.Unmarshal(m, b)
}
func (m *GetSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *GetSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubscriptionResponse.Merge(m, src)
}
func (m *GetSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_GetSubscriptionResponse.Size(m)
}
func (m *GetSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubscriptionResponse proto.InternalMessageInfo

func (m *GetSubscriptionResponse) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

// An Identification Service Area (area in which remote ID services are being provided).  The DSS reports only these declarations and clients must exchange flight information peer-to-peer.
type IdentificationServiceArea struct {
	// If set, this subscription will be automatically removed after this time.  RFC 3339 format, per OpenAPI specification.
	EndTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Unique identifier for this service area.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Assigned by the DSS based on creating client’s ID (via access token).  Used for restricting mutation and deletion operations to owner, and only requiring EntitySignatures for unowned Entities.
	Owner string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	// If set, this Subscription will not generate any notifications before this time.  RFC 3339 format, per OpenAPI specification.
	StartTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Url       string               `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// A versioning string which can be used for read-modify-write operations to maintain idempotency.
	Version              string   `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentificationServiceArea) Reset()         { *m = IdentificationServiceArea{} }
func (m *IdentificationServiceArea) String() string { return proto.CompactTextString(m) }
func (*IdentificationServiceArea) ProtoMessage()    {}
func (*IdentificationServiceArea) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{8}
}

func (m *IdentificationServiceArea) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentificationServiceArea.Unmarshal(m, b)
}
func (m *IdentificationServiceArea) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentificationServiceArea.Marshal(b, m, deterministic)
}
func (m *IdentificationServiceArea) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentificationServiceArea.Merge(m, src)
}
func (m *IdentificationServiceArea) XXX_Size() int {
	return xxx_messageInfo_IdentificationServiceArea.Size(m)
}
func (m *IdentificationServiceArea) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentificationServiceArea.DiscardUnknown(m)
}

var xxx_messageInfo_IdentificationServiceArea proto.InternalMessageInfo

func (m *IdentificationServiceArea) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *IdentificationServiceArea) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *IdentificationServiceArea) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *IdentificationServiceArea) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *IdentificationServiceArea) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *IdentificationServiceArea) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Point on the earth's surface.
type LatLngPoint struct {
	Lat                  float64  `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng                  float64  `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatLngPoint) Reset()         { *m = LatLngPoint{} }
func (m *LatLngPoint) String() string { return proto.CompactTextString(m) }
func (*LatLngPoint) ProtoMessage()    {}
func (*LatLngPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{9}
}

func (m *LatLngPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatLngPoint.Unmarshal(m, b)
}
func (m *LatLngPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatLngPoint.Marshal(b, m, deterministic)
}
func (m *LatLngPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatLngPoint.Merge(m, src)
}
func (m *LatLngPoint) XXX_Size() int {
	return xxx_messageInfo_LatLngPoint.Size(m)
}
func (m *LatLngPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_LatLngPoint.DiscardUnknown(m)
}

var xxx_messageInfo_LatLngPoint proto.InternalMessageInfo

func (m *LatLngPoint) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *LatLngPoint) GetLng() float64 {
	if m != nil {
		return m.Lng
	}
	return 0
}

type PatchIdentificationServiceAreaRequest struct {
	// The bounding spacetime extents of this Identification Service Area.  Start and end times must be specified.
	//
	// These extents should not reveal any sensitive information about the flight or flights within them.  This means, for instance, that extents should not tightly-wrap a flight path, nor should they generally be centered around the takeoff point of a single flight.
	Extents *Volume4D `protobuf:"bytes,1,opt,name=extents,proto3" json:"extents,omitempty"`
	// EntityUUID of the Identification Service Area.
	Id  string                `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Url *wrappers.StringValue `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	// Will only update an existing entity if the versions are unchanged. Used for idempotent updates.
	Version              string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatchIdentificationServiceAreaRequest) Reset()         { *m = PatchIdentificationServiceAreaRequest{} }
func (m *PatchIdentificationServiceAreaRequest) String() string { return proto.CompactTextString(m) }
func (*PatchIdentificationServiceAreaRequest) ProtoMessage()    {}
func (*PatchIdentificationServiceAreaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{10}
}

func (m *PatchIdentificationServiceAreaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchIdentificationServiceAreaRequest.Unmarshal(m, b)
}
func (m *PatchIdentificationServiceAreaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchIdentificationServiceAreaRequest.Marshal(b, m, deterministic)
}
func (m *PatchIdentificationServiceAreaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchIdentificationServiceAreaRequest.Merge(m, src)
}
func (m *PatchIdentificationServiceAreaRequest) XXX_Size() int {
	return xxx_messageInfo_PatchIdentificationServiceAreaRequest.Size(m)
}
func (m *PatchIdentificationServiceAreaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchIdentificationServiceAreaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PatchIdentificationServiceAreaRequest proto.InternalMessageInfo

func (m *PatchIdentificationServiceAreaRequest) GetExtents() *Volume4D {
	if m != nil {
		return m.Extents
	}
	return nil
}

func (m *PatchIdentificationServiceAreaRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PatchIdentificationServiceAreaRequest) GetUrl() *wrappers.StringValue {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *PatchIdentificationServiceAreaRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Response to a request to update a reference to an Identification Service Area in the DSS.
type PatchIdentificationServiceAreaResponse struct {
	// Resulting service area stored in DSS.
	ServiceArea *IdentificationServiceArea `protobuf:"bytes,1,opt,name=service_area,json=serviceArea,proto3" json:"service_area,omitempty"`
	// DSS subscribers that this client now has the obligation to notify of the Identification Service Area changes just made.  This client must call PUT for each provided URL according to the `/uss/identification_service_areas/{id}` path API.
	Subscribers          []*SubscriberToNotify `protobuf:"bytes,2,rep,name=subscribers,proto3" json:"subscribers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PatchIdentificationServiceAreaResponse) Reset() {
	*m = PatchIdentificationServiceAreaResponse{}
}
func (m *PatchIdentificationServiceAreaResponse) String() string { return proto.CompactTextString(m) }
func (*PatchIdentificationServiceAreaResponse) ProtoMessage()    {}
func (*PatchIdentificationServiceAreaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{11}
}

func (m *PatchIdentificationServiceAreaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchIdentificationServiceAreaResponse.Unmarshal(m, b)
}
func (m *PatchIdentificationServiceAreaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchIdentificationServiceAreaResponse.Marshal(b, m, deterministic)
}
func (m *PatchIdentificationServiceAreaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchIdentificationServiceAreaResponse.Merge(m, src)
}
func (m *PatchIdentificationServiceAreaResponse) XXX_Size() int {
	return xxx_messageInfo_PatchIdentificationServiceAreaResponse.Size(m)
}
func (m *PatchIdentificationServiceAreaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchIdentificationServiceAreaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PatchIdentificationServiceAreaResponse proto.InternalMessageInfo

func (m *PatchIdentificationServiceAreaResponse) GetServiceArea() *IdentificationServiceArea {
	if m != nil {
		return m.ServiceArea
	}
	return nil
}

func (m *PatchIdentificationServiceAreaResponse) GetSubscribers() []*SubscriberToNotify {
	if m != nil {
		return m.Subscribers
	}
	return nil
}

type PatchSubscriptionRequest struct {
	// The spacetime extents of the volume to subscribe to.
	//
	// This subscription will automatically be deleted after its end time if it has not been refreshed by then.  If end time is not specified, the value will be automatically set to 24 hours in the future.
	//
	// Note that some Entities triggering notifications may lie entirely outside the requested area.
	Extents *Volume4D `protobuf:"bytes,1,opt,name=extents,proto3" json:"extents,omitempty"`
	// SubscriptionUUID of the subscription of interest.  Must be created by client before `PUT` call to create AreaSubscription in DSS because the client may receive a notification at that subscription before receiving a response from the DSS.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Endpoints that should be called when an applicable event occurs.  At least one field must be specified.
	Url *wrappers.StringValue `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	// Will only update an existing entity if the versions are unchanged. Used for idempotent updates.
	Version              string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatchSubscriptionRequest) Reset()         { *m = PatchSubscriptionRequest{} }
func (m *PatchSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*PatchSubscriptionRequest) ProtoMessage()    {}
func (*PatchSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{12}
}

func (m *PatchSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchSubscriptionRequest.Unmarshal(m, b)
}
func (m *PatchSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *PatchSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchSubscriptionRequest.Merge(m, src)
}
func (m *PatchSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_PatchSubscriptionRequest.Size(m)
}
func (m *PatchSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PatchSubscriptionRequest proto.InternalMessageInfo

func (m *PatchSubscriptionRequest) GetExtents() *Volume4D {
	if m != nil {
		return m.Extents
	}
	return nil
}

func (m *PatchSubscriptionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PatchSubscriptionRequest) GetUrl() *wrappers.StringValue {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *PatchSubscriptionRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Response for a request to update a subscription.
type PatchSubscriptionResponse struct {
	// Identification Service Areas in or near the subscription area at the time of creation/update, if `identification_service_area_url` callback was specified.
	ServiceAreas []*IdentificationServiceArea `protobuf:"bytes,1,rep,name=service_areas,json=serviceAreas,proto3" json:"service_areas,omitempty"`
	// Result of the operation on the subscription.
	Subscription         *Subscription `protobuf:"bytes,2,opt,name=subscription,proto3" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PatchSubscriptionResponse) Reset()         { *m = PatchSubscriptionResponse{} }
func (m *PatchSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*PatchSubscriptionResponse) ProtoMessage()    {}
func (*PatchSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{13}
}

func (m *PatchSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchSubscriptionResponse.Unmarshal(m, b)
}
func (m *PatchSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchSubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *PatchSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchSubscriptionResponse.Merge(m, src)
}
func (m *PatchSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_PatchSubscriptionResponse.Size(m)
}
func (m *PatchSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PatchSubscriptionResponse proto.InternalMessageInfo

func (m *PatchSubscriptionResponse) GetServiceAreas() []*IdentificationServiceArea {
	if m != nil {
		return m.ServiceAreas
	}
	return nil
}

func (m *PatchSubscriptionResponse) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

type PutIdentificationServiceAreaRequest struct {
	// The bounding spacetime extents of this Identification Service Area.  Start and end times must be specified.
	//
	// These extents should not reveal any sensitive information about the flight or flights within them.  This means, for instance, that extents should not tightly-wrap a flight path, nor should they generally be centered around the takeoff point of a single flight.
	Extents *Volume4D `protobuf:"bytes,1,opt,name=extents,proto3" json:"extents,omitempty"`
	// EntityUUID of the Identification Service Area.
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutIdentificationServiceAreaRequest) Reset()         { *m = PutIdentificationServiceAreaRequest{} }
func (m *PutIdentificationServiceAreaRequest) String() string { return proto.CompactTextString(m) }
func (*PutIdentificationServiceAreaRequest) ProtoMessage()    {}
func (*PutIdentificationServiceAreaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{14}
}

func (m *PutIdentificationServiceAreaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutIdentificationServiceAreaRequest.Unmarshal(m, b)
}
func (m *PutIdentificationServiceAreaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutIdentificationServiceAreaRequest.Marshal(b, m, deterministic)
}
func (m *PutIdentificationServiceAreaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutIdentificationServiceAreaRequest.Merge(m, src)
}
func (m *PutIdentificationServiceAreaRequest) XXX_Size() int {
	return xxx_messageInfo_PutIdentificationServiceAreaRequest.Size(m)
}
func (m *PutIdentificationServiceAreaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutIdentificationServiceAreaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutIdentificationServiceAreaRequest proto.InternalMessageInfo

func (m *PutIdentificationServiceAreaRequest) GetExtents() *Volume4D {
	if m != nil {
		return m.Extents
	}
	return nil
}

func (m *PutIdentificationServiceAreaRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutIdentificationServiceAreaRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// Response to a request to create a reference to an Identification Service Area in the DSS.
type PutIdentificationServiceAreaResponse struct {
	// Resulting service area stored in DSS.
	ServiceArea *IdentificationServiceArea `protobuf:"bytes,1,opt,name=service_area,json=serviceArea,proto3" json:"service_area,omitempty"`
	// DSS subscribers that this client now has the obligation to notify of the Identification Service Area changes just made.  This client must call PUT for each provided URL according to the `/uss/identification_service_areas/{id}` path API.
	Subscribers          []*SubscriberToNotify `protobuf:"bytes,2,rep,name=subscribers,proto3" json:"subscribers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PutIdentificationServiceAreaResponse) Reset()         { *m = PutIdentificationServiceAreaResponse{} }
func (m *PutIdentificationServiceAreaResponse) String() string { return proto.CompactTextString(m) }
func (*PutIdentificationServiceAreaResponse) ProtoMessage()    {}
func (*PutIdentificationServiceAreaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{15}
}

func (m *PutIdentificationServiceAreaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutIdentificationServiceAreaResponse.Unmarshal(m, b)
}
func (m *PutIdentificationServiceAreaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutIdentificationServiceAreaResponse.Marshal(b, m, deterministic)
}
func (m *PutIdentificationServiceAreaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutIdentificationServiceAreaResponse.Merge(m, src)
}
func (m *PutIdentificationServiceAreaResponse) XXX_Size() int {
	return xxx_messageInfo_PutIdentificationServiceAreaResponse.Size(m)
}
func (m *PutIdentificationServiceAreaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutIdentificationServiceAreaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutIdentificationServiceAreaResponse proto.InternalMessageInfo

func (m *PutIdentificationServiceAreaResponse) GetServiceArea() *IdentificationServiceArea {
	if m != nil {
		return m.ServiceArea
	}
	return nil
}

func (m *PutIdentificationServiceAreaResponse) GetSubscribers() []*SubscriberToNotify {
	if m != nil {
		return m.Subscribers
	}
	return nil
}

type PutSubscriptionRequest struct {
	// The spacetime extents of the volume to subscribe to.
	//
	// This subscription will automatically be deleted after its end time if it has not been refreshed by then.  If end time is not specified, the value will be automatically set to 24 hours in the future.
	//
	// Note that some Entities triggering notifications may lie entirely outside the requested area.
	Extents *Volume4D `protobuf:"bytes,1,opt,name=extents,proto3" json:"extents,omitempty"`
	// SubscriptionUUID of the subscription of interest.  Must be created by client before `PUT` call to create AreaSubscription in DSS because the client may receive a notification at that subscription before receiving a response from the DSS.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Endpoints that should be called when an applicable event occurs.  At least one field must be specified.
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutSubscriptionRequest) Reset()         { *m = PutSubscriptionRequest{} }
func (m *PutSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*PutSubscriptionRequest) ProtoMessage()    {}
func (*PutSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{16}
}

func (m *PutSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutSubscriptionRequest.Unmarshal(m, b)
}
func (m *PutSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *PutSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutSubscriptionRequest.Merge(m, src)
}
func (m *PutSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_PutSubscriptionRequest.Size(m)
}
func (m *PutSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutSubscriptionRequest proto.InternalMessageInfo

func (m *PutSubscriptionRequest) GetExtents() *Volume4D {
	if m != nil {
		return m.Extents
	}
	return nil
}

func (m *PutSubscriptionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutSubscriptionRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// Response for a request to create a subscription.
type PutSubscriptionResponse struct {
	// Identification Service Areas in or near the subscription area at the time of creation/update, if `identification_service_area_url` callback was specified.
	ServiceAreas []*IdentificationServiceArea `protobuf:"bytes,1,rep,name=service_areas,json=serviceAreas,proto3" json:"service_areas,omitempty"`
	// Result of the operation on the subscription.
	Subscription         *Subscription `protobuf:"bytes,2,opt,name=subscription,proto3" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PutSubscriptionResponse) Reset()         { *m = PutSubscriptionResponse{} }
func (m *PutSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*PutSubscriptionResponse) ProtoMessage()    {}
func (*PutSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{17}
}

func (m *PutSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutSubscriptionResponse.Unmarshal(m, b)
}
func (m *PutSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutSubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *PutSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutSubscriptionResponse.Merge(m, src)
}
func (m *PutSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_PutSubscriptionResponse.Size(m)
}
func (m *PutSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutSubscriptionResponse proto.InternalMessageInfo

func (m *PutSubscriptionResponse) GetServiceAreas() []*IdentificationServiceArea {
	if m != nil {
		return m.ServiceAreas
	}
	return nil
}

func (m *PutSubscriptionResponse) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

type SearchIdentificationServiceAreasRequest struct {
	// The area in which to search for Identification Service Areas.  Some Identification Service Areas near this area but wholly outside it may also be returned.
	Area string `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	// If specified, indicates non-interest in any Identification Service Areas that end before this time.  RFC 3339 format, per OpenAPI specification.
	EarliestTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=earliest_time,json=earliestTime,proto3" json:"earliest_time,omitempty"`
	// If specified, indicates non-interest in any Identification Service Areas that start after this time.  RFC 3339 format, per OpenAPI specification.
	LatestTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=latest_time,json=latestTime,proto3" json:"latest_time,omitempty"`
	// If specified, indicates non-interest in Identification Service Areas entirely above this altitude in meters above the WGS84 ellipsoid.
	MaxAltitude *wrappers.DoubleValue `protobuf:"bytes,4,opt,name=max_altitude,json=maxAltitude,proto3" json:"max_altitude,omitempty"`
	// If specified, indicates non-interest in Identification Service Areas entirely below this altitude in meters above the WGS84 ellipsoid.
	MinAltitude          *wrappers.DoubleValue `protobuf:"bytes,5,opt,name=min_altitude,json=minAltitude,proto3" json:"min_altitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SearchIdentificationServiceAreasRequest) Reset() {
	*m = SearchIdentificationServiceAreasRequest{}
}
func (m *SearchIdentificationServiceAreasRequest) String() string { return proto.CompactTextString(m) }
func (*SearchIdentificationServiceAreasRequest) ProtoMessage()    {}
func (*SearchIdentificationServiceAreasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{18}
}

func (m *SearchIdentificationServiceAreasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchIdentificationServiceAreasRequest.Unmarshal(m, b)
}
func (m *SearchIdentificationServiceAreasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchIdentificationServiceAreasRequest.Marshal(b, m, deterministic)
}
func (m *SearchIdentificationServiceAreasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchIdentificationServiceAreasRequest.Merge(m, src)
}
func (m *SearchIdentificationServiceAreasRequest) XXX_Size() int {
	return xxx_messageInfo_SearchIdentificationServiceAreasRequest.Size(m)
}
func (m *SearchIdentificationServiceAreasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchIdentificationServiceAreasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchIdentificationServiceAreasRequest proto.InternalMessageInfo

func (m *SearchIdentificationServiceAreasRequest) GetArea() string {
	if m != nil {
		return m.Area
	}
	return ""
}

func (m *SearchIdentificationServiceAreasRequest) GetEarliestTime() *timestamp.Timestamp {
	if m != nil {
		return m.EarliestTime
	}
	return nil
}

func (m *SearchIdentificationServiceAreasRequest) GetLatestTime() *timestamp.Timestamp {
	if m != nil {
		return m.LatestTime
	}
	return nil
}

func (m *SearchIdentificationServiceAreasRequest) GetMaxAltitude() *wrappers.DoubleValue {
	if m != nil {
		return m.MaxAltitude
	}
	return nil
}

func (m *SearchIdentificationServiceAreasRequest) GetMinAltitude() *wrappers.DoubleValue {
	if m != nil {
		return m.MinAltitude
	}
	return nil
}

// Response to DSS query for Identification Service Areas in an area of interest.
type SearchIdentificationServiceAreasResponse struct {
	// Identification Service Areas in the area of interest.
	ServiceAreas         []*IdentificationServiceArea `protobuf:"bytes,1,rep,name=service_areas,json=serviceAreas,proto3" json:"service_areas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SearchIdentificationServiceAreasResponse) Reset() {
	*m = SearchIdentificationServiceAreasResponse{}
}
func (m *SearchIdentificationServiceAreasResponse) String() string { return proto.CompactTextString(m) }
func (*SearchIdentificationServiceAreasResponse) ProtoMessage()    {}
func (*SearchIdentificationServiceAreasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{19}
}

func (m *SearchIdentificationServiceAreasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchIdentificationServiceAreasResponse.Unmarshal(m, b)
}
func (m *SearchIdentificationServiceAreasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchIdentificationServiceAreasResponse.Marshal(b, m, deterministic)
}
func (m *SearchIdentificationServiceAreasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchIdentificationServiceAreasResponse.Merge(m, src)
}
func (m *SearchIdentificationServiceAreasResponse) XXX_Size() int {
	return xxx_messageInfo_SearchIdentificationServiceAreasResponse.Size(m)
}
func (m *SearchIdentificationServiceAreasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchIdentificationServiceAreasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchIdentificationServiceAreasResponse proto.InternalMessageInfo

func (m *SearchIdentificationServiceAreasResponse) GetServiceAreas() []*IdentificationServiceArea {
	if m != nil {
		return m.ServiceAreas
	}
	return nil
}

type SearchSubscriptionsRequest struct {
	// The area in which to search for Subscriptions.  Some Subscriptions near this area but wholly outside it may also be returned.
	Area string `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	// SubscriptionUUID of the subscription of interest.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// If specified, indicates non-interest in subscriptions for volumes entirely above this altitude in meters above the WGS84 datum.
	MaxAltitude *wrappers.DoubleValue `protobuf:"bytes,3,opt,name=max_altitude,json=maxAltitude,proto3" json:"max_altitude,omitempty"`
	// If specified, indicates non-interest in subscriptions for volumes entirely below this altitude in meters above the WGS84 datum.
	MinAltitude          *wrappers.DoubleValue `protobuf:"bytes,4,opt,name=min_altitude,json=minAltitude,proto3" json:"min_altitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SearchSubscriptionsRequest) Reset()         { *m = SearchSubscriptionsRequest{} }
func (m *SearchSubscriptionsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchSubscriptionsRequest) ProtoMessage()    {}
func (*SearchSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{20}
}

func (m *SearchSubscriptionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSubscriptionsRequest.Unmarshal(m, b)
}
func (m *SearchSubscriptionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSubscriptionsRequest.Marshal(b, m, deterministic)
}
func (m *SearchSubscriptionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSubscriptionsRequest.Merge(m, src)
}
func (m *SearchSubscriptionsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchSubscriptionsRequest.Size(m)
}
func (m *SearchSubscriptionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSubscriptionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSubscriptionsRequest proto.InternalMessageInfo

func (m *SearchSubscriptionsRequest) GetArea() string {
	if m != nil {
		return m.Area
	}
	return ""
}

func (m *SearchSubscriptionsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SearchSubscriptionsRequest) GetMaxAltitude() *wrappers.DoubleValue {
	if m != nil {
		return m.MaxAltitude
	}
	return nil
}

func (m *SearchSubscriptionsRequest) GetMinAltitude() *wrappers.DoubleValue {
	if m != nil {
		return m.MinAltitude
	}
	return nil
}

// Response to DSS query for subscriptions in a particular area.
type SearchSubscriptionsResponse struct {
	// Subscriptions that overlap the specified area.
	Subscriptions        []*Subscription `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SearchSubscriptionsResponse) Reset()         { *m = SearchSubscriptionsResponse{} }
func (m *SearchSubscriptionsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchSubscriptionsResponse) ProtoMessage()    {}
func (*SearchSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{21}
}

func (m *SearchSubscriptionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSubscriptionsResponse.Unmarshal(m, b)
}
func (m *SearchSubscriptionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSubscriptionsResponse.Marshal(b, m, deterministic)
}
func (m *SearchSubscriptionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSubscriptionsResponse.Merge(m, src)
}
func (m *SearchSubscriptionsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchSubscriptionsResponse.Size(m)
}
func (m *SearchSubscriptionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSubscriptionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSubscriptionsResponse proto.InternalMessageInfo

func (m *SearchSubscriptionsResponse) GetSubscriptions() []*Subscription {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

// Subscriber to notify of a creation/change/deletion of a change in the airspace.  This is provided by the DSS to a client changing the airspace, and it is the responsibility of the client changing the airspace (they will receive a set of these notification requests) to send a notification to each specified `url`.
type SubscriberToNotify struct {
	// Subscription(s) prompting this notification.
	Subscriptions []*SubscriptionState `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	// The endpoint that the client mutating the airspace should provide the update to.  API depends on the DSS action taken that triggered this notification request.
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriberToNotify) Reset()         { *m = SubscriberToNotify{} }
func (m *SubscriberToNotify) String() string { return proto.CompactTextString(m) }
func (*SubscriberToNotify) ProtoMessage()    {}
func (*SubscriberToNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{22}
}

func (m *SubscriberToNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriberToNotify.Unmarshal(m, b)
}
func (m *SubscriberToNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriberToNotify.Marshal(b, m, deterministic)
}
func (m *SubscriberToNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriberToNotify.Merge(m, src)
}
func (m *SubscriberToNotify) XXX_Size() int {
	return xxx_messageInfo_SubscriberToNotify.Size(m)
}
func (m *SubscriberToNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriberToNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriberToNotify proto.InternalMessageInfo

func (m *SubscriberToNotify) GetSubscriptions() []*SubscriptionState {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

func (m *SubscriberToNotify) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// Specification of a geographic area that a client is interested in on an ongoing basis (e.g., “planning area”).  Internal to the DSS.
type Subscription struct {
	// If set, this subscription will be automatically removed after this time.  RFC 3339 format, per OpenAPI specification.
	EndTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Unique identifier for this subscription.
	Id                string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	NotificationIndex int32  `protobuf:"varint,3,opt,name=notification_index,json=notificationIndex,proto3" json:"notification_index,omitempty"`
	// Assigned by the DSS based on creating client’s ID (via access token).  Used for restricting mutation and deletion operations to owner.
	Owner string `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	// If set, this Subscription will not generate any notifications before this time.  RFC 3339 format, per OpenAPI specification.
	StartTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Url       string               `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	// A versioning string which can be used for read-modify-write operations to maintain idempotency.
	Version              string   `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{23}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *Subscription) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Subscription) GetNotificationIndex() int32 {
	if m != nil {
		return m.NotificationIndex
	}
	return 0
}

func (m *Subscription) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Subscription) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Subscription) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Subscription) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// State of AreaSubscription which is causing a notification to be sent.
type SubscriptionState struct {
	NotificationIndex    int32    `protobuf:"varint,1,opt,name=notification_index,json=notificationIndex,proto3" json:"notification_index,omitempty"`
	Subscription         string   `protobuf:"bytes,2,opt,name=subscription,proto3" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionState) Reset()         { *m = SubscriptionState{} }
func (m *SubscriptionState) String() string { return proto.CompactTextString(m) }
func (*SubscriptionState) ProtoMessage()    {}
func (*SubscriptionState) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{24}
}

func (m *SubscriptionState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionState.Unmarshal(m, b)
}
func (m *SubscriptionState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionState.Marshal(b, m, deterministic)
}
func (m *SubscriptionState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionState.Merge(m, src)
}
func (m *SubscriptionState) XXX_Size() int {
	return xxx_messageInfo_SubscriptionState.Size(m)
}
func (m *SubscriptionState) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionState.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionState proto.InternalMessageInfo

func (m *SubscriptionState) GetNotificationIndex() int32 {
	if m != nil {
		return m.NotificationIndex
	}
	return 0
}

func (m *SubscriptionState) GetSubscription() string {
	if m != nil {
		return m.Subscription
	}
	return ""
}

// A three-dimensional geographic volume consisting of a vertically-extruded polygon.
type Volume3D struct {
	// Maximum bounding altitude of this volume.
	AltitudeHi *wrappers.FloatValue `protobuf:"bytes,1,opt,name=altitude_hi,json=altitudeHi,proto3" json:"altitude_hi,omitempty"`
	// Minimum bounding altitude of this volume.
	AltitudeLo *wrappers.FloatValue `protobuf:"bytes,2,opt,name=altitude_lo,json=altitudeLo,proto3" json:"altitude_lo,omitempty"`
	// Projection of this volume onto the earth's surface.
	Footprint            *GeoPolygon `protobuf:"bytes,3,opt,name=footprint,proto3" json:"footprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Volume3D) Reset()         { *m = Volume3D{} }
func (m *Volume3D) String() string { return proto.CompactTextString(m) }
func (*Volume3D) ProtoMessage()    {}
func (*Volume3D) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{25}
}

func (m *Volume3D) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume3D.Unmarshal(m, b)
}
func (m *Volume3D) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume3D.Marshal(b, m, deterministic)
}
func (m *Volume3D) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume3D.Merge(m, src)
}
func (m *Volume3D) XXX_Size() int {
	return xxx_messageInfo_Volume3D.Size(m)
}
func (m *Volume3D) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume3D.DiscardUnknown(m)
}

var xxx_messageInfo_Volume3D proto.InternalMessageInfo

func (m *Volume3D) GetAltitudeHi() *wrappers.FloatValue {
	if m != nil {
		return m.AltitudeHi
	}
	return nil
}

func (m *Volume3D) GetAltitudeLo() *wrappers.FloatValue {
	if m != nil {
		return m.AltitudeLo
	}
	return nil
}

func (m *Volume3D) GetFootprint() *GeoPolygon {
	if m != nil {
		return m.Footprint
	}
	return nil
}

// Contiguous block of geographic spacetime.
type Volume4D struct {
	EndTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Constant spatial extent of this volume.
	SpatialVolume        *Volume3D            `protobuf:"bytes,2,opt,name=spatial_volume,json=spatialVolume,proto3" json:"spatial_volume,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Volume4D) Reset()         { *m = Volume4D{} }
func (m *Volume4D) String() string { return proto.CompactTextString(m) }
func (*Volume4D) ProtoMessage()    {}
func (*Volume4D) Descriptor() ([]byte, []int) {
	return fileDescriptor_50a719c7b7123a29, []int{26}
}

func (m *Volume4D) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume4D.Unmarshal(m, b)
}
func (m *Volume4D) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume4D.Marshal(b, m, deterministic)
}
func (m *Volume4D) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume4D.Merge(m, src)
}
func (m *Volume4D) XXX_Size() int {
	return xxx_messageInfo_Volume4D.Size(m)
}
func (m *Volume4D) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume4D.DiscardUnknown(m)
}

var xxx_messageInfo_Volume4D proto.InternalMessageInfo

func (m *Volume4D) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *Volume4D) GetSpatialVolume() *Volume3D {
	if m != nil {
		return m.SpatialVolume
	}
	return nil
}

func (m *Volume4D) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func init() {
	proto.RegisterType((*DeleteIdentificationServiceAreaRequest)(nil), "dssproto.DeleteIdentificationServiceAreaRequest")
	proto.RegisterType((*DeleteIdentificationServiceAreaResponse)(nil), "dssproto.DeleteIdentificationServiceAreaResponse")
	proto.RegisterType((*DeleteSubscriptionRequest)(nil), "dssproto.DeleteSubscriptionRequest")
	proto.RegisterType((*DeleteSubscriptionResponse)(nil), "dssproto.DeleteSubscriptionResponse")
	proto.RegisterType((*ErrorResponse)(nil), "dssproto.ErrorResponse")
	proto.RegisterType((*GeoPolygon)(nil), "dssproto.GeoPolygon")
	proto.RegisterType((*GetSubscriptionRequest)(nil), "dssproto.GetSubscriptionRequest")
	proto.RegisterType((*GetSubscriptionResponse)(nil), "dssproto.GetSubscriptionResponse")
	proto.RegisterType((*IdentificationServiceArea)(nil), "dssproto.IdentificationServiceArea")
	proto.RegisterType((*LatLngPoint)(nil), "dssproto.LatLngPoint")
	proto.RegisterType((*PatchIdentificationServiceAreaRequest)(nil), "dssproto.PatchIdentificationServiceAreaRequest")
	proto.RegisterType((*PatchIdentificationServiceAreaResponse)(nil), "dssproto.PatchIdentificationServiceAreaResponse")
	proto.RegisterType((*PatchSubscriptionRequest)(nil), "dssproto.PatchSubscriptionRequest")
	proto.RegisterType((*PatchSubscriptionResponse)(nil), "dssproto.PatchSubscriptionResponse")
	proto.RegisterType((*PutIdentificationServiceAreaRequest)(nil), "dssproto.PutIdentificationServiceAreaRequest")
	proto.RegisterType((*PutIdentificationServiceAreaResponse)(nil), "dssproto.PutIdentificationServiceAreaResponse")
	proto.RegisterType((*PutSubscriptionRequest)(nil), "dssproto.PutSubscriptionRequest")
	proto.RegisterType((*PutSubscriptionResponse)(nil), "dssproto.PutSubscriptionResponse")
	proto.RegisterType((*SearchIdentificationServiceAreasRequest)(nil), "dssproto.SearchIdentificationServiceAreasRequest")
	proto.RegisterType((*SearchIdentificationServiceAreasResponse)(nil), "dssproto.SearchIdentificationServiceAreasResponse")
	proto.RegisterType((*SearchSubscriptionsRequest)(nil), "dssproto.SearchSubscriptionsRequest")
	proto.RegisterType((*SearchSubscriptionsResponse)(nil), "dssproto.SearchSubscriptionsResponse")
	proto.RegisterType((*SubscriberToNotify)(nil), "dssproto.SubscriberToNotify")
	proto.RegisterType((*Subscription)(nil), "dssproto.Subscription")
	proto.RegisterType((*SubscriptionState)(nil), "dssproto.SubscriptionState")
	proto.RegisterType((*Volume3D)(nil), "dssproto.Volume3D")
	proto.RegisterType((*Volume4D)(nil), "dssproto.Volume4D")
}

func init() { proto.RegisterFile("dss.proto", fileDescriptor_50a719c7b7123a29) }

var fileDescriptor_50a719c7b7123a29 = []byte{
	// 1258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0x5b, 0x6f, 0x1b, 0x45,
	0x14, 0xd6, 0xda, 0x49, 0x13, 0x1f, 0x3b, 0xbd, 0x0c, 0xa5, 0x75, 0xb6, 0x51, 0x9b, 0x6e, 0x7a,
	0x49, 0x2b, 0x6a, 0x37, 0x6e, 0x11, 0x6a, 0xa9, 0xa8, 0x22, 0xb9, 0x37, 0xa9, 0x42, 0xd1, 0xba,
	0x54, 0x48, 0x3c, 0x58, 0x13, 0xef, 0xc4, 0x19, 0x69, 0x3d, 0x63, 0x76, 0xc6, 0x69, 0x02, 0x02,
	0x01, 0x0f, 0x48, 0x3c, 0xf3, 0x03, 0x10, 0x3c, 0xf0, 0xc8, 0x45, 0x42, 0x20, 0x21, 0x10, 0x12,
	0x7f, 0x81, 0x1f, 0xc0, 0x0b, 0x3f, 0x04, 0x79, 0x76, 0xd6, 0x7b, 0xb5, 0xd7, 0x2e, 0x41, 0xca,
	0xdb, 0xee, 0xec, 0x39, 0x67, 0xbe, 0xf3, 0xcd, 0x77, 0xce, 0x9e, 0x81, 0x92, 0x23, 0x44, 0xad,
	0xef, 0x71, 0xc9, 0xd1, 0xa2, 0x23, 0x84, 0x7a, 0x32, 0x57, 0xba, 0x9c, 0x77, 0x5d, 0x52, 0xc7,
	0x7d, 0x5a, 0xc7, 0x8c, 0x71, 0x89, 0x25, 0xe5, 0x4c, 0xdb, 0x99, 0x17, 0xf4, 0x57, 0xf5, 0xb6,
	0x3d, 0xd8, 0xa9, 0x4b, 0xda, 0x23, 0x42, 0xe2, 0x5e, 0x5f, 0x1b, 0x9c, 0x4f, 0x1a, 0xbc, 0xf0,
	0x70, 0xbf, 0x4f, 0x3c, 0x1d, 0xc0, 0xb2, 0xe1, 0x4a, 0x93, 0xb8, 0x44, 0x92, 0x27, 0x0e, 0x61,
	0x92, 0xee, 0xd0, 0x8e, 0x8a, 0xdf, 0x22, 0xde, 0x1e, 0xed, 0x90, 0x4d, 0x8f, 0x60, 0x9b, 0xbc,
	0x3f, 0x20, 0x42, 0xa2, 0xe3, 0x50, 0xa0, 0x4e, 0xd5, 0x58, 0x35, 0xd6, 0x4b, 0x76, 0x81, 0x3a,
	0xa8, 0x0a, 0x0b, 0x7b, 0xc4, 0x13, 0x94, 0xb3, 0x6a, 0x41, 0x2d, 0x06, 0xaf, 0xd6, 0x8f, 0x06,
	0x5c, 0xcd, 0x0d, 0x2a, 0xfa, 0x9c, 0x09, 0x82, 0x1e, 0x42, 0x45, 0xf8, 0xcb, 0x6d, 0xec, 0x11,
	0xac, 0xe2, 0x97, 0x1b, 0x6b, 0xb5, 0x20, 0xff, 0xda, 0xf8, 0x10, 0x65, 0x11, 0xbe, 0xa0, 0xb7,
	0xa0, 0x2c, 0x06, 0xdb, 0xa2, 0xe3, 0xd1, 0x6d, 0xe2, 0x89, 0x6a, 0x61, 0xb5, 0xb8, 0x5e, 0x6e,
	0xac, 0x84, 0x61, 0x5a, 0xa3, 0x8f, 0xcf, 0xf8, 0xdb, 0x5c, 0xd2, 0x9d, 0x03, 0x3b, 0xea, 0x60,
	0x3d, 0x80, 0x65, 0x1f, 0xb2, 0x36, 0xec, 0x0f, 0x77, 0x9b, 0x3d, 0xf5, 0x77, 0xc1, 0xcc, 0x0a,
	0xa3, 0x93, 0xbd, 0x0b, 0x15, 0x11, 0x59, 0xd7, 0xc9, 0x9e, 0x49, 0xa1, 0xf4, 0xbd, 0x62, 0xb6,
	0xd6, 0x35, 0x58, 0x7a, 0xe0, 0x79, 0xdc, 0x1b, 0x05, 0xab, 0xc2, 0x42, 0x8f, 0x08, 0x81, 0xbb,
	0x44, 0x23, 0x0b, 0x5e, 0xad, 0xfb, 0x00, 0x8f, 0x08, 0xdf, 0xe2, 0xee, 0x41, 0x97, 0x33, 0xb4,
	0x01, 0x8b, 0x7b, 0xc4, 0x93, 0xb4, 0x43, 0x44, 0xd5, 0x50, 0xb4, 0xbc, 0x1a, 0x6e, 0xf8, 0x14,
	0xcb, 0xa7, 0xac, 0xbb, 0xc5, 0x29, 0x93, 0xf6, 0xc8, 0xcc, 0x5a, 0x87, 0x33, 0x8f, 0x88, 0x9c,
	0x82, 0x09, 0xeb, 0x1d, 0x38, 0x9b, 0xb2, 0x3c, 0x84, 0x64, 0xff, 0x36, 0x60, 0x79, 0xec, 0xc1,
	0xa3, 0xd7, 0x61, 0x91, 0x30, 0xa7, 0x3d, 0x94, 0xba, 0x8e, 0x6a, 0xd6, 0x7c, 0x99, 0xd7, 0x02,
	0x99, 0xd7, 0x9e, 0x05, 0x75, 0x60, 0x2f, 0x10, 0xe6, 0x0c, 0xdf, 0x34, 0xf6, 0xc2, 0xe8, 0x14,
	0x4f, 0xc3, 0x3c, 0x7f, 0xc1, 0x88, 0x57, 0x2d, 0xaa, 0x25, 0xff, 0x05, 0xdd, 0x01, 0x10, 0x12,
	0x7b, 0xd2, 0x0f, 0x3f, 0x97, 0x1b, 0xbe, 0xa4, 0xac, 0xd5, 0x06, 0x27, 0xa1, 0x38, 0xf0, 0xdc,
	0xea, 0xbc, 0x0a, 0x37, 0x7c, 0x8c, 0x0a, 0xe5, 0x58, 0x5c, 0x28, 0x1b, 0x50, 0x8e, 0x70, 0x3f,
	0x74, 0x75, 0xb1, 0x54, 0xd9, 0x18, 0xf6, 0xf0, 0x51, 0xad, 0xb0, 0xae, 0x82, 0x3b, 0x5c, 0x61,
	0x5d, 0xeb, 0x7b, 0x03, 0x2e, 0x6f, 0x61, 0xd9, 0xd9, 0xcd, 0x2d, 0xd5, 0xd7, 0x60, 0x81, 0xec,
	0x4b, 0xc2, 0xa4, 0xd0, 0xfc, 0xa0, 0x90, 0xf5, 0xe7, 0xdc, 0x1d, 0xf4, 0xc8, 0xed, 0xa6, 0x1d,
	0x98, 0xa4, 0x78, 0xa9, 0xf9, 0x69, 0x14, 0x95, 0xe7, 0x4a, 0x2a, 0xf5, 0x96, 0xf4, 0x28, 0xeb,
	0x3e, 0xc7, 0xee, 0x80, 0xa4, 0x92, 0x9c, 0x8b, 0x27, 0xf9, 0x83, 0x01, 0x57, 0xf2, 0x10, 0x1f,
	0xb1, 0x3e, 0xf0, 0x8d, 0x01, 0x55, 0x05, 0x39, 0x4b, 0xfd, 0x47, 0x85, 0xd7, 0xaf, 0x0d, 0x58,
	0xce, 0x00, 0xa9, 0xa9, 0x7c, 0x0c, 0x4b, 0x51, 0x2a, 0x83, 0xaa, 0x9f, 0x8a, 0xcb, 0x4a, 0x84,
	0x4b, 0x91, 0x2a, 0xe1, 0xc2, 0x0c, 0x25, 0x3c, 0x80, 0xb5, 0xad, 0x81, 0xfc, 0x9f, 0xa5, 0x7a,
	0x32, 0xa4, 0xd4, 0xaf, 0x38, 0xeb, 0x3b, 0x03, 0x2e, 0x4d, 0xde, 0xf7, 0x88, 0x09, 0x6e, 0x17,
	0xce, 0x6c, 0x0d, 0xe4, 0xe1, 0xab, 0x2d, 0x4d, 0xcd, 0x57, 0x06, 0x9c, 0x4d, 0x6d, 0x75, 0xa4,
	0x34, 0xf3, 0x7b, 0x01, 0xae, 0xb6, 0x08, 0xf6, 0x26, 0x34, 0x0c, 0x11, 0xb0, 0x83, 0x60, 0x6e,
	0x74, 0x6e, 0x25, 0x5b, 0x3d, 0xa3, 0xfb, 0xb0, 0x44, 0xb0, 0xe7, 0x52, 0x22, 0x74, 0xfb, 0x2e,
	0xe4, 0xb6, 0xef, 0x4a, 0xe0, 0xa0, 0x3a, 0xf8, 0x9b, 0x50, 0x76, 0xb1, 0x1c, 0xb9, 0x17, 0x73,
	0xdd, 0xc1, 0x37, 0x57, 0xce, 0xf7, 0xa1, 0xd2, 0xc3, 0xfb, 0x6d, 0xec, 0x4a, 0x2a, 0x07, 0x4e,
	0xf0, 0xef, 0x48, 0x17, 0x7a, 0x93, 0x0f, 0xb6, 0x5d, 0xe2, 0x17, 0x7a, 0xb9, 0x87, 0xf7, 0x37,
	0xb5, 0x83, 0x0a, 0x40, 0x59, 0x18, 0x60, 0x7e, 0xaa, 0x00, 0x94, 0x05, 0x01, 0x2c, 0x09, 0xeb,
	0xf9, 0xf4, 0x1d, 0xf6, 0x89, 0x5b, 0x7f, 0x1a, 0x60, 0xfa, 0xdb, 0x46, 0x8f, 0x76, 0xe2, 0x41,
	0x25, 0xc5, 0x9a, 0xa4, 0xae, 0xf8, 0x5f, 0xa9, 0x9b, 0x9b, 0x95, 0xba, 0xf7, 0xe0, 0x5c, 0x66,
	0x0e, 0x9a, 0xad, 0x7b, 0xb0, 0x14, 0x55, 0x6a, 0xc0, 0xd6, 0x38, 0x59, 0xc7, 0x8d, 0x2d, 0x0a,
	0x28, 0xdd, 0x06, 0xd0, 0x66, 0x76, 0xcc, 0x73, 0xd9, 0x31, 0x5b, 0x12, 0x4b, 0x92, 0x08, 0x1c,
	0x14, 0x79, 0x21, 0x2c, 0xf2, 0x4f, 0x0b, 0x50, 0x89, 0xba, 0x1d, 0xd6, 0xb0, 0x74, 0x03, 0x10,
	0xe3, 0xa1, 0x1a, 0xda, 0x94, 0x39, 0x64, 0x5f, 0x9d, 0xd3, 0xbc, 0x7d, 0x2a, 0xfa, 0xe5, 0xc9,
	0xf0, 0x43, 0x38, 0x5b, 0xcd, 0x8d, 0x9f, 0xad, 0xe6, 0x5f, 0x62, 0xb6, 0x3a, 0x96, 0x39, 0x5b,
	0x2d, 0xc4, 0x7f, 0x8f, 0x3b, 0x70, 0x2a, 0xc5, 0xdc, 0x98, 0x04, 0x8c, 0x71, 0x09, 0x58, 0x19,
	0x6d, 0xac, 0x94, 0x68, 0x57, 0xbf, 0x1a, 0xb0, 0xe8, 0x37, 0xe2, 0x5b, 0x4d, 0x74, 0x0f, 0xca,
	0x81, 0xfa, 0xda, 0xbb, 0x54, 0x53, 0x7d, 0x2e, 0x95, 0xdc, 0x43, 0x97, 0x63, 0xe9, 0xeb, 0x0f,
	0x02, 0xfb, 0xc7, 0x34, 0xe6, 0xed, 0x72, 0xdd, 0xb7, 0xa6, 0xf3, 0x7e, 0xca, 0x51, 0x03, 0x4a,
	0x3b, 0x9c, 0xcb, 0xbe, 0x47, 0x99, 0xd4, 0xb5, 0x73, 0x3a, 0x54, 0x51, 0x78, 0x17, 0xb0, 0x43,
	0x33, 0xeb, 0x97, 0x11, 0xf8, 0xdb, 0xcd, 0x97, 0x15, 0xc9, 0x1d, 0x38, 0x2e, 0xfa, 0x58, 0x52,
	0xec, 0xb6, 0xf7, 0x54, 0x28, 0x0d, 0x3c, 0xf5, 0xa3, 0xba, 0xd5, 0xb4, 0x97, 0xb4, 0xa5, 0xbf,
	0x90, 0x90, 0x42, 0x71, 0x06, 0x29, 0x34, 0xbe, 0x2d, 0x83, 0xd5, 0xa4, 0xa2, 0xc3, 0xf7, 0x88,
	0x77, 0xb0, 0xc9, 0x9c, 0xd6, 0x01, 0xeb, 0xec, 0x7a, 0x9c, 0xd1, 0x0f, 0xa2, 0x8d, 0x0a, 0xfd,
	0x61, 0xc0, 0x85, 0x9c, 0x5b, 0x28, 0xba, 0x19, 0x02, 0x9d, 0xee, 0x16, 0x6c, 0x6e, 0xcc, 0xe0,
	0xe1, 0xf7, 0x0e, 0xeb, 0x8d, 0xcf, 0xfe, 0xfa, 0xe7, 0xcb, 0xc2, 0xc6, 0xf5, 0x2b, 0x75, 0x47,
	0x88, 0x3a, 0x8d, 0xd9, 0xb7, 0x63, 0x3d, 0xb8, 0xfe, 0x21, 0x75, 0x3e, 0xba, 0x1b, 0xe8, 0x18,
	0x7d, 0x61, 0x00, 0x4a, 0xdf, 0x26, 0xd1, 0x5a, 0x12, 0x42, 0xc6, 0xf0, 0x60, 0x5e, 0x9a, 0x6c,
	0xa4, 0xa1, 0xad, 0x2b, 0x68, 0xd6, 0xf5, 0xb3, 0x0a, 0x5a, 0xac, 0xb7, 0x24, 0xb0, 0xbc, 0x80,
	0x13, 0x89, 0x8b, 0x1e, 0x5a, 0x8d, 0x4a, 0x2c, 0x6b, 0x82, 0x31, 0x2f, 0x4e, 0xb0, 0xd0, 0x08,
	0x2e, 0x28, 0x04, 0xcb, 0x68, 0x1c, 0x02, 0xf4, 0x9b, 0x01, 0xe7, 0x27, 0xdf, 0x21, 0x50, 0x3d,
	0xdc, 0x66, 0xaa, 0xfb, 0x91, 0x79, 0x73, 0x7a, 0x87, 0xf8, 0x19, 0x36, 0xa6, 0x3e, 0xc3, 0x60,
	0x2c, 0xfb, 0xdc, 0x80, 0x53, 0xa9, 0x51, 0x1d, 0x59, 0x09, 0x00, 0x59, 0xe4, 0xad, 0x4d, 0xb4,
	0x89, 0x1f, 0x60, 0x63, 0xfc, 0x01, 0x06, 0x40, 0x7e, 0x36, 0x60, 0x65, 0xd2, 0x60, 0x8c, 0x6e,
	0x44, 0xf6, 0xcb, 0x1f, 0xdc, 0xcd, 0xda, 0xb4, 0xe6, 0x71, 0x06, 0xcd, 0x99, 0x19, 0xfc, 0xc4,
	0x80, 0x13, 0x89, 0xb1, 0x35, 0x2a, 0xbd, 0xec, 0xe1, 0x39, 0x2a, 0xbd, 0x31, 0x33, 0x6f, 0xc0,
	0x9d, 0x99, 0xcf, 0xdd, 0x4f, 0x06, 0xac, 0xe6, 0x0d, 0x56, 0x28, 0xd2, 0x19, 0xa6, 0x9c, 0x61,
	0xcd, 0xc6, 0x2c, 0x2e, 0x1a, 0xf5, 0x35, 0x85, 0x7a, 0x0d, 0x5d, 0xcc, 0xe5, 0x11, 0x7d, 0x0c,
	0xaf, 0x64, 0xcc, 0x34, 0xe8, 0x52, 0x72, 0xd7, 0xac, 0xb1, 0xcd, 0xbc, 0x9c, 0x63, 0xa5, 0xe1,
	0x98, 0x0a, 0xce, 0x69, 0x84, 0xd2, 0x24, 0x6e, 0x1f, 0x53, 0xee, 0xb7, 0xfe, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0x37, 0x3a, 0x6b, 0x09, 0xd8, 0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiscoveryAndSynchronizationServiceClient is the client API for DiscoveryAndSynchronizationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscoveryAndSynchronizationServiceClient interface {
	// /dss/identification_service_areas/{id}
	//
	// Delete an Identification Service Area.  USSs should not delete Identification Service Areas before the end of the last managed flight plus the retention period.
	DeleteIdentificationServiceArea(ctx context.Context, in *DeleteIdentificationServiceAreaRequest, opts ...grpc.CallOption) (*DeleteIdentificationServiceAreaResponse, error)
	// /dss/subscriptions/{id}
	//
	// Delete a subscription.
	DeleteSubscription(ctx context.Context, in *DeleteSubscriptionRequest, opts ...grpc.CallOption) (*DeleteSubscriptionResponse, error)
	// /dss/subscriptions/{id}
	//
	// Verify the existence/valdity and state of a particular subscription.
	GetSubscription(ctx context.Context, in *GetSubscriptionRequest, opts ...grpc.CallOption) (*GetSubscriptionResponse, error)
	// /dss/identification_service_areas/{id}
	//
	// Update an Identification Service Area.
	//
	// The DSS assumes the USS has already added the appropriate retention period to operation end time in `end_time` field before storing it.  Updating `start_time` is not allowed if it is before the current time.
	PatchIdentificationServiceArea(ctx context.Context, in *PatchIdentificationServiceAreaRequest, opts ...grpc.CallOption) (*PatchIdentificationServiceAreaResponse, error)
	// /dss/subscriptions/{id}
	//
	// Update a subscription.  Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.
	PatchSubscription(ctx context.Context, in *PatchSubscriptionRequest, opts ...grpc.CallOption) (*PatchSubscriptionResponse, error)
	// /dss/identification_service_areas/{id}
	//
	// Create an Identification Service Area.
	//
	// The DSS assumes the USS has already added the appropriate retention period to operation end time in `end_time` field before storing it.  Updating `start_time` is not allowed if it is before the current time.
	PutIdentificationServiceArea(ctx context.Context, in *PutIdentificationServiceAreaRequest, opts ...grpc.CallOption) (*PutIdentificationServiceAreaResponse, error)
	// /dss/subscriptions/{id}
	//
	// Create a subscription.  Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.
	PutSubscription(ctx context.Context, in *PutSubscriptionRequest, opts ...grpc.CallOption) (*PutSubscriptionResponse, error)
	// /dss/identification_service_areas
	//
	// Retrieve all Identification Service Areas in the DAR for a given area during the given time.  Note that some Identification Service Areas returned may lie entirely outside the requested area.
	SearchIdentificationServiceAreas(ctx context.Context, in *SearchIdentificationServiceAreasRequest, opts ...grpc.CallOption) (*SearchIdentificationServiceAreasResponse, error)
	// /dss/subscriptions
	//
	// Retrieve subscriptions intersecting an area of interest.  Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.
	//
	// Only Subscriptions belonging to the caller are returned.  This endpoint would be used if a USS lost track of Subscriptions they had created and/or wanted to resolve an error indicating that they had too many existing Subscriptions in an area.
	SearchSubscriptions(ctx context.Context, in *SearchSubscriptionsRequest, opts ...grpc.CallOption) (*SearchSubscriptionsResponse, error)
}

type discoveryAndSynchronizationServiceClient struct {
	cc *grpc.ClientConn
}

func NewDiscoveryAndSynchronizationServiceClient(cc *grpc.ClientConn) DiscoveryAndSynchronizationServiceClient {
	return &discoveryAndSynchronizationServiceClient{cc}
}

func (c *discoveryAndSynchronizationServiceClient) DeleteIdentificationServiceArea(ctx context.Context, in *DeleteIdentificationServiceAreaRequest, opts ...grpc.CallOption) (*DeleteIdentificationServiceAreaResponse, error) {
	out := new(DeleteIdentificationServiceAreaResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/DeleteIdentificationServiceArea", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) DeleteSubscription(ctx context.Context, in *DeleteSubscriptionRequest, opts ...grpc.CallOption) (*DeleteSubscriptionResponse, error) {
	out := new(DeleteSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/DeleteSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) GetSubscription(ctx context.Context, in *GetSubscriptionRequest, opts ...grpc.CallOption) (*GetSubscriptionResponse, error) {
	out := new(GetSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/GetSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) PatchIdentificationServiceArea(ctx context.Context, in *PatchIdentificationServiceAreaRequest, opts ...grpc.CallOption) (*PatchIdentificationServiceAreaResponse, error) {
	out := new(PatchIdentificationServiceAreaResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/PatchIdentificationServiceArea", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) PatchSubscription(ctx context.Context, in *PatchSubscriptionRequest, opts ...grpc.CallOption) (*PatchSubscriptionResponse, error) {
	out := new(PatchSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/PatchSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) PutIdentificationServiceArea(ctx context.Context, in *PutIdentificationServiceAreaRequest, opts ...grpc.CallOption) (*PutIdentificationServiceAreaResponse, error) {
	out := new(PutIdentificationServiceAreaResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/PutIdentificationServiceArea", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) PutSubscription(ctx context.Context, in *PutSubscriptionRequest, opts ...grpc.CallOption) (*PutSubscriptionResponse, error) {
	out := new(PutSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/PutSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) SearchIdentificationServiceAreas(ctx context.Context, in *SearchIdentificationServiceAreasRequest, opts ...grpc.CallOption) (*SearchIdentificationServiceAreasResponse, error) {
	out := new(SearchIdentificationServiceAreasResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/SearchIdentificationServiceAreas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoveryAndSynchronizationServiceClient) SearchSubscriptions(ctx context.Context, in *SearchSubscriptionsRequest, opts ...grpc.CallOption) (*SearchSubscriptionsResponse, error) {
	out := new(SearchSubscriptionsResponse)
	err := c.cc.Invoke(ctx, "/dssproto.DiscoveryAndSynchronizationService/SearchSubscriptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiscoveryAndSynchronizationServiceServer is the server API for DiscoveryAndSynchronizationService service.
type DiscoveryAndSynchronizationServiceServer interface {
	// /dss/identification_service_areas/{id}
	//
	// Delete an Identification Service Area.  USSs should not delete Identification Service Areas before the end of the last managed flight plus the retention period.
	DeleteIdentificationServiceArea(context.Context, *DeleteIdentificationServiceAreaRequest) (*DeleteIdentificationServiceAreaResponse, error)
	// /dss/subscriptions/{id}
	//
	// Delete a subscription.
	DeleteSubscription(context.Context, *DeleteSubscriptionRequest) (*DeleteSubscriptionResponse, error)
	// /dss/subscriptions/{id}
	//
	// Verify the existence/valdity and state of a particular subscription.
	GetSubscription(context.Context, *GetSubscriptionRequest) (*GetSubscriptionResponse, error)
	// /dss/identification_service_areas/{id}
	//
	// Update an Identification Service Area.
	//
	// The DSS assumes the USS has already added the appropriate retention period to operation end time in `end_time` field before storing it.  Updating `start_time` is not allowed if it is before the current time.
	PatchIdentificationServiceArea(context.Context, *PatchIdentificationServiceAreaRequest) (*PatchIdentificationServiceAreaResponse, error)
	// /dss/subscriptions/{id}
	//
	// Update a subscription.  Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.
	PatchSubscription(context.Context, *PatchSubscriptionRequest) (*PatchSubscriptionResponse, error)
	// /dss/identification_service_areas/{id}
	//
	// Create an Identification Service Area.
	//
	// The DSS assumes the USS has already added the appropriate retention period to operation end time in `end_time` field before storing it.  Updating `start_time` is not allowed if it is before the current time.
	PutIdentificationServiceArea(context.Context, *PutIdentificationServiceAreaRequest) (*PutIdentificationServiceAreaResponse, error)
	// /dss/subscriptions/{id}
	//
	// Create a subscription.  Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.
	PutSubscription(context.Context, *PutSubscriptionRequest) (*PutSubscriptionResponse, error)
	// /dss/identification_service_areas
	//
	// Retrieve all Identification Service Areas in the DAR for a given area during the given time.  Note that some Identification Service Areas returned may lie entirely outside the requested area.
	SearchIdentificationServiceAreas(context.Context, *SearchIdentificationServiceAreasRequest) (*SearchIdentificationServiceAreasResponse, error)
	// /dss/subscriptions
	//
	// Retrieve subscriptions intersecting an area of interest.  Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.
	//
	// Only Subscriptions belonging to the caller are returned.  This endpoint would be used if a USS lost track of Subscriptions they had created and/or wanted to resolve an error indicating that they had too many existing Subscriptions in an area.
	SearchSubscriptions(context.Context, *SearchSubscriptionsRequest) (*SearchSubscriptionsResponse, error)
}

// UnimplementedDiscoveryAndSynchronizationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDiscoveryAndSynchronizationServiceServer struct {
}

func (*UnimplementedDiscoveryAndSynchronizationServiceServer) DeleteIdentificationServiceArea(ctx context.Context, req *DeleteIdentificationServiceAreaRequest) (*DeleteIdentificationServiceAreaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteIdentificationServiceArea not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) DeleteSubscription(ctx context.Context, req *DeleteSubscriptionRequest) (*DeleteSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSubscription not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) GetSubscription(ctx context.Context, req *GetSubscriptionRequest) (*GetSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubscription not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) PatchIdentificationServiceArea(ctx context.Context, req *PatchIdentificationServiceAreaRequest) (*PatchIdentificationServiceAreaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchIdentificationServiceArea not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) PatchSubscription(ctx context.Context, req *PatchSubscriptionRequest) (*PatchSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchSubscription not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) PutIdentificationServiceArea(ctx context.Context, req *PutIdentificationServiceAreaRequest) (*PutIdentificationServiceAreaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutIdentificationServiceArea not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) PutSubscription(ctx context.Context, req *PutSubscriptionRequest) (*PutSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutSubscription not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) SearchIdentificationServiceAreas(ctx context.Context, req *SearchIdentificationServiceAreasRequest) (*SearchIdentificationServiceAreasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchIdentificationServiceAreas not implemented")
}
func (*UnimplementedDiscoveryAndSynchronizationServiceServer) SearchSubscriptions(ctx context.Context, req *SearchSubscriptionsRequest) (*SearchSubscriptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchSubscriptions not implemented")
}

func RegisterDiscoveryAndSynchronizationServiceServer(s *grpc.Server, srv DiscoveryAndSynchronizationServiceServer) {
	s.RegisterService(&_DiscoveryAndSynchronizationService_serviceDesc, srv)
}

func _DiscoveryAndSynchronizationService_DeleteIdentificationServiceArea_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIdentificationServiceAreaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).DeleteIdentificationServiceArea(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/DeleteIdentificationServiceArea",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).DeleteIdentificationServiceArea(ctx, req.(*DeleteIdentificationServiceAreaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_DeleteSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).DeleteSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/DeleteSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).DeleteSubscription(ctx, req.(*DeleteSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_GetSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).GetSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/GetSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).GetSubscription(ctx, req.(*GetSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_PatchIdentificationServiceArea_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PatchIdentificationServiceAreaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).PatchIdentificationServiceArea(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/PatchIdentificationServiceArea",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).PatchIdentificationServiceArea(ctx, req.(*PatchIdentificationServiceAreaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_PatchSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PatchSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).PatchSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/PatchSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).PatchSubscription(ctx, req.(*PatchSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_PutIdentificationServiceArea_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutIdentificationServiceAreaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).PutIdentificationServiceArea(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/PutIdentificationServiceArea",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).PutIdentificationServiceArea(ctx, req.(*PutIdentificationServiceAreaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_PutSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).PutSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/PutSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).PutSubscription(ctx, req.(*PutSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_SearchIdentificationServiceAreas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchIdentificationServiceAreasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).SearchIdentificationServiceAreas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/SearchIdentificationServiceAreas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).SearchIdentificationServiceAreas(ctx, req.(*SearchIdentificationServiceAreasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoveryAndSynchronizationService_SearchSubscriptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchSubscriptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryAndSynchronizationServiceServer).SearchSubscriptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dssproto.DiscoveryAndSynchronizationService/SearchSubscriptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryAndSynchronizationServiceServer).SearchSubscriptions(ctx, req.(*SearchSubscriptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiscoveryAndSynchronizationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dssproto.DiscoveryAndSynchronizationService",
	HandlerType: (*DiscoveryAndSynchronizationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteIdentificationServiceArea",
			Handler:    _DiscoveryAndSynchronizationService_DeleteIdentificationServiceArea_Handler,
		},
		{
			MethodName: "DeleteSubscription",
			Handler:    _DiscoveryAndSynchronizationService_DeleteSubscription_Handler,
		},
		{
			MethodName: "GetSubscription",
			Handler:    _DiscoveryAndSynchronizationService_GetSubscription_Handler,
		},
		{
			MethodName: "PatchIdentificationServiceArea",
			Handler:    _DiscoveryAndSynchronizationService_PatchIdentificationServiceArea_Handler,
		},
		{
			MethodName: "PatchSubscription",
			Handler:    _DiscoveryAndSynchronizationService_PatchSubscription_Handler,
		},
		{
			MethodName: "PutIdentificationServiceArea",
			Handler:    _DiscoveryAndSynchronizationService_PutIdentificationServiceArea_Handler,
		},
		{
			MethodName: "PutSubscription",
			Handler:    _DiscoveryAndSynchronizationService_PutSubscription_Handler,
		},
		{
			MethodName: "SearchIdentificationServiceAreas",
			Handler:    _DiscoveryAndSynchronizationService_SearchIdentificationServiceAreas_Handler,
		},
		{
			MethodName: "SearchSubscriptions",
			Handler:    _DiscoveryAndSynchronizationService_SearchSubscriptions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dss.proto",
}
